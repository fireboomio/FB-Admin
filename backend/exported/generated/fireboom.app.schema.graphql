type Query {
  system_getAllRoles: [system_QueryGetAllRoles]
  system_getRoleBindApis(code: String!, roleType: system_Query_getRoleBindApis_roleType): [system_QueryGetRoleBindApis]
  system_getAllApis: [system_QueryGetAllApis]
  statistics_GetMonthlySales: [statistics_GetMonthlySales]
  statistics_GetSaleTypePercent: [statistics_GetSaleTypePercent]
  statistics_GetSalesTop10: [statistics_GetSalesTop10]
  statistics_GetVisitTrending: [statistics_GetVisitTrending]
  main_findFirstadmin_apilog(where: main_admin_apilogWhereInput, orderBy: [main_admin_apilogOrderByWithRelationInput], cursor: main_admin_apilogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_apilogScalarFieldEnum]): main_admin_apilog
  main_findFirstadmin_apilogOrThrow(where: main_admin_apilogWhereInput, orderBy: [main_admin_apilogOrderByWithRelationInput], cursor: main_admin_apilogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_apilogScalarFieldEnum]): main_admin_apilog
  main_findManyadmin_apilog(where: main_admin_apilogWhereInput, orderBy: [main_admin_apilogOrderByWithRelationInput], cursor: main_admin_apilogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_apilogScalarFieldEnum]): [main_admin_apilog]!
  main_aggregateadmin_apilog(where: main_admin_apilogWhereInput, orderBy: [main_admin_apilogOrderByWithRelationInput], cursor: main_admin_apilogWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_apilog!
  main_groupByadmin_apilog(where: main_admin_apilogWhereInput, orderBy: [main_admin_apilogOrderByWithAggregationInput], by: [main_Admin_apilogScalarFieldEnum]!, having: main_admin_apilogScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_apilogGroupByOutputType]!
  main_findUniqueadmin_apilog(where: main_admin_apilogWhereUniqueInput!): main_admin_apilog
  main_findUniqueadmin_apilogOrThrow(where: main_admin_apilogWhereUniqueInput!): main_admin_apilog
  main_findFirstadmin_category(where: main_admin_categoryWhereInput, orderBy: [main_admin_categoryOrderByWithRelationInput], cursor: main_admin_categoryWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_categoryScalarFieldEnum]): main_admin_category
  main_findFirstadmin_categoryOrThrow(where: main_admin_categoryWhereInput, orderBy: [main_admin_categoryOrderByWithRelationInput], cursor: main_admin_categoryWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_categoryScalarFieldEnum]): main_admin_category
  main_findManyadmin_category(where: main_admin_categoryWhereInput, orderBy: [main_admin_categoryOrderByWithRelationInput], cursor: main_admin_categoryWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_categoryScalarFieldEnum]): [main_admin_category]!
  main_aggregateadmin_category(where: main_admin_categoryWhereInput, orderBy: [main_admin_categoryOrderByWithRelationInput], cursor: main_admin_categoryWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_category!
  main_groupByadmin_category(where: main_admin_categoryWhereInput, orderBy: [main_admin_categoryOrderByWithAggregationInput], by: [main_Admin_categoryScalarFieldEnum]!, having: main_admin_categoryScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_categoryGroupByOutputType]!
  main_findUniqueadmin_category(where: main_admin_categoryWhereUniqueInput!): main_admin_category
  main_findUniqueadmin_categoryOrThrow(where: main_admin_categoryWhereUniqueInput!): main_admin_category
  main_findFirstadmin_menu(where: main_admin_menuWhereInput, orderBy: [main_admin_menuOrderByWithRelationInput], cursor: main_admin_menuWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_menuScalarFieldEnum]): main_admin_menu
  main_findFirstadmin_menuOrThrow(where: main_admin_menuWhereInput, orderBy: [main_admin_menuOrderByWithRelationInput], cursor: main_admin_menuWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_menuScalarFieldEnum]): main_admin_menu
  main_findManyadmin_menu(where: main_admin_menuWhereInput, orderBy: [main_admin_menuOrderByWithRelationInput], cursor: main_admin_menuWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_menuScalarFieldEnum]): [main_admin_menu]!
  main_aggregateadmin_menu(where: main_admin_menuWhereInput, orderBy: [main_admin_menuOrderByWithRelationInput], cursor: main_admin_menuWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_menu!
  main_groupByadmin_menu(where: main_admin_menuWhereInput, orderBy: [main_admin_menuOrderByWithAggregationInput], by: [main_Admin_menuScalarFieldEnum]!, having: main_admin_menuScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_menuGroupByOutputType]!
  main_findUniqueadmin_menu(where: main_admin_menuWhereUniqueInput!): main_admin_menu
  main_findUniqueadmin_menuOrThrow(where: main_admin_menuWhereUniqueInput!): main_admin_menu
  main_findFirstadmin_post(where: main_admin_postWhereInput, orderBy: [main_admin_postOrderByWithRelationInput], cursor: main_admin_postWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_postScalarFieldEnum]): main_admin_post
  main_findFirstadmin_postOrThrow(where: main_admin_postWhereInput, orderBy: [main_admin_postOrderByWithRelationInput], cursor: main_admin_postWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_postScalarFieldEnum]): main_admin_post
  main_findManyadmin_post(where: main_admin_postWhereInput, orderBy: [main_admin_postOrderByWithRelationInput], cursor: main_admin_postWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_postScalarFieldEnum]): [main_admin_post]!
  main_aggregateadmin_post(where: main_admin_postWhereInput, orderBy: [main_admin_postOrderByWithRelationInput], cursor: main_admin_postWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_post!
  main_groupByadmin_post(where: main_admin_postWhereInput, orderBy: [main_admin_postOrderByWithAggregationInput], by: [main_Admin_postScalarFieldEnum]!, having: main_admin_postScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_postGroupByOutputType]!
  main_findUniqueadmin_post(where: main_admin_postWhereUniqueInput!): main_admin_post
  main_findUniqueadmin_postOrThrow(where: main_admin_postWhereUniqueInput!): main_admin_post
  main_findFirstadmin_salelog(where: main_admin_salelogWhereInput, orderBy: [main_admin_salelogOrderByWithRelationInput], cursor: main_admin_salelogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_salelogScalarFieldEnum]): main_admin_salelog
  main_findFirstadmin_salelogOrThrow(where: main_admin_salelogWhereInput, orderBy: [main_admin_salelogOrderByWithRelationInput], cursor: main_admin_salelogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_salelogScalarFieldEnum]): main_admin_salelog
  main_findManyadmin_salelog(where: main_admin_salelogWhereInput, orderBy: [main_admin_salelogOrderByWithRelationInput], cursor: main_admin_salelogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_salelogScalarFieldEnum]): [main_admin_salelog]!
  main_aggregateadmin_salelog(where: main_admin_salelogWhereInput, orderBy: [main_admin_salelogOrderByWithRelationInput], cursor: main_admin_salelogWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_salelog!
  main_groupByadmin_salelog(where: main_admin_salelogWhereInput, orderBy: [main_admin_salelogOrderByWithAggregationInput], by: [main_Admin_salelogScalarFieldEnum]!, having: main_admin_salelogScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_salelogGroupByOutputType]!
  main_findUniqueadmin_salelog(where: main_admin_salelogWhereUniqueInput!): main_admin_salelog
  main_findUniqueadmin_salelogOrThrow(where: main_admin_salelogWhereUniqueInput!): main_admin_salelog
  main_findFirstadmin_saletype(where: main_admin_saletypeWhereInput, orderBy: [main_admin_saletypeOrderByWithRelationInput], cursor: main_admin_saletypeWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_saletypeScalarFieldEnum]): main_admin_saletype
  main_findFirstadmin_saletypeOrThrow(where: main_admin_saletypeWhereInput, orderBy: [main_admin_saletypeOrderByWithRelationInput], cursor: main_admin_saletypeWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_saletypeScalarFieldEnum]): main_admin_saletype
  main_findManyadmin_saletype(where: main_admin_saletypeWhereInput, orderBy: [main_admin_saletypeOrderByWithRelationInput], cursor: main_admin_saletypeWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_saletypeScalarFieldEnum]): [main_admin_saletype]!
  main_aggregateadmin_saletype(where: main_admin_saletypeWhereInput, orderBy: [main_admin_saletypeOrderByWithRelationInput], cursor: main_admin_saletypeWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_saletype!
  main_groupByadmin_saletype(where: main_admin_saletypeWhereInput, orderBy: [main_admin_saletypeOrderByWithAggregationInput], by: [main_Admin_saletypeScalarFieldEnum]!, having: main_admin_saletypeScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_saletypeGroupByOutputType]!
  main_findUniqueadmin_saletype(where: main_admin_saletypeWhereUniqueInput!): main_admin_saletype
  main_findUniqueadmin_saletypeOrThrow(where: main_admin_saletypeWhereUniqueInput!): main_admin_saletype
  main_findFirstadmin_sub(where: main_admin_subWhereInput, orderBy: [main_admin_subOrderByWithRelationInput], cursor: main_admin_subWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_subScalarFieldEnum]): main_admin_sub
  main_findFirstadmin_subOrThrow(where: main_admin_subWhereInput, orderBy: [main_admin_subOrderByWithRelationInput], cursor: main_admin_subWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_subScalarFieldEnum]): main_admin_sub
  main_findManyadmin_sub(where: main_admin_subWhereInput, orderBy: [main_admin_subOrderByWithRelationInput], cursor: main_admin_subWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_subScalarFieldEnum]): [main_admin_sub]!
  main_aggregateadmin_sub(where: main_admin_subWhereInput, orderBy: [main_admin_subOrderByWithRelationInput], cursor: main_admin_subWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_sub!
  main_groupByadmin_sub(where: main_admin_subWhereInput, orderBy: [main_admin_subOrderByWithAggregationInput], by: [main_Admin_subScalarFieldEnum]!, having: main_admin_subScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_subGroupByOutputType]!
  main_findUniqueadmin_sub(where: main_admin_subWhereUniqueInput!): main_admin_sub
  main_findUniqueadmin_subOrThrow(where: main_admin_subWhereUniqueInput!): main_admin_sub
  main_findFirstadmin_visitlog(where: main_admin_visitlogWhereInput, orderBy: [main_admin_visitlogOrderByWithRelationInput], cursor: main_admin_visitlogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_visitlogScalarFieldEnum]): main_admin_visitlog
  main_findFirstadmin_visitlogOrThrow(where: main_admin_visitlogWhereInput, orderBy: [main_admin_visitlogOrderByWithRelationInput], cursor: main_admin_visitlogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_visitlogScalarFieldEnum]): main_admin_visitlog
  main_findManyadmin_visitlog(where: main_admin_visitlogWhereInput, orderBy: [main_admin_visitlogOrderByWithRelationInput], cursor: main_admin_visitlogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_visitlogScalarFieldEnum]): [main_admin_visitlog]!
  main_aggregateadmin_visitlog(where: main_admin_visitlogWhereInput, orderBy: [main_admin_visitlogOrderByWithRelationInput], cursor: main_admin_visitlogWhereUniqueInput, take: Int, skip: Int): main_AggregateAdmin_visitlog!
  main_groupByadmin_visitlog(where: main_admin_visitlogWhereInput, orderBy: [main_admin_visitlogOrderByWithAggregationInput], by: [main_Admin_visitlogScalarFieldEnum]!, having: main_admin_visitlogScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Admin_visitlogGroupByOutputType]!
  main_findUniqueadmin_visitlog(where: main_admin_visitlogWhereUniqueInput!): main_admin_visitlog
  main_findUniqueadmin_visitlogOrThrow(where: main_admin_visitlogWhereUniqueInput!): main_admin_visitlog
  main_findFirstdic(where: main_dicWhereInput, orderBy: [main_dicOrderByWithRelationInput], cursor: main_dicWhereUniqueInput, take: Int, skip: Int, distinct: [main_DicScalarFieldEnum]): main_dic
  main_findFirstdicOrThrow(where: main_dicWhereInput, orderBy: [main_dicOrderByWithRelationInput], cursor: main_dicWhereUniqueInput, take: Int, skip: Int, distinct: [main_DicScalarFieldEnum]): main_dic
  main_findManydic(where: main_dicWhereInput, orderBy: [main_dicOrderByWithRelationInput], cursor: main_dicWhereUniqueInput, take: Int, skip: Int, distinct: [main_DicScalarFieldEnum]): [main_dic]!
  main_aggregatedic(where: main_dicWhereInput, orderBy: [main_dicOrderByWithRelationInput], cursor: main_dicWhereUniqueInput, take: Int, skip: Int): main_AggregateDic!
  main_groupBydic(where: main_dicWhereInput, orderBy: [main_dicOrderByWithAggregationInput], by: [main_DicScalarFieldEnum]!, having: main_dicScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_DicGroupByOutputType]!
  main_findUniquedic(where: main_dicWhereUniqueInput!): main_dic
  main_findUniquedicOrThrow(where: main_dicWhereUniqueInput!): main_dic
  main_findFirstmenu_role(where: main_menu_roleWhereInput, orderBy: [main_menu_roleOrderByWithRelationInput], cursor: main_menu_roleWhereUniqueInput, take: Int, skip: Int, distinct: [main_Menu_roleScalarFieldEnum]): main_menu_role
  main_findFirstmenu_roleOrThrow(where: main_menu_roleWhereInput, orderBy: [main_menu_roleOrderByWithRelationInput], cursor: main_menu_roleWhereUniqueInput, take: Int, skip: Int, distinct: [main_Menu_roleScalarFieldEnum]): main_menu_role
  main_findManymenu_role(where: main_menu_roleWhereInput, orderBy: [main_menu_roleOrderByWithRelationInput], cursor: main_menu_roleWhereUniqueInput, take: Int, skip: Int, distinct: [main_Menu_roleScalarFieldEnum]): [main_menu_role]!
  main_aggregatemenu_role(where: main_menu_roleWhereInput, orderBy: [main_menu_roleOrderByWithRelationInput], cursor: main_menu_roleWhereUniqueInput, take: Int, skip: Int): main_AggregateMenu_role!
  main_groupBymenu_role(where: main_menu_roleWhereInput, orderBy: [main_menu_roleOrderByWithAggregationInput], by: [main_Menu_roleScalarFieldEnum]!, having: main_menu_roleScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Menu_roleGroupByOutputType]!
  main_findUniquemenu_role(where: main_menu_roleWhereUniqueInput!): main_menu_role
  main_findUniquemenu_roleOrThrow(where: main_menu_roleWhereUniqueInput!): main_menu_role
  main_findFirstpermission(where: main_permissionWhereInput, orderBy: [main_permissionOrderByWithRelationInput], cursor: main_permissionWhereUniqueInput, take: Int, skip: Int, distinct: [main_PermissionScalarFieldEnum]): main_permission
  main_findFirstpermissionOrThrow(where: main_permissionWhereInput, orderBy: [main_permissionOrderByWithRelationInput], cursor: main_permissionWhereUniqueInput, take: Int, skip: Int, distinct: [main_PermissionScalarFieldEnum]): main_permission
  main_findManypermission(where: main_permissionWhereInput, orderBy: [main_permissionOrderByWithRelationInput], cursor: main_permissionWhereUniqueInput, take: Int, skip: Int, distinct: [main_PermissionScalarFieldEnum]): [main_permission]!
  main_aggregatepermission(where: main_permissionWhereInput, orderBy: [main_permissionOrderByWithRelationInput], cursor: main_permissionWhereUniqueInput, take: Int, skip: Int): main_AggregatePermission!
  main_groupBypermission(where: main_permissionWhereInput, orderBy: [main_permissionOrderByWithAggregationInput], by: [main_PermissionScalarFieldEnum]!, having: main_permissionScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_PermissionGroupByOutputType]!
  main_findUniquepermission(where: main_permissionWhereUniqueInput!): main_permission
  main_findUniquepermissionOrThrow(where: main_permissionWhereUniqueInput!): main_permission
  main_findFirstprovider(where: main_providerWhereInput, orderBy: [main_providerOrderByWithRelationInput], cursor: main_providerWhereUniqueInput, take: Int, skip: Int, distinct: [main_ProviderScalarFieldEnum]): main_provider
  main_findFirstproviderOrThrow(where: main_providerWhereInput, orderBy: [main_providerOrderByWithRelationInput], cursor: main_providerWhereUniqueInput, take: Int, skip: Int, distinct: [main_ProviderScalarFieldEnum]): main_provider
  main_findManyprovider(where: main_providerWhereInput, orderBy: [main_providerOrderByWithRelationInput], cursor: main_providerWhereUniqueInput, take: Int, skip: Int, distinct: [main_ProviderScalarFieldEnum]): [main_provider]!
  main_aggregateprovider(where: main_providerWhereInput, orderBy: [main_providerOrderByWithRelationInput], cursor: main_providerWhereUniqueInput, take: Int, skip: Int): main_AggregateProvider!
  main_groupByprovider(where: main_providerWhereInput, orderBy: [main_providerOrderByWithAggregationInput], by: [main_ProviderScalarFieldEnum]!, having: main_providerScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_ProviderGroupByOutputType]!
  main_findUniqueprovider(where: main_providerWhereUniqueInput!): main_provider
  main_findUniqueproviderOrThrow(where: main_providerWhereUniqueInput!): main_provider
  main_findFirstrole(where: main_roleWhereInput, orderBy: [main_roleOrderByWithRelationInput], cursor: main_roleWhereUniqueInput, take: Int, skip: Int, distinct: [main_RoleScalarFieldEnum]): main_role
  main_findFirstroleOrThrow(where: main_roleWhereInput, orderBy: [main_roleOrderByWithRelationInput], cursor: main_roleWhereUniqueInput, take: Int, skip: Int, distinct: [main_RoleScalarFieldEnum]): main_role
  main_findManyrole(where: main_roleWhereInput, orderBy: [main_roleOrderByWithRelationInput], cursor: main_roleWhereUniqueInput, take: Int, skip: Int, distinct: [main_RoleScalarFieldEnum]): [main_role]!
  main_aggregaterole(where: main_roleWhereInput, orderBy: [main_roleOrderByWithRelationInput], cursor: main_roleWhereUniqueInput, take: Int, skip: Int): main_AggregateRole!
  main_groupByrole(where: main_roleWhereInput, orderBy: [main_roleOrderByWithAggregationInput], by: [main_RoleScalarFieldEnum]!, having: main_roleScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_RoleGroupByOutputType]!
  main_findUniquerole(where: main_roleWhereUniqueInput!): main_role
  main_findUniqueroleOrThrow(where: main_roleWhereUniqueInput!): main_role
  main_findFirstrole_user(where: main_role_userWhereInput, orderBy: [main_role_userOrderByWithRelationInput], cursor: main_role_userWhereUniqueInput, take: Int, skip: Int, distinct: [main_Role_userScalarFieldEnum]): main_role_user
  main_findFirstrole_userOrThrow(where: main_role_userWhereInput, orderBy: [main_role_userOrderByWithRelationInput], cursor: main_role_userWhereUniqueInput, take: Int, skip: Int, distinct: [main_Role_userScalarFieldEnum]): main_role_user
  main_findManyrole_user(where: main_role_userWhereInput, orderBy: [main_role_userOrderByWithRelationInput], cursor: main_role_userWhereUniqueInput, take: Int, skip: Int, distinct: [main_Role_userScalarFieldEnum]): [main_role_user]!
  main_aggregaterole_user(where: main_role_userWhereInput, orderBy: [main_role_userOrderByWithRelationInput], cursor: main_role_userWhereUniqueInput, take: Int, skip: Int): main_AggregateRole_user!
  main_groupByrole_user(where: main_role_userWhereInput, orderBy: [main_role_userOrderByWithAggregationInput], by: [main_Role_userScalarFieldEnum]!, having: main_role_userScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Role_userGroupByOutputType]!
  main_findUniquerole_user(where: main_role_userWhereUniqueInput!): main_role_user
  main_findUniquerole_userOrThrow(where: main_role_userWhereUniqueInput!): main_role_user
  main_findFirstuser(where: main_userWhereInput, orderBy: [main_userOrderByWithRelationInput], cursor: main_userWhereUniqueInput, take: Int, skip: Int, distinct: [main_UserScalarFieldEnum]): main_user
  main_findFirstuserOrThrow(where: main_userWhereInput, orderBy: [main_userOrderByWithRelationInput], cursor: main_userWhereUniqueInput, take: Int, skip: Int, distinct: [main_UserScalarFieldEnum]): main_user
  main_findManyuser(where: main_userWhereInput, orderBy: [main_userOrderByWithRelationInput], cursor: main_userWhereUniqueInput, take: Int, skip: Int, distinct: [main_UserScalarFieldEnum]): [main_user]!
  main_aggregateuser(where: main_userWhereInput, orderBy: [main_userOrderByWithRelationInput], cursor: main_userWhereUniqueInput, take: Int, skip: Int): main_AggregateUser!
  main_groupByuser(where: main_userWhereInput, orderBy: [main_userOrderByWithAggregationInput], by: [main_UserScalarFieldEnum]!, having: main_userScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_UserGroupByOutputType]!
  main_findUniqueuser(where: main_userWhereUniqueInput!): main_user
  main_findUniqueuserOrThrow(where: main_userWhereUniqueInput!): main_user
  main_findFirstverification_record(where: main_verification_recordWhereInput, orderBy: [main_verification_recordOrderByWithRelationInput], cursor: main_verification_recordWhereUniqueInput, take: Int, skip: Int, distinct: [main_Verification_recordScalarFieldEnum]): main_verification_record
  main_findFirstverification_recordOrThrow(where: main_verification_recordWhereInput, orderBy: [main_verification_recordOrderByWithRelationInput], cursor: main_verification_recordWhereUniqueInput, take: Int, skip: Int, distinct: [main_Verification_recordScalarFieldEnum]): main_verification_record
  main_findManyverification_record(where: main_verification_recordWhereInput, orderBy: [main_verification_recordOrderByWithRelationInput], cursor: main_verification_recordWhereUniqueInput, take: Int, skip: Int, distinct: [main_Verification_recordScalarFieldEnum]): [main_verification_record]!
  main_aggregateverification_record(where: main_verification_recordWhereInput, orderBy: [main_verification_recordOrderByWithRelationInput], cursor: main_verification_recordWhereUniqueInput, take: Int, skip: Int): main_AggregateVerification_record!
  main_groupByverification_record(where: main_verification_recordWhereInput, orderBy: [main_verification_recordOrderByWithAggregationInput], by: [main_Verification_recordScalarFieldEnum]!, having: main_verification_recordScalarWhereWithAggregatesInput, take: Int, skip: Int): [main_Verification_recordGroupByOutputType]!
  main_findUniqueverification_record(where: main_verification_recordWhereUniqueInput!): main_verification_record
  main_findUniqueverification_recordOrThrow(where: main_verification_recordWhereUniqueInput!): main_verification_record
  casdoor_apiUserInfo: casdoor_objectUserinfo
}

type Mutation {
  system_bindRoleApis(POSTApiV1RoleBindApiInput: system_POSTApiV1RoleBindApiInput): system_MutationBindRoleApis
  system_unBindRoleApis(POSTApiV1RoleUnbindApiInput: system_POSTApiV1RoleUnbindApiInput): system_MutationUnBindRoleApis
  main_createOneadmin_apilog(data: main_admin_apilogCreateInput!): main_admin_apilog
  main_upsertOneadmin_apilog(where: main_admin_apilogWhereUniqueInput!, create: main_admin_apilogCreateInput!, update: main_admin_apilogUpdateInput!): main_admin_apilog
  main_createManyadmin_apilog(data: [main_admin_apilogCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_apilog(where: main_admin_apilogWhereUniqueInput!): main_admin_apilog
  main_updateOneadmin_apilog(data: main_admin_apilogUpdateInput!, where: main_admin_apilogWhereUniqueInput!): main_admin_apilog
  main_updateManyadmin_apilog(data: main_admin_apilogUpdateManyMutationInput!, where: main_admin_apilogWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_apilog(where: main_admin_apilogWhereInput): main_AffectedRowsOutput
  main_createOneadmin_category(data: main_admin_categoryCreateInput!): main_admin_category
  main_upsertOneadmin_category(where: main_admin_categoryWhereUniqueInput!, create: main_admin_categoryCreateInput!, update: main_admin_categoryUpdateInput!): main_admin_category
  main_createManyadmin_category(data: [main_admin_categoryCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_category(where: main_admin_categoryWhereUniqueInput!): main_admin_category
  main_updateOneadmin_category(data: main_admin_categoryUpdateInput!, where: main_admin_categoryWhereUniqueInput!): main_admin_category
  main_updateManyadmin_category(data: main_admin_categoryUpdateManyMutationInput!, where: main_admin_categoryWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_category(where: main_admin_categoryWhereInput): main_AffectedRowsOutput
  main_createOneadmin_menu(data: main_admin_menuCreateInput!): main_admin_menu
  main_upsertOneadmin_menu(where: main_admin_menuWhereUniqueInput!, create: main_admin_menuCreateInput!, update: main_admin_menuUpdateInput!): main_admin_menu
  main_createManyadmin_menu(data: [main_admin_menuCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_menu(where: main_admin_menuWhereUniqueInput!): main_admin_menu
  main_updateOneadmin_menu(data: main_admin_menuUpdateInput!, where: main_admin_menuWhereUniqueInput!): main_admin_menu
  main_updateManyadmin_menu(data: main_admin_menuUpdateManyMutationInput!, where: main_admin_menuWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_menu(where: main_admin_menuWhereInput): main_AffectedRowsOutput
  main_createOneadmin_post(data: main_admin_postCreateInput!): main_admin_post
  main_upsertOneadmin_post(where: main_admin_postWhereUniqueInput!, create: main_admin_postCreateInput!, update: main_admin_postUpdateInput!): main_admin_post
  main_createManyadmin_post(data: [main_admin_postCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_post(where: main_admin_postWhereUniqueInput!): main_admin_post
  main_updateOneadmin_post(data: main_admin_postUpdateInput!, where: main_admin_postWhereUniqueInput!): main_admin_post
  main_updateManyadmin_post(data: main_admin_postUpdateManyMutationInput!, where: main_admin_postWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_post(where: main_admin_postWhereInput): main_AffectedRowsOutput
  main_createOneadmin_salelog(data: main_admin_salelogCreateInput!): main_admin_salelog
  main_upsertOneadmin_salelog(where: main_admin_salelogWhereUniqueInput!, create: main_admin_salelogCreateInput!, update: main_admin_salelogUpdateInput!): main_admin_salelog
  main_createManyadmin_salelog(data: [main_admin_salelogCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_salelog(where: main_admin_salelogWhereUniqueInput!): main_admin_salelog
  main_updateOneadmin_salelog(data: main_admin_salelogUpdateInput!, where: main_admin_salelogWhereUniqueInput!): main_admin_salelog
  main_updateManyadmin_salelog(data: main_admin_salelogUpdateManyMutationInput!, where: main_admin_salelogWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_salelog(where: main_admin_salelogWhereInput): main_AffectedRowsOutput
  main_createOneadmin_saletype(data: main_admin_saletypeCreateInput!): main_admin_saletype
  main_upsertOneadmin_saletype(where: main_admin_saletypeWhereUniqueInput!, create: main_admin_saletypeCreateInput!, update: main_admin_saletypeUpdateInput!): main_admin_saletype
  main_createManyadmin_saletype(data: [main_admin_saletypeCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_saletype(where: main_admin_saletypeWhereUniqueInput!): main_admin_saletype
  main_updateOneadmin_saletype(data: main_admin_saletypeUpdateInput!, where: main_admin_saletypeWhereUniqueInput!): main_admin_saletype
  main_updateManyadmin_saletype(data: main_admin_saletypeUpdateManyMutationInput!, where: main_admin_saletypeWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_saletype(where: main_admin_saletypeWhereInput): main_AffectedRowsOutput
  main_createOneadmin_sub(data: main_admin_subCreateInput!): main_admin_sub
  main_upsertOneadmin_sub(where: main_admin_subWhereUniqueInput!, create: main_admin_subCreateInput!, update: main_admin_subUpdateInput!): main_admin_sub
  main_createManyadmin_sub(data: [main_admin_subCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_sub(where: main_admin_subWhereUniqueInput!): main_admin_sub
  main_updateOneadmin_sub(data: main_admin_subUpdateInput!, where: main_admin_subWhereUniqueInput!): main_admin_sub
  main_updateManyadmin_sub(data: main_admin_subUpdateManyMutationInput!, where: main_admin_subWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_sub(where: main_admin_subWhereInput): main_AffectedRowsOutput
  main_createOneadmin_visitlog(data: main_admin_visitlogCreateInput!): main_admin_visitlog
  main_upsertOneadmin_visitlog(where: main_admin_visitlogWhereUniqueInput!, create: main_admin_visitlogCreateInput!, update: main_admin_visitlogUpdateInput!): main_admin_visitlog
  main_createManyadmin_visitlog(data: [main_admin_visitlogCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneadmin_visitlog(where: main_admin_visitlogWhereUniqueInput!): main_admin_visitlog
  main_updateOneadmin_visitlog(data: main_admin_visitlogUpdateInput!, where: main_admin_visitlogWhereUniqueInput!): main_admin_visitlog
  main_updateManyadmin_visitlog(data: main_admin_visitlogUpdateManyMutationInput!, where: main_admin_visitlogWhereInput): main_AffectedRowsOutput
  main_deleteManyadmin_visitlog(where: main_admin_visitlogWhereInput): main_AffectedRowsOutput
  main_createOnedic(data: main_dicCreateInput!): main_dic
  main_upsertOnedic(where: main_dicWhereUniqueInput!, create: main_dicCreateInput!, update: main_dicUpdateInput!): main_dic
  main_createManydic(data: [main_dicCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOnedic(where: main_dicWhereUniqueInput!): main_dic
  main_updateOnedic(data: main_dicUpdateInput!, where: main_dicWhereUniqueInput!): main_dic
  main_updateManydic(data: main_dicUpdateManyMutationInput!, where: main_dicWhereInput): main_AffectedRowsOutput
  main_deleteManydic(where: main_dicWhereInput): main_AffectedRowsOutput
  main_createOnemenu_role(data: main_menu_roleCreateInput!): main_menu_role
  main_upsertOnemenu_role(where: main_menu_roleWhereUniqueInput!, create: main_menu_roleCreateInput!, update: main_menu_roleUpdateInput!): main_menu_role
  main_createManymenu_role(data: [main_menu_roleCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOnemenu_role(where: main_menu_roleWhereUniqueInput!): main_menu_role
  main_updateOnemenu_role(data: main_menu_roleUpdateInput!, where: main_menu_roleWhereUniqueInput!): main_menu_role
  main_updateManymenu_role(data: main_menu_roleUpdateManyMutationInput!, where: main_menu_roleWhereInput): main_AffectedRowsOutput
  main_deleteManymenu_role(where: main_menu_roleWhereInput): main_AffectedRowsOutput
  main_createOnepermission(data: main_permissionCreateInput!): main_permission
  main_upsertOnepermission(where: main_permissionWhereUniqueInput!, create: main_permissionCreateInput!, update: main_permissionUpdateInput!): main_permission
  main_createManypermission(data: [main_permissionCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOnepermission(where: main_permissionWhereUniqueInput!): main_permission
  main_updateOnepermission(data: main_permissionUpdateInput!, where: main_permissionWhereUniqueInput!): main_permission
  main_updateManypermission(data: main_permissionUpdateManyMutationInput!, where: main_permissionWhereInput): main_AffectedRowsOutput
  main_deleteManypermission(where: main_permissionWhereInput): main_AffectedRowsOutput
  main_createOneprovider(data: main_providerCreateInput!): main_provider
  main_upsertOneprovider(where: main_providerWhereUniqueInput!, create: main_providerCreateInput!, update: main_providerUpdateInput!): main_provider
  main_createManyprovider(data: [main_providerCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneprovider(where: main_providerWhereUniqueInput!): main_provider
  main_updateOneprovider(data: main_providerUpdateInput!, where: main_providerWhereUniqueInput!): main_provider
  main_updateManyprovider(data: main_providerUpdateManyMutationInput!, where: main_providerWhereInput): main_AffectedRowsOutput
  main_deleteManyprovider(where: main_providerWhereInput): main_AffectedRowsOutput
  main_createOnerole(data: main_roleCreateInput!): main_role
  main_upsertOnerole(where: main_roleWhereUniqueInput!, create: main_roleCreateInput!, update: main_roleUpdateInput!): main_role
  main_createManyrole(data: [main_roleCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOnerole(where: main_roleWhereUniqueInput!): main_role
  main_updateOnerole(data: main_roleUpdateInput!, where: main_roleWhereUniqueInput!): main_role
  main_updateManyrole(data: main_roleUpdateManyMutationInput!, where: main_roleWhereInput): main_AffectedRowsOutput
  main_deleteManyrole(where: main_roleWhereInput): main_AffectedRowsOutput
  main_createOnerole_user(data: main_role_userCreateInput!): main_role_user
  main_upsertOnerole_user(where: main_role_userWhereUniqueInput!, create: main_role_userCreateInput!, update: main_role_userUpdateInput!): main_role_user
  main_createManyrole_user(data: [main_role_userCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOnerole_user(where: main_role_userWhereUniqueInput!): main_role_user
  main_updateOnerole_user(data: main_role_userUpdateInput!, where: main_role_userWhereUniqueInput!): main_role_user
  main_updateManyrole_user(data: main_role_userUpdateManyMutationInput!, where: main_role_userWhereInput): main_AffectedRowsOutput
  main_deleteManyrole_user(where: main_role_userWhereInput): main_AffectedRowsOutput
  main_createOneuser(data: main_userCreateInput!): main_user
  main_upsertOneuser(where: main_userWhereUniqueInput!, create: main_userCreateInput!, update: main_userUpdateInput!): main_user
  main_createManyuser(data: [main_userCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneuser(where: main_userWhereUniqueInput!): main_user
  main_updateOneuser(data: main_userUpdateInput!, where: main_userWhereUniqueInput!): main_user
  main_updateManyuser(data: main_userUpdateManyMutationInput!, where: main_userWhereInput): main_AffectedRowsOutput
  main_deleteManyuser(where: main_userWhereInput): main_AffectedRowsOutput
  main_createOneverification_record(data: main_verification_recordCreateInput!): main_verification_record
  main_upsertOneverification_record(where: main_verification_recordWhereUniqueInput!, create: main_verification_recordCreateInput!, update: main_verification_recordUpdateInput!): main_verification_record
  main_createManyverification_record(data: [main_verification_recordCreateManyInput]!, skipDuplicates: Boolean): main_AffectedRowsOutput
  main_deleteOneverification_record(where: main_verification_recordWhereUniqueInput!): main_verification_record
  main_updateOneverification_record(data: main_verification_recordUpdateInput!, where: main_verification_recordWhereUniqueInput!): main_verification_record
  main_updateManyverification_record(data: main_verification_recordUpdateManyMutationInput!, where: main_verification_recordWhereInput): main_AffectedRowsOutput
  main_deleteManyverification_record(where: main_verification_recordWhereInput): main_AffectedRowsOutput
  main_executeRaw(query: String!, parameters: main_Json): main_Json
  main_queryRaw(query: String!, parameters: main_Json): main_Json
  casdoor_apiUpdateProvider(POSTApiUpdate_providerInput: casdoor_POSTApiUpdate_providerInput): casdoor_objectResponse
  casdoor_apiAddUser(POSTApiAdd_userInput: casdoor_POSTApiAdd_userInput): casdoor_objectResponse
  casdoor_apiUpdateUser(POSTApiUpdate_userInput: casdoor_POSTApiUpdate_userInput): casdoor_objectResponse
  casdoor_apiLogin(POSTApiLoginInput: casdoor_POSTApiLoginInput): casdoor_apiUserResponse
  casdoor_apiRefreshToken(POSTApiRefresh_tokenInput: casdoor_POSTApiRefresh_tokenInput): casdoor_apiUserResponse
  casdoor_apiSendVerificationCode(POSTApiSend_verification_codeInput: casdoor_POSTApiSend_verification_codeInput): casdoor_objectResponse
}

type system_QueryGetAllRoles {
  code: String
  remark: String
  _join: Query!
}

type system_QueryGetRoleBindApis {
  id: Int
  method: String
  roles: String
  updateTime: String
  enabled: Boolean
  roleType: String
  liveQuery: Boolean
  operationType: String
  restUrl: String
  title: String
  createTime: String
  deleteTime: String
  illegal: Boolean
  isPublic: Boolean
  remark: String
  content: String
  _join: Query!
}

enum system_Query_getRoleBindApis_roleType {
  requireMatchAll
  requireMatchAny
  denyMatchAll
  denyMatchAny
}

type system_QueryGetAllApis {
  enabled: Boolean
  liveQuery: Boolean
  method: String
  restUrl: String
  title: String
  id: Int
  isPublic: Boolean
  operationType: String
  remark: String
  roles: String
  content: String
  createTime: String
  deleteTime: String
  illegal: Boolean
  roleType: String
  updateTime: String
  _join: Query!
}

type system_MutationBindRoleApis {
  count: Int
  _join: Query!
}

input system_POSTApiV1RoleBindApiInput {
  roleType: system_POSTApiV1RoleBindApiInput_roleType
  roleCode: String!
  apis: [Int]!
  allRoles: [String]!
}

enum system_POSTApiV1RoleBindApiInput_roleType {
  requireMatchAll
  requireMatchAny
  denyMatchAll
  denyMatchAny
}

type system_MutationUnBindRoleApis {
  count: Int
  _join: Query!
}

input system_POSTApiV1RoleUnbindApiInput {
  roleType: system_POSTApiV1RoleUnbindApiInput_roleType
  roleCode: String!
  apis: [Int]!
}

enum system_POSTApiV1RoleUnbindApiInput_roleType {
  requireMatchAll
  requireMatchAny
  denyMatchAll
  denyMatchAny
}

type statistics_GetVisitTrending {
  count: Int
  days: String
  _join: Query!
}

type statistics_GetMonthlySales {
  months: String
  totalSales: Float
  _join: Query!
}

type statistics_GetSalesTop10 {
  shopName: String
  totalSales: Float
  _join: Query!
}

type statistics_GetSaleTypePercent {
  totalSales: Float
  typeId: Int
  typeName: String
  _join: Query!
}



input main_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntFilter
}

input main_IntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntFilter
}

input main_NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeFilter
}

input main_DateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeFilter
}

input main_NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeNullableFilter
}

input main_DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeNullableFilter
}

input main_NestedStringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringFilter
}

input main_StringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringFilter
}

input main_admin_apilogWhereInput {
  AND: main_admin_apilogWhereInput
  OR: [main_admin_apilogWhereInput]
  NOT: main_admin_apilogWhereInput
  id: main_IntFilter
  createdAt: main_DateTimeFilter
  updatedAt: main_DateTimeFilter
  deletedAt: main_DateTimeNullableFilter
  ip: main_StringFilter
  method: main_StringFilter
  path: main_StringFilter
  code: main_StringFilter
  ua: main_StringFilter
  userId: main_StringFilter
  userName: main_StringFilter
}

enum main_SortOrder {
  asc
  desc
}

input main_admin_apilogOrderByWithRelationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  ip: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  code: main_SortOrder
  ua: main_SortOrder
  userId: main_SortOrder
  userName: main_SortOrder
}

input main_admin_apilogWhereUniqueInput {
  id: Int
}

enum main_Admin_apilogScalarFieldEnum {
  id
  createdAt
  updatedAt
  deletedAt
  ip
  method
  path
  code
  ua
  userId
  userName
}

type main_admin_apilog {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  ip: String!
  method: String!
  path: String!
  code: String!
  ua: String!
  userId: String!
  userName: String!
  _join: Query!
}

type main_Admin_apilogCountAggregateOutputType {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  ip: Int!
  method: Int!
  path: Int!
  code: Int!
  ua: Int!
  userId: Int!
  userName: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_apilogAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_Admin_apilogSumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_Admin_apilogMinAggregateOutputType {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ip: String
  method: String
  path: String
  code: String
  ua: String
  userId: String
  userName: String
  _join: Query!
}

type main_Admin_apilogMaxAggregateOutputType {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  ip: String
  method: String
  path: String
  code: String
  ua: String
  userId: String
  userName: String
  _join: Query!
}

type main_AggregateAdmin_apilog {
  _count: main_Admin_apilogCountAggregateOutputType
  _avg: main_Admin_apilogAvgAggregateOutputType
  _sum: main_Admin_apilogSumAggregateOutputType
  _min: main_Admin_apilogMinAggregateOutputType
  _max: main_Admin_apilogMaxAggregateOutputType
  _join: Query!
}

input main_admin_apilogCountOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  ip: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  code: main_SortOrder
  ua: main_SortOrder
  userId: main_SortOrder
  userName: main_SortOrder
}

input main_admin_apilogAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_apilogMaxOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  ip: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  code: main_SortOrder
  ua: main_SortOrder
  userId: main_SortOrder
  userName: main_SortOrder
}

input main_admin_apilogMinOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  ip: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  code: main_SortOrder
  ua: main_SortOrder
  userId: main_SortOrder
  userName: main_SortOrder
}

input main_admin_apilogSumOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_apilogOrderByWithAggregationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  ip: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  code: main_SortOrder
  ua: main_SortOrder
  userId: main_SortOrder
  userName: main_SortOrder
  _count: main_admin_apilogCountOrderByAggregateInput
  _avg: main_admin_apilogAvgOrderByAggregateInput
  _max: main_admin_apilogMaxOrderByAggregateInput
  _min: main_admin_apilogMinOrderByAggregateInput
  _sum: main_admin_apilogSumOrderByAggregateInput
}

input main_NestedFloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: main_NestedFloatFilter
}

input main_NestedIntWithAggregatesFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntWithAggregatesFilter
  _count: main_NestedIntFilter
  _avg: main_NestedFloatFilter
  _sum: main_NestedIntFilter
  _min: main_NestedIntFilter
  _max: main_NestedIntFilter
}

input main_IntWithAggregatesFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntWithAggregatesFilter
  _count: main_NestedIntFilter
  _avg: main_NestedFloatFilter
  _sum: main_NestedIntFilter
  _min: main_NestedIntFilter
  _max: main_NestedIntFilter
}

input main_NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeWithAggregatesFilter
  _count: main_NestedIntFilter
  _min: main_NestedDateTimeFilter
  _max: main_NestedDateTimeFilter
}

input main_DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeWithAggregatesFilter
  _count: main_NestedIntFilter
  _min: main_NestedDateTimeFilter
  _max: main_NestedDateTimeFilter
}

input main_NestedIntNullableFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntNullableFilter
}

input main_NestedDateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _min: main_NestedDateTimeNullableFilter
  _max: main_NestedDateTimeNullableFilter
}

input main_DateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: main_NestedDateTimeNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _min: main_NestedDateTimeNullableFilter
  _max: main_NestedDateTimeNullableFilter
}

input main_NestedStringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringWithAggregatesFilter
  _count: main_NestedIntFilter
  _min: main_NestedStringFilter
  _max: main_NestedStringFilter
}

input main_StringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringWithAggregatesFilter
  _count: main_NestedIntFilter
  _min: main_NestedStringFilter
  _max: main_NestedStringFilter
}

input main_admin_apilogScalarWhereWithAggregatesInput {
  AND: main_admin_apilogScalarWhereWithAggregatesInput
  OR: [main_admin_apilogScalarWhereWithAggregatesInput]
  NOT: main_admin_apilogScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  createdAt: main_DateTimeWithAggregatesFilter
  updatedAt: main_DateTimeWithAggregatesFilter
  deletedAt: main_DateTimeNullableWithAggregatesFilter
  ip: main_StringWithAggregatesFilter
  method: main_StringWithAggregatesFilter
  path: main_StringWithAggregatesFilter
  code: main_StringWithAggregatesFilter
  ua: main_StringWithAggregatesFilter
  userId: main_StringWithAggregatesFilter
  userName: main_StringWithAggregatesFilter
}

type main_Admin_apilogGroupByOutputType {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  ip: String!
  method: String!
  path: String!
  code: String!
  ua: String!
  userId: String!
  userName: String!
  _count: main_Admin_apilogCountAggregateOutputType
  _avg: main_Admin_apilogAvgAggregateOutputType
  _sum: main_Admin_apilogSumAggregateOutputType
  _min: main_Admin_apilogMinAggregateOutputType
  _max: main_Admin_apilogMaxAggregateOutputType
  _join: Query!
}

input main_NestedStringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringNullableFilter
}

input main_StringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringNullableFilter
}

input main_IntNullableFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntNullableFilter
}

input main_userWhereInput {
  AND: main_userWhereInput
  OR: [main_userWhereInput]
  NOT: main_userWhereInput
  id: main_IntFilter
  created_at: main_DateTimeNullableFilter
  name: main_StringFilter
  avatar: main_StringNullableFilter
  phone: main_StringNullableFilter
  password_salt: main_StringNullableFilter
  password: main_StringNullableFilter
  country_code: main_StringNullableFilter
  password_type: main_StringNullableFilter
  user_id: main_StringNullableFilter
  admin_post: main_Admin_postListRelationFilter
}

input main_UserRelationFilter {
  is: main_userWhereInput
  isNot: main_userWhereInput
}

input main_Admin_categoryRelationFilter {
  is: main_admin_categoryWhereInput
  isNot: main_admin_categoryWhereInput
}

input main_admin_postWhereInput {
  AND: main_admin_postWhereInput
  OR: [main_admin_postWhereInput]
  NOT: main_admin_postWhereInput
  id: main_IntFilter
  title: main_StringFilter
  poster: main_StringNullableFilter
  published_at: main_DateTimeNullableFilter
  author: main_StringFilter
  content: main_StringNullableFilter
  cate: main_IntNullableFilter
  auth: main_IntNullableFilter
  user: main_UserRelationFilter
  admin_category: main_Admin_categoryRelationFilter
}

input main_Admin_postListRelationFilter {
  every: main_admin_postWhereInput
  some: main_admin_postWhereInput
  none: main_admin_postWhereInput
}

input main_admin_categoryWhereInput {
  AND: main_admin_categoryWhereInput
  OR: [main_admin_categoryWhereInput]
  NOT: main_admin_categoryWhereInput
  id: main_IntFilter
  name: main_StringFilter
  admin_post: main_Admin_postListRelationFilter
}

input main_admin_postOrderByRelationAggregateInput {
  _count: main_SortOrder
}

input main_admin_categoryOrderByWithRelationInput {
  id: main_SortOrder
  name: main_SortOrder
  admin_post: main_admin_postOrderByRelationAggregateInput
}

input main_admin_categoryWhereUniqueInput {
  id: Int
}

enum main_Admin_categoryScalarFieldEnum {
  id
  name
}

input main_userOrderByWithRelationInput {
  id: main_SortOrder
  created_at: main_SortOrder
  name: main_SortOrder
  avatar: main_SortOrder
  phone: main_SortOrder
  password_salt: main_SortOrder
  password: main_SortOrder
  country_code: main_SortOrder
  password_type: main_SortOrder
  user_id: main_SortOrder
  admin_post: main_admin_postOrderByRelationAggregateInput
}

input main_admin_postOrderByWithRelationInput {
  id: main_SortOrder
  title: main_SortOrder
  poster: main_SortOrder
  published_at: main_SortOrder
  author: main_SortOrder
  content: main_SortOrder
  cate: main_SortOrder
  auth: main_SortOrder
  user: main_userOrderByWithRelationInput
  admin_category: main_admin_categoryOrderByWithRelationInput
}

input main_admin_postWhereUniqueInput {
  id: Int
}

enum main_Admin_postScalarFieldEnum {
  id
  title
  poster
  published_at
  author
  content
  cate
  auth
}

type main_UserCountOutputType {
  admin_post: Int!
  _join: Query!
}

type main_user {
  id: Int!
  created_at: DateTime
  name: String!
  avatar: String
  phone: String
  password_salt: String
  password: String
  country_code: String
  password_type: String
  user_id: String
  admin_post(where: main_admin_postWhereInput, orderBy: [main_admin_postOrderByWithRelationInput], cursor: main_admin_postWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_postScalarFieldEnum]): [main_admin_post]
  _count: main_UserCountOutputType!
  _join: Query!
}

type main_admin_post {
  id: Int!
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  cate: Int
  auth: Int
  user: main_user
  admin_category: main_admin_category
  _join: Query!
}

type main_Admin_categoryCountOutputType {
  admin_post: Int!
  _join: Query!
}

type main_admin_category {
  id: Int!
  name: String!
  admin_post(where: main_admin_postWhereInput, orderBy: [main_admin_postOrderByWithRelationInput], cursor: main_admin_postWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_postScalarFieldEnum]): [main_admin_post]
  _count: main_Admin_categoryCountOutputType!
  _join: Query!
}

type main_Admin_categoryCountAggregateOutputType {
  id: Int!
  name: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_categoryAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_Admin_categorySumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_Admin_categoryMinAggregateOutputType {
  id: Int
  name: String
  _join: Query!
}

type main_Admin_categoryMaxAggregateOutputType {
  id: Int
  name: String
  _join: Query!
}

type main_AggregateAdmin_category {
  _count: main_Admin_categoryCountAggregateOutputType
  _avg: main_Admin_categoryAvgAggregateOutputType
  _sum: main_Admin_categorySumAggregateOutputType
  _min: main_Admin_categoryMinAggregateOutputType
  _max: main_Admin_categoryMaxAggregateOutputType
  _join: Query!
}

input main_admin_categoryCountOrderByAggregateInput {
  id: main_SortOrder
  name: main_SortOrder
}

input main_admin_categoryAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_categoryMaxOrderByAggregateInput {
  id: main_SortOrder
  name: main_SortOrder
}

input main_admin_categoryMinOrderByAggregateInput {
  id: main_SortOrder
  name: main_SortOrder
}

input main_admin_categorySumOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_categoryOrderByWithAggregationInput {
  id: main_SortOrder
  name: main_SortOrder
  _count: main_admin_categoryCountOrderByAggregateInput
  _avg: main_admin_categoryAvgOrderByAggregateInput
  _max: main_admin_categoryMaxOrderByAggregateInput
  _min: main_admin_categoryMinOrderByAggregateInput
  _sum: main_admin_categorySumOrderByAggregateInput
}

input main_admin_categoryScalarWhereWithAggregatesInput {
  AND: main_admin_categoryScalarWhereWithAggregatesInput
  OR: [main_admin_categoryScalarWhereWithAggregatesInput]
  NOT: main_admin_categoryScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  name: main_StringWithAggregatesFilter
}

type main_Admin_categoryGroupByOutputType {
  id: Int!
  name: String!
  _count: main_Admin_categoryCountAggregateOutputType
  _avg: main_Admin_categoryAvgAggregateOutputType
  _sum: main_Admin_categorySumAggregateOutputType
  _min: main_Admin_categoryMinAggregateOutputType
  _max: main_Admin_categoryMaxAggregateOutputType
  _join: Query!
}

input main_admin_menuWhereInput {
  AND: main_admin_menuWhereInput
  OR: [main_admin_menuWhereInput]
  NOT: main_admin_menuWhereInput
  id: main_IntFilter
  parentId: main_IntNullableFilter
  label: main_StringFilter
  path: main_StringNullableFilter
  icon: main_StringNullableFilter
  sort: main_IntFilter
  level: main_IntFilter
  name: main_StringNullableFilter
  is_bottom: main_IntFilter
  create_time: main_DateTimeNullableFilter
  perms: main_StringNullableFilter
  menu_type: main_StringNullableFilter
  api_id: main_StringNullableFilter
}

input main_admin_menuOrderByWithRelationInput {
  id: main_SortOrder
  parentId: main_SortOrder
  label: main_SortOrder
  path: main_SortOrder
  icon: main_SortOrder
  sort: main_SortOrder
  level: main_SortOrder
  name: main_SortOrder
  is_bottom: main_SortOrder
  create_time: main_SortOrder
  perms: main_SortOrder
  menu_type: main_SortOrder
  api_id: main_SortOrder
}

input main_admin_menuWhereUniqueInput {
  id: Int
}

enum main_Admin_menuScalarFieldEnum {
  id
  parentId
  label
  path
  icon
  sort
  level
  name
  is_bottom
  create_time
  perms
  menu_type
  api_id
}

type main_admin_menu {
  id: Int!
  parentId: Int
  label: String!
  path: String
  icon: String
  sort: Int!
  level: Int!
  name: String
  is_bottom: Int!
  create_time: DateTime
  perms: String
  menu_type: String
  api_id: String
  _join: Query!
}

type main_Admin_menuCountAggregateOutputType {
  id: Int!
  parentId: Int!
  label: Int!
  path: Int!
  icon: Int!
  sort: Int!
  level: Int!
  name: Int!
  is_bottom: Int!
  create_time: Int!
  perms: Int!
  menu_type: Int!
  api_id: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_menuAvgAggregateOutputType {
  id: Float
  parentId: Float
  sort: Float
  level: Float
  is_bottom: Float
  _join: Query!
}

type main_Admin_menuSumAggregateOutputType {
  id: Int
  parentId: Int
  sort: Int
  level: Int
  is_bottom: Int
  _join: Query!
}

type main_Admin_menuMinAggregateOutputType {
  id: Int
  parentId: Int
  label: String
  path: String
  icon: String
  sort: Int
  level: Int
  name: String
  is_bottom: Int
  create_time: DateTime
  perms: String
  menu_type: String
  api_id: String
  _join: Query!
}

type main_Admin_menuMaxAggregateOutputType {
  id: Int
  parentId: Int
  label: String
  path: String
  icon: String
  sort: Int
  level: Int
  name: String
  is_bottom: Int
  create_time: DateTime
  perms: String
  menu_type: String
  api_id: String
  _join: Query!
}

type main_AggregateAdmin_menu {
  _count: main_Admin_menuCountAggregateOutputType
  _avg: main_Admin_menuAvgAggregateOutputType
  _sum: main_Admin_menuSumAggregateOutputType
  _min: main_Admin_menuMinAggregateOutputType
  _max: main_Admin_menuMaxAggregateOutputType
  _join: Query!
}

input main_admin_menuCountOrderByAggregateInput {
  id: main_SortOrder
  parentId: main_SortOrder
  label: main_SortOrder
  path: main_SortOrder
  icon: main_SortOrder
  sort: main_SortOrder
  level: main_SortOrder
  name: main_SortOrder
  is_bottom: main_SortOrder
  create_time: main_SortOrder
  perms: main_SortOrder
  menu_type: main_SortOrder
  api_id: main_SortOrder
}

input main_admin_menuAvgOrderByAggregateInput {
  id: main_SortOrder
  parentId: main_SortOrder
  sort: main_SortOrder
  level: main_SortOrder
  is_bottom: main_SortOrder
}

input main_admin_menuMaxOrderByAggregateInput {
  id: main_SortOrder
  parentId: main_SortOrder
  label: main_SortOrder
  path: main_SortOrder
  icon: main_SortOrder
  sort: main_SortOrder
  level: main_SortOrder
  name: main_SortOrder
  is_bottom: main_SortOrder
  create_time: main_SortOrder
  perms: main_SortOrder
  menu_type: main_SortOrder
  api_id: main_SortOrder
}

input main_admin_menuMinOrderByAggregateInput {
  id: main_SortOrder
  parentId: main_SortOrder
  label: main_SortOrder
  path: main_SortOrder
  icon: main_SortOrder
  sort: main_SortOrder
  level: main_SortOrder
  name: main_SortOrder
  is_bottom: main_SortOrder
  create_time: main_SortOrder
  perms: main_SortOrder
  menu_type: main_SortOrder
  api_id: main_SortOrder
}

input main_admin_menuSumOrderByAggregateInput {
  id: main_SortOrder
  parentId: main_SortOrder
  sort: main_SortOrder
  level: main_SortOrder
  is_bottom: main_SortOrder
}

input main_admin_menuOrderByWithAggregationInput {
  id: main_SortOrder
  parentId: main_SortOrder
  label: main_SortOrder
  path: main_SortOrder
  icon: main_SortOrder
  sort: main_SortOrder
  level: main_SortOrder
  name: main_SortOrder
  is_bottom: main_SortOrder
  create_time: main_SortOrder
  perms: main_SortOrder
  menu_type: main_SortOrder
  api_id: main_SortOrder
  _count: main_admin_menuCountOrderByAggregateInput
  _avg: main_admin_menuAvgOrderByAggregateInput
  _max: main_admin_menuMaxOrderByAggregateInput
  _min: main_admin_menuMinOrderByAggregateInput
  _sum: main_admin_menuSumOrderByAggregateInput
}

input main_NestedFloatNullableFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: main_NestedFloatNullableFilter
}

input main_NestedIntNullableWithAggregatesFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _avg: main_NestedFloatNullableFilter
  _sum: main_NestedIntNullableFilter
  _min: main_NestedIntNullableFilter
  _max: main_NestedIntNullableFilter
}

input main_IntNullableWithAggregatesFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: main_NestedIntNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _avg: main_NestedFloatNullableFilter
  _sum: main_NestedIntNullableFilter
  _min: main_NestedIntNullableFilter
  _max: main_NestedIntNullableFilter
}

input main_NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _min: main_NestedStringNullableFilter
  _max: main_NestedStringNullableFilter
}

input main_StringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: main_NestedStringNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _min: main_NestedStringNullableFilter
  _max: main_NestedStringNullableFilter
}

input main_admin_menuScalarWhereWithAggregatesInput {
  AND: main_admin_menuScalarWhereWithAggregatesInput
  OR: [main_admin_menuScalarWhereWithAggregatesInput]
  NOT: main_admin_menuScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  parentId: main_IntNullableWithAggregatesFilter
  label: main_StringWithAggregatesFilter
  path: main_StringNullableWithAggregatesFilter
  icon: main_StringNullableWithAggregatesFilter
  sort: main_IntWithAggregatesFilter
  level: main_IntWithAggregatesFilter
  name: main_StringNullableWithAggregatesFilter
  is_bottom: main_IntWithAggregatesFilter
  create_time: main_DateTimeNullableWithAggregatesFilter
  perms: main_StringNullableWithAggregatesFilter
  menu_type: main_StringNullableWithAggregatesFilter
  api_id: main_StringNullableWithAggregatesFilter
}

type main_Admin_menuGroupByOutputType {
  id: Int!
  parentId: Int
  label: String!
  path: String
  icon: String
  sort: Int!
  level: Int!
  name: String
  is_bottom: Int!
  create_time: DateTime
  perms: String
  menu_type: String
  api_id: String
  _count: main_Admin_menuCountAggregateOutputType
  _avg: main_Admin_menuAvgAggregateOutputType
  _sum: main_Admin_menuSumAggregateOutputType
  _min: main_Admin_menuMinAggregateOutputType
  _max: main_Admin_menuMaxAggregateOutputType
  _join: Query!
}

type main_Admin_postCountAggregateOutputType {
  id: Int!
  title: Int!
  poster: Int!
  published_at: Int!
  author: Int!
  content: Int!
  cate: Int!
  auth: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_postAvgAggregateOutputType {
  id: Float
  cate: Float
  auth: Float
  _join: Query!
}

type main_Admin_postSumAggregateOutputType {
  id: Int
  cate: Int
  auth: Int
  _join: Query!
}

type main_Admin_postMinAggregateOutputType {
  id: Int
  title: String
  poster: String
  published_at: DateTime
  author: String
  content: String
  cate: Int
  auth: Int
  _join: Query!
}

type main_Admin_postMaxAggregateOutputType {
  id: Int
  title: String
  poster: String
  published_at: DateTime
  author: String
  content: String
  cate: Int
  auth: Int
  _join: Query!
}

type main_AggregateAdmin_post {
  _count: main_Admin_postCountAggregateOutputType
  _avg: main_Admin_postAvgAggregateOutputType
  _sum: main_Admin_postSumAggregateOutputType
  _min: main_Admin_postMinAggregateOutputType
  _max: main_Admin_postMaxAggregateOutputType
  _join: Query!
}

input main_admin_postCountOrderByAggregateInput {
  id: main_SortOrder
  title: main_SortOrder
  poster: main_SortOrder
  published_at: main_SortOrder
  author: main_SortOrder
  content: main_SortOrder
  cate: main_SortOrder
  auth: main_SortOrder
}

input main_admin_postAvgOrderByAggregateInput {
  id: main_SortOrder
  cate: main_SortOrder
  auth: main_SortOrder
}

input main_admin_postMaxOrderByAggregateInput {
  id: main_SortOrder
  title: main_SortOrder
  poster: main_SortOrder
  published_at: main_SortOrder
  author: main_SortOrder
  content: main_SortOrder
  cate: main_SortOrder
  auth: main_SortOrder
}

input main_admin_postMinOrderByAggregateInput {
  id: main_SortOrder
  title: main_SortOrder
  poster: main_SortOrder
  published_at: main_SortOrder
  author: main_SortOrder
  content: main_SortOrder
  cate: main_SortOrder
  auth: main_SortOrder
}

input main_admin_postSumOrderByAggregateInput {
  id: main_SortOrder
  cate: main_SortOrder
  auth: main_SortOrder
}

input main_admin_postOrderByWithAggregationInput {
  id: main_SortOrder
  title: main_SortOrder
  poster: main_SortOrder
  published_at: main_SortOrder
  author: main_SortOrder
  content: main_SortOrder
  cate: main_SortOrder
  auth: main_SortOrder
  _count: main_admin_postCountOrderByAggregateInput
  _avg: main_admin_postAvgOrderByAggregateInput
  _max: main_admin_postMaxOrderByAggregateInput
  _min: main_admin_postMinOrderByAggregateInput
  _sum: main_admin_postSumOrderByAggregateInput
}

input main_admin_postScalarWhereWithAggregatesInput {
  AND: main_admin_postScalarWhereWithAggregatesInput
  OR: [main_admin_postScalarWhereWithAggregatesInput]
  NOT: main_admin_postScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  title: main_StringWithAggregatesFilter
  poster: main_StringNullableWithAggregatesFilter
  published_at: main_DateTimeNullableWithAggregatesFilter
  author: main_StringWithAggregatesFilter
  content: main_StringNullableWithAggregatesFilter
  cate: main_IntNullableWithAggregatesFilter
  auth: main_IntNullableWithAggregatesFilter
}

type main_Admin_postGroupByOutputType {
  id: Int!
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  cate: Int
  auth: Int
  _count: main_Admin_postCountAggregateOutputType
  _avg: main_Admin_postAvgAggregateOutputType
  _sum: main_Admin_postSumAggregateOutputType
  _min: main_Admin_postMinAggregateOutputType
  _max: main_Admin_postMaxAggregateOutputType
  _join: Query!
}

input main_FloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: main_NestedFloatFilter
}

input main_Admin_salelogListRelationFilter {
  every: main_admin_salelogWhereInput
  some: main_admin_salelogWhereInput
  none: main_admin_salelogWhereInput
}

input main_admin_saletypeWhereInput {
  AND: main_admin_saletypeWhereInput
  OR: [main_admin_saletypeWhereInput]
  NOT: main_admin_saletypeWhereInput
  id: main_IntFilter
  name: main_StringFilter
  createdAt: main_StringFilter
  admin_salelog: main_Admin_salelogListRelationFilter
}

input main_Admin_saletypeRelationFilter {
  is: main_admin_saletypeWhereInput
  isNot: main_admin_saletypeWhereInput
}

input main_admin_salelogWhereInput {
  AND: main_admin_salelogWhereInput
  OR: [main_admin_salelogWhereInput]
  NOT: main_admin_salelogWhereInput
  id: main_IntFilter
  shopName: main_StringFilter
  day: main_DateTimeFilter
  sales: main_FloatFilter
  typeId: main_IntFilter
  admin_saletype: main_Admin_saletypeRelationFilter
}

input main_admin_salelogOrderByRelationAggregateInput {
  _count: main_SortOrder
}

input main_admin_saletypeOrderByWithRelationInput {
  id: main_SortOrder
  name: main_SortOrder
  createdAt: main_SortOrder
  admin_salelog: main_admin_salelogOrderByRelationAggregateInput
}

input main_admin_salelogOrderByWithRelationInput {
  id: main_SortOrder
  shopName: main_SortOrder
  day: main_SortOrder
  sales: main_SortOrder
  typeId: main_SortOrder
  admin_saletype: main_admin_saletypeOrderByWithRelationInput
}

input main_admin_salelogWhereUniqueInput {
  id: Int
}

enum main_Admin_salelogScalarFieldEnum {
  id
  shopName
  day
  sales
  typeId
}

type main_Admin_saletypeCountOutputType {
  admin_salelog: Int!
  _join: Query!
}

type main_admin_saletype {
  id: Int!
  name: String!
  createdAt: String!
  admin_salelog(where: main_admin_salelogWhereInput, orderBy: [main_admin_salelogOrderByWithRelationInput], cursor: main_admin_salelogWhereUniqueInput, take: Int, skip: Int, distinct: [main_Admin_salelogScalarFieldEnum]): [main_admin_salelog]
  _count: main_Admin_saletypeCountOutputType!
  _join: Query!
}

type main_admin_salelog {
  id: Int!
  shopName: String!
  day: DateTime!
  sales: Float!
  typeId: Int!
  admin_saletype: main_admin_saletype!
  _join: Query!
}

type main_Admin_salelogCountAggregateOutputType {
  id: Int!
  shopName: Int!
  day: Int!
  sales: Int!
  typeId: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_salelogAvgAggregateOutputType {
  id: Float
  sales: Float
  typeId: Float
  _join: Query!
}

type main_Admin_salelogSumAggregateOutputType {
  id: Int
  sales: Float
  typeId: Int
  _join: Query!
}

type main_Admin_salelogMinAggregateOutputType {
  id: Int
  shopName: String
  day: DateTime
  sales: Float
  typeId: Int
  _join: Query!
}

type main_Admin_salelogMaxAggregateOutputType {
  id: Int
  shopName: String
  day: DateTime
  sales: Float
  typeId: Int
  _join: Query!
}

type main_AggregateAdmin_salelog {
  _count: main_Admin_salelogCountAggregateOutputType
  _avg: main_Admin_salelogAvgAggregateOutputType
  _sum: main_Admin_salelogSumAggregateOutputType
  _min: main_Admin_salelogMinAggregateOutputType
  _max: main_Admin_salelogMaxAggregateOutputType
  _join: Query!
}

input main_admin_salelogCountOrderByAggregateInput {
  id: main_SortOrder
  shopName: main_SortOrder
  day: main_SortOrder
  sales: main_SortOrder
  typeId: main_SortOrder
}

input main_admin_salelogAvgOrderByAggregateInput {
  id: main_SortOrder
  sales: main_SortOrder
  typeId: main_SortOrder
}

input main_admin_salelogMaxOrderByAggregateInput {
  id: main_SortOrder
  shopName: main_SortOrder
  day: main_SortOrder
  sales: main_SortOrder
  typeId: main_SortOrder
}

input main_admin_salelogMinOrderByAggregateInput {
  id: main_SortOrder
  shopName: main_SortOrder
  day: main_SortOrder
  sales: main_SortOrder
  typeId: main_SortOrder
}

input main_admin_salelogSumOrderByAggregateInput {
  id: main_SortOrder
  sales: main_SortOrder
  typeId: main_SortOrder
}

input main_admin_salelogOrderByWithAggregationInput {
  id: main_SortOrder
  shopName: main_SortOrder
  day: main_SortOrder
  sales: main_SortOrder
  typeId: main_SortOrder
  _count: main_admin_salelogCountOrderByAggregateInput
  _avg: main_admin_salelogAvgOrderByAggregateInput
  _max: main_admin_salelogMaxOrderByAggregateInput
  _min: main_admin_salelogMinOrderByAggregateInput
  _sum: main_admin_salelogSumOrderByAggregateInput
}

input main_NestedFloatWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: main_NestedFloatWithAggregatesFilter
  _count: main_NestedIntFilter
  _avg: main_NestedFloatFilter
  _sum: main_NestedFloatFilter
  _min: main_NestedFloatFilter
  _max: main_NestedFloatFilter
}

input main_FloatWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: main_NestedFloatWithAggregatesFilter
  _count: main_NestedIntFilter
  _avg: main_NestedFloatFilter
  _sum: main_NestedFloatFilter
  _min: main_NestedFloatFilter
  _max: main_NestedFloatFilter
}

input main_admin_salelogScalarWhereWithAggregatesInput {
  AND: main_admin_salelogScalarWhereWithAggregatesInput
  OR: [main_admin_salelogScalarWhereWithAggregatesInput]
  NOT: main_admin_salelogScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  shopName: main_StringWithAggregatesFilter
  day: main_DateTimeWithAggregatesFilter
  sales: main_FloatWithAggregatesFilter
  typeId: main_IntWithAggregatesFilter
}

type main_Admin_salelogGroupByOutputType {
  id: Int!
  shopName: String!
  day: DateTime!
  sales: Float!
  typeId: Int!
  _count: main_Admin_salelogCountAggregateOutputType
  _avg: main_Admin_salelogAvgAggregateOutputType
  _sum: main_Admin_salelogSumAggregateOutputType
  _min: main_Admin_salelogMinAggregateOutputType
  _max: main_Admin_salelogMaxAggregateOutputType
  _join: Query!
}

input main_admin_saletypeWhereUniqueInput {
  id: Int
}

enum main_Admin_saletypeScalarFieldEnum {
  id
  name
  createdAt
}

type main_Admin_saletypeCountAggregateOutputType {
  id: Int!
  name: Int!
  createdAt: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_saletypeAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_Admin_saletypeSumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_Admin_saletypeMinAggregateOutputType {
  id: Int
  name: String
  createdAt: String
  _join: Query!
}

type main_Admin_saletypeMaxAggregateOutputType {
  id: Int
  name: String
  createdAt: String
  _join: Query!
}

type main_AggregateAdmin_saletype {
  _count: main_Admin_saletypeCountAggregateOutputType
  _avg: main_Admin_saletypeAvgAggregateOutputType
  _sum: main_Admin_saletypeSumAggregateOutputType
  _min: main_Admin_saletypeMinAggregateOutputType
  _max: main_Admin_saletypeMaxAggregateOutputType
  _join: Query!
}

input main_admin_saletypeCountOrderByAggregateInput {
  id: main_SortOrder
  name: main_SortOrder
  createdAt: main_SortOrder
}

input main_admin_saletypeAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_saletypeMaxOrderByAggregateInput {
  id: main_SortOrder
  name: main_SortOrder
  createdAt: main_SortOrder
}

input main_admin_saletypeMinOrderByAggregateInput {
  id: main_SortOrder
  name: main_SortOrder
  createdAt: main_SortOrder
}

input main_admin_saletypeSumOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_saletypeOrderByWithAggregationInput {
  id: main_SortOrder
  name: main_SortOrder
  createdAt: main_SortOrder
  _count: main_admin_saletypeCountOrderByAggregateInput
  _avg: main_admin_saletypeAvgOrderByAggregateInput
  _max: main_admin_saletypeMaxOrderByAggregateInput
  _min: main_admin_saletypeMinOrderByAggregateInput
  _sum: main_admin_saletypeSumOrderByAggregateInput
}

input main_admin_saletypeScalarWhereWithAggregatesInput {
  AND: main_admin_saletypeScalarWhereWithAggregatesInput
  OR: [main_admin_saletypeScalarWhereWithAggregatesInput]
  NOT: main_admin_saletypeScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  name: main_StringWithAggregatesFilter
  createdAt: main_StringWithAggregatesFilter
}

type main_Admin_saletypeGroupByOutputType {
  id: Int!
  name: String!
  createdAt: String!
  _count: main_Admin_saletypeCountAggregateOutputType
  _avg: main_Admin_saletypeAvgAggregateOutputType
  _sum: main_Admin_saletypeSumAggregateOutputType
  _min: main_Admin_saletypeMinAggregateOutputType
  _max: main_Admin_saletypeMaxAggregateOutputType
  _join: Query!
}

input main_admin_subWhereInput {
  AND: main_admin_subWhereInput
  OR: [main_admin_subWhereInput]
  NOT: main_admin_subWhereInput
  id: main_IntFilter
  createdAt: main_DateTimeFilter
  updatedAt: main_DateTimeFilter
  deletedAt: main_DateTimeNullableFilter
  message: main_StringFilter
  create_role: main_StringFilter
  target_role: main_StringFilter
  type: main_StringFilter
}

input main_admin_subOrderByWithRelationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  message: main_SortOrder
  create_role: main_SortOrder
  target_role: main_SortOrder
  type: main_SortOrder
}

input main_admin_subWhereUniqueInput {
  id: Int
}

enum main_Admin_subScalarFieldEnum {
  id
  createdAt
  updatedAt
  deletedAt
  message
  create_role
  target_role
  type
}

type main_admin_sub {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  message: String!
  create_role: String!
  target_role: String!
  type: String!
  _join: Query!
}

type main_Admin_subCountAggregateOutputType {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  message: Int!
  create_role: Int!
  target_role: Int!
  type: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_subAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_Admin_subSumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_Admin_subMinAggregateOutputType {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  message: String
  create_role: String
  target_role: String
  type: String
  _join: Query!
}

type main_Admin_subMaxAggregateOutputType {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  message: String
  create_role: String
  target_role: String
  type: String
  _join: Query!
}

type main_AggregateAdmin_sub {
  _count: main_Admin_subCountAggregateOutputType
  _avg: main_Admin_subAvgAggregateOutputType
  _sum: main_Admin_subSumAggregateOutputType
  _min: main_Admin_subMinAggregateOutputType
  _max: main_Admin_subMaxAggregateOutputType
  _join: Query!
}

input main_admin_subCountOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  message: main_SortOrder
  create_role: main_SortOrder
  target_role: main_SortOrder
  type: main_SortOrder
}

input main_admin_subAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_subMaxOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  message: main_SortOrder
  create_role: main_SortOrder
  target_role: main_SortOrder
  type: main_SortOrder
}

input main_admin_subMinOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  message: main_SortOrder
  create_role: main_SortOrder
  target_role: main_SortOrder
  type: main_SortOrder
}

input main_admin_subSumOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_subOrderByWithAggregationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  message: main_SortOrder
  create_role: main_SortOrder
  target_role: main_SortOrder
  type: main_SortOrder
  _count: main_admin_subCountOrderByAggregateInput
  _avg: main_admin_subAvgOrderByAggregateInput
  _max: main_admin_subMaxOrderByAggregateInput
  _min: main_admin_subMinOrderByAggregateInput
  _sum: main_admin_subSumOrderByAggregateInput
}

input main_admin_subScalarWhereWithAggregatesInput {
  AND: main_admin_subScalarWhereWithAggregatesInput
  OR: [main_admin_subScalarWhereWithAggregatesInput]
  NOT: main_admin_subScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  createdAt: main_DateTimeWithAggregatesFilter
  updatedAt: main_DateTimeWithAggregatesFilter
  deletedAt: main_DateTimeNullableWithAggregatesFilter
  message: main_StringWithAggregatesFilter
  create_role: main_StringWithAggregatesFilter
  target_role: main_StringWithAggregatesFilter
  type: main_StringWithAggregatesFilter
}

type main_Admin_subGroupByOutputType {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  message: String!
  create_role: String!
  target_role: String!
  type: String!
  _count: main_Admin_subCountAggregateOutputType
  _avg: main_Admin_subAvgAggregateOutputType
  _sum: main_Admin_subSumAggregateOutputType
  _min: main_Admin_subMinAggregateOutputType
  _max: main_Admin_subMaxAggregateOutputType
  _join: Query!
}

input main_admin_visitlogWhereInput {
  AND: main_admin_visitlogWhereInput
  OR: [main_admin_visitlogWhereInput]
  NOT: main_admin_visitlogWhereInput
  id: main_IntFilter
  ip: main_StringFilter
  ua: main_StringFilter
  visitedAt: main_StringFilter
}

input main_admin_visitlogOrderByWithRelationInput {
  id: main_SortOrder
  ip: main_SortOrder
  ua: main_SortOrder
  visitedAt: main_SortOrder
}

input main_admin_visitlogWhereUniqueInput {
  id: Int
}

enum main_Admin_visitlogScalarFieldEnum {
  id
  ip
  ua
  visitedAt
}

type main_admin_visitlog {
  id: Int!
  ip: String!
  ua: String!
  visitedAt: String!
  _join: Query!
}

type main_Admin_visitlogCountAggregateOutputType {
  id: Int!
  ip: Int!
  ua: Int!
  visitedAt: Int!
  _all: Int!
  _join: Query!
}

type main_Admin_visitlogAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_Admin_visitlogSumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_Admin_visitlogMinAggregateOutputType {
  id: Int
  ip: String
  ua: String
  visitedAt: String
  _join: Query!
}

type main_Admin_visitlogMaxAggregateOutputType {
  id: Int
  ip: String
  ua: String
  visitedAt: String
  _join: Query!
}

type main_AggregateAdmin_visitlog {
  _count: main_Admin_visitlogCountAggregateOutputType
  _avg: main_Admin_visitlogAvgAggregateOutputType
  _sum: main_Admin_visitlogSumAggregateOutputType
  _min: main_Admin_visitlogMinAggregateOutputType
  _max: main_Admin_visitlogMaxAggregateOutputType
  _join: Query!
}

input main_admin_visitlogCountOrderByAggregateInput {
  id: main_SortOrder
  ip: main_SortOrder
  ua: main_SortOrder
  visitedAt: main_SortOrder
}

input main_admin_visitlogAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_visitlogMaxOrderByAggregateInput {
  id: main_SortOrder
  ip: main_SortOrder
  ua: main_SortOrder
  visitedAt: main_SortOrder
}

input main_admin_visitlogMinOrderByAggregateInput {
  id: main_SortOrder
  ip: main_SortOrder
  ua: main_SortOrder
  visitedAt: main_SortOrder
}

input main_admin_visitlogSumOrderByAggregateInput {
  id: main_SortOrder
}

input main_admin_visitlogOrderByWithAggregationInput {
  id: main_SortOrder
  ip: main_SortOrder
  ua: main_SortOrder
  visitedAt: main_SortOrder
  _count: main_admin_visitlogCountOrderByAggregateInput
  _avg: main_admin_visitlogAvgOrderByAggregateInput
  _max: main_admin_visitlogMaxOrderByAggregateInput
  _min: main_admin_visitlogMinOrderByAggregateInput
  _sum: main_admin_visitlogSumOrderByAggregateInput
}

input main_admin_visitlogScalarWhereWithAggregatesInput {
  AND: main_admin_visitlogScalarWhereWithAggregatesInput
  OR: [main_admin_visitlogScalarWhereWithAggregatesInput]
  NOT: main_admin_visitlogScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  ip: main_StringWithAggregatesFilter
  ua: main_StringWithAggregatesFilter
  visitedAt: main_StringWithAggregatesFilter
}

type main_Admin_visitlogGroupByOutputType {
  id: Int!
  ip: String!
  ua: String!
  visitedAt: String!
  _count: main_Admin_visitlogCountAggregateOutputType
  _avg: main_Admin_visitlogAvgAggregateOutputType
  _sum: main_Admin_visitlogSumAggregateOutputType
  _min: main_Admin_visitlogMinAggregateOutputType
  _max: main_Admin_visitlogMaxAggregateOutputType
  _join: Query!
}

input main_NestedBoolFilter {
  equals: Boolean
  not: main_NestedBoolFilter
}

input main_BoolFilter {
  equals: Boolean
  not: main_NestedBoolFilter
}

input main_dicWhereInput {
  AND: main_dicWhereInput
  OR: [main_dicWhereInput]
  NOT: main_dicWhereInput
  id: main_IntFilter
  createdAt: main_DateTimeFilter
  updatedAt: main_DateTimeFilter
  deletedAt: main_DateTimeNullableFilter
  isOpen: main_BoolFilter
}

input main_dicOrderByWithRelationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  isOpen: main_SortOrder
}

input main_dicWhereUniqueInput {
  id: Int
}

enum main_DicScalarFieldEnum {
  id
  createdAt
  updatedAt
  deletedAt
  isOpen
}

type main_dic {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isOpen: Boolean!
  _join: Query!
}

type main_DicCountAggregateOutputType {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  isOpen: Int!
  _all: Int!
  _join: Query!
}

type main_DicAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_DicSumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_DicMinAggregateOutputType {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isOpen: Boolean
  _join: Query!
}

type main_DicMaxAggregateOutputType {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isOpen: Boolean
  _join: Query!
}

type main_AggregateDic {
  _count: main_DicCountAggregateOutputType
  _avg: main_DicAvgAggregateOutputType
  _sum: main_DicSumAggregateOutputType
  _min: main_DicMinAggregateOutputType
  _max: main_DicMaxAggregateOutputType
  _join: Query!
}

input main_dicCountOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  isOpen: main_SortOrder
}

input main_dicAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_dicMaxOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  isOpen: main_SortOrder
}

input main_dicMinOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  isOpen: main_SortOrder
}

input main_dicSumOrderByAggregateInput {
  id: main_SortOrder
}

input main_dicOrderByWithAggregationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  deletedAt: main_SortOrder
  isOpen: main_SortOrder
  _count: main_dicCountOrderByAggregateInput
  _avg: main_dicAvgOrderByAggregateInput
  _max: main_dicMaxOrderByAggregateInput
  _min: main_dicMinOrderByAggregateInput
  _sum: main_dicSumOrderByAggregateInput
}

input main_NestedBoolWithAggregatesFilter {
  equals: Boolean
  not: main_NestedBoolWithAggregatesFilter
  _count: main_NestedIntFilter
  _min: main_NestedBoolFilter
  _max: main_NestedBoolFilter
}

input main_BoolWithAggregatesFilter {
  equals: Boolean
  not: main_NestedBoolWithAggregatesFilter
  _count: main_NestedIntFilter
  _min: main_NestedBoolFilter
  _max: main_NestedBoolFilter
}

input main_dicScalarWhereWithAggregatesInput {
  AND: main_dicScalarWhereWithAggregatesInput
  OR: [main_dicScalarWhereWithAggregatesInput]
  NOT: main_dicScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  createdAt: main_DateTimeWithAggregatesFilter
  updatedAt: main_DateTimeWithAggregatesFilter
  deletedAt: main_DateTimeNullableWithAggregatesFilter
  isOpen: main_BoolWithAggregatesFilter
}

type main_DicGroupByOutputType {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isOpen: Boolean!
  _count: main_DicCountAggregateOutputType
  _avg: main_DicAvgAggregateOutputType
  _sum: main_DicSumAggregateOutputType
  _min: main_DicMinAggregateOutputType
  _max: main_DicMaxAggregateOutputType
  _join: Query!
}

input main_menu_roleWhereInput {
  AND: main_menu_roleWhereInput
  OR: [main_menu_roleWhereInput]
  NOT: main_menu_roleWhereInput
  id: main_IntFilter
  menu_id: main_IntFilter
  role_id: main_IntFilter
}

input main_menu_roleOrderByWithRelationInput {
  id: main_SortOrder
  menu_id: main_SortOrder
  role_id: main_SortOrder
}

input main_menu_roleRole_idMenu_idCompoundUniqueInput {
  role_id: Int!
  menu_id: Int!
}

input main_menu_roleWhereUniqueInput {
  id: Int
  role_id_menu_id: main_menu_roleRole_idMenu_idCompoundUniqueInput
}

enum main_Menu_roleScalarFieldEnum {
  id
  menu_id
  role_id
}

type main_menu_role {
  id: Int!
  menu_id: Int!
  role_id: Int!
  _join: Query!
}

type main_Menu_roleCountAggregateOutputType {
  id: Int!
  menu_id: Int!
  role_id: Int!
  _all: Int!
  _join: Query!
}

type main_Menu_roleAvgAggregateOutputType {
  id: Float
  menu_id: Float
  role_id: Float
  _join: Query!
}

type main_Menu_roleSumAggregateOutputType {
  id: Int
  menu_id: Int
  role_id: Int
  _join: Query!
}

type main_Menu_roleMinAggregateOutputType {
  id: Int
  menu_id: Int
  role_id: Int
  _join: Query!
}

type main_Menu_roleMaxAggregateOutputType {
  id: Int
  menu_id: Int
  role_id: Int
  _join: Query!
}

type main_AggregateMenu_role {
  _count: main_Menu_roleCountAggregateOutputType
  _avg: main_Menu_roleAvgAggregateOutputType
  _sum: main_Menu_roleSumAggregateOutputType
  _min: main_Menu_roleMinAggregateOutputType
  _max: main_Menu_roleMaxAggregateOutputType
  _join: Query!
}

input main_menu_roleCountOrderByAggregateInput {
  id: main_SortOrder
  menu_id: main_SortOrder
  role_id: main_SortOrder
}

input main_menu_roleAvgOrderByAggregateInput {
  id: main_SortOrder
  menu_id: main_SortOrder
  role_id: main_SortOrder
}

input main_menu_roleMaxOrderByAggregateInput {
  id: main_SortOrder
  menu_id: main_SortOrder
  role_id: main_SortOrder
}

input main_menu_roleMinOrderByAggregateInput {
  id: main_SortOrder
  menu_id: main_SortOrder
  role_id: main_SortOrder
}

input main_menu_roleSumOrderByAggregateInput {
  id: main_SortOrder
  menu_id: main_SortOrder
  role_id: main_SortOrder
}

input main_menu_roleOrderByWithAggregationInput {
  id: main_SortOrder
  menu_id: main_SortOrder
  role_id: main_SortOrder
  _count: main_menu_roleCountOrderByAggregateInput
  _avg: main_menu_roleAvgOrderByAggregateInput
  _max: main_menu_roleMaxOrderByAggregateInput
  _min: main_menu_roleMinOrderByAggregateInput
  _sum: main_menu_roleSumOrderByAggregateInput
}

input main_menu_roleScalarWhereWithAggregatesInput {
  AND: main_menu_roleScalarWhereWithAggregatesInput
  OR: [main_menu_roleScalarWhereWithAggregatesInput]
  NOT: main_menu_roleScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  menu_id: main_IntWithAggregatesFilter
  role_id: main_IntWithAggregatesFilter
}

type main_Menu_roleGroupByOutputType {
  id: Int!
  menu_id: Int!
  role_id: Int!
  _count: main_Menu_roleCountAggregateOutputType
  _avg: main_Menu_roleAvgAggregateOutputType
  _sum: main_Menu_roleSumAggregateOutputType
  _min: main_Menu_roleMinAggregateOutputType
  _max: main_Menu_roleMaxAggregateOutputType
  _join: Query!
}

input main_NestedBigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: main_NestedBigIntFilter
}

input main_BigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: main_NestedBigIntFilter
}

input main_permissionWhereInput {
  AND: main_permissionWhereInput
  OR: [main_permissionWhereInput]
  NOT: main_permissionWhereInput
  id: main_BigIntFilter
  createdAt: main_DateTimeNullableFilter
  updatedAt: main_DateTimeNullableFilter
  method: main_StringFilter
  path: main_StringFilter
  enabled: main_IntFilter
}

input main_permissionOrderByWithRelationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  enabled: main_SortOrder
}

input main_permissionWhereUniqueInput {
  id: BigInt
  path: String
}

enum main_PermissionScalarFieldEnum {
  id
  createdAt
  updatedAt
  method
  path
  enabled
}

type main_permission {
  id: BigInt!
  createdAt: DateTime
  updatedAt: DateTime
  method: String!
  path: String!
  enabled: Int!
  _join: Query!
}

type main_PermissionCountAggregateOutputType {
  id: Int!
  createdAt: Int!
  updatedAt: Int!
  method: Int!
  path: Int!
  enabled: Int!
  _all: Int!
  _join: Query!
}

type main_PermissionAvgAggregateOutputType {
  id: Float
  enabled: Float
  _join: Query!
}

type main_PermissionSumAggregateOutputType {
  id: BigInt
  enabled: Int
  _join: Query!
}

type main_PermissionMinAggregateOutputType {
  id: BigInt
  createdAt: DateTime
  updatedAt: DateTime
  method: String
  path: String
  enabled: Int
  _join: Query!
}

type main_PermissionMaxAggregateOutputType {
  id: BigInt
  createdAt: DateTime
  updatedAt: DateTime
  method: String
  path: String
  enabled: Int
  _join: Query!
}

type main_AggregatePermission {
  _count: main_PermissionCountAggregateOutputType
  _avg: main_PermissionAvgAggregateOutputType
  _sum: main_PermissionSumAggregateOutputType
  _min: main_PermissionMinAggregateOutputType
  _max: main_PermissionMaxAggregateOutputType
  _join: Query!
}

input main_permissionCountOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  enabled: main_SortOrder
}

input main_permissionAvgOrderByAggregateInput {
  id: main_SortOrder
  enabled: main_SortOrder
}

input main_permissionMaxOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  enabled: main_SortOrder
}

input main_permissionMinOrderByAggregateInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  enabled: main_SortOrder
}

input main_permissionSumOrderByAggregateInput {
  id: main_SortOrder
  enabled: main_SortOrder
}

input main_permissionOrderByWithAggregationInput {
  id: main_SortOrder
  createdAt: main_SortOrder
  updatedAt: main_SortOrder
  method: main_SortOrder
  path: main_SortOrder
  enabled: main_SortOrder
  _count: main_permissionCountOrderByAggregateInput
  _avg: main_permissionAvgOrderByAggregateInput
  _max: main_permissionMaxOrderByAggregateInput
  _min: main_permissionMinOrderByAggregateInput
  _sum: main_permissionSumOrderByAggregateInput
}

input main_NestedBigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: main_NestedBigIntWithAggregatesFilter
  _count: main_NestedIntFilter
  _avg: main_NestedFloatFilter
  _sum: main_NestedBigIntFilter
  _min: main_NestedBigIntFilter
  _max: main_NestedBigIntFilter
}

input main_BigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: main_NestedBigIntWithAggregatesFilter
  _count: main_NestedIntFilter
  _avg: main_NestedFloatFilter
  _sum: main_NestedBigIntFilter
  _min: main_NestedBigIntFilter
  _max: main_NestedBigIntFilter
}

input main_permissionScalarWhereWithAggregatesInput {
  AND: main_permissionScalarWhereWithAggregatesInput
  OR: [main_permissionScalarWhereWithAggregatesInput]
  NOT: main_permissionScalarWhereWithAggregatesInput
  id: main_BigIntWithAggregatesFilter
  createdAt: main_DateTimeNullableWithAggregatesFilter
  updatedAt: main_DateTimeNullableWithAggregatesFilter
  method: main_StringWithAggregatesFilter
  path: main_StringWithAggregatesFilter
  enabled: main_IntWithAggregatesFilter
}

type main_PermissionGroupByOutputType {
  id: BigInt!
  createdAt: DateTime
  updatedAt: DateTime
  method: String!
  path: String!
  enabled: Int!
  _count: main_PermissionCountAggregateOutputType
  _avg: main_PermissionAvgAggregateOutputType
  _sum: main_PermissionSumAggregateOutputType
  _min: main_PermissionMinAggregateOutputType
  _max: main_PermissionMaxAggregateOutputType
  _join: Query!
}

input main_providerWhereInput {
  AND: main_providerWhereInput
  OR: [main_providerWhereInput]
  NOT: main_providerWhereInput
  owner: main_StringFilter
  name: main_StringFilter
  created_time: main_StringNullableFilter
  type: main_StringNullableFilter
  client_id: main_StringNullableFilter
  client_secret: main_StringNullableFilter
  sign_name: main_StringNullableFilter
  template_code: main_StringNullableFilter
}

input main_providerOrderByWithRelationInput {
  owner: main_SortOrder
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  client_id: main_SortOrder
  client_secret: main_SortOrder
  sign_name: main_SortOrder
  template_code: main_SortOrder
}

input main_providerOwnerNameCompoundUniqueInput {
  owner: String!
  name: String!
}

input main_providerWhereUniqueInput {
  name: String
  owner_name: main_providerOwnerNameCompoundUniqueInput
}

enum main_ProviderScalarFieldEnum {
  owner
  name
  created_time
  type
  client_id
  client_secret
  sign_name
  template_code
}

type main_provider {
  owner: String!
  name: String!
  created_time: String
  type: String
  client_id: String
  client_secret: String
  sign_name: String
  template_code: String
  _join: Query!
}

type main_ProviderCountAggregateOutputType {
  owner: Int!
  name: Int!
  created_time: Int!
  type: Int!
  client_id: Int!
  client_secret: Int!
  sign_name: Int!
  template_code: Int!
  _all: Int!
  _join: Query!
}

type main_ProviderMinAggregateOutputType {
  owner: String
  name: String
  created_time: String
  type: String
  client_id: String
  client_secret: String
  sign_name: String
  template_code: String
  _join: Query!
}

type main_ProviderMaxAggregateOutputType {
  owner: String
  name: String
  created_time: String
  type: String
  client_id: String
  client_secret: String
  sign_name: String
  template_code: String
  _join: Query!
}

type main_AggregateProvider {
  _count: main_ProviderCountAggregateOutputType
  _min: main_ProviderMinAggregateOutputType
  _max: main_ProviderMaxAggregateOutputType
  _join: Query!
}

input main_providerCountOrderByAggregateInput {
  owner: main_SortOrder
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  client_id: main_SortOrder
  client_secret: main_SortOrder
  sign_name: main_SortOrder
  template_code: main_SortOrder
}

input main_providerMaxOrderByAggregateInput {
  owner: main_SortOrder
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  client_id: main_SortOrder
  client_secret: main_SortOrder
  sign_name: main_SortOrder
  template_code: main_SortOrder
}

input main_providerMinOrderByAggregateInput {
  owner: main_SortOrder
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  client_id: main_SortOrder
  client_secret: main_SortOrder
  sign_name: main_SortOrder
  template_code: main_SortOrder
}

input main_providerOrderByWithAggregationInput {
  owner: main_SortOrder
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  client_id: main_SortOrder
  client_secret: main_SortOrder
  sign_name: main_SortOrder
  template_code: main_SortOrder
  _count: main_providerCountOrderByAggregateInput
  _max: main_providerMaxOrderByAggregateInput
  _min: main_providerMinOrderByAggregateInput
}

input main_providerScalarWhereWithAggregatesInput {
  AND: main_providerScalarWhereWithAggregatesInput
  OR: [main_providerScalarWhereWithAggregatesInput]
  NOT: main_providerScalarWhereWithAggregatesInput
  owner: main_StringWithAggregatesFilter
  name: main_StringWithAggregatesFilter
  created_time: main_StringNullableWithAggregatesFilter
  type: main_StringNullableWithAggregatesFilter
  client_id: main_StringNullableWithAggregatesFilter
  client_secret: main_StringNullableWithAggregatesFilter
  sign_name: main_StringNullableWithAggregatesFilter
  template_code: main_StringNullableWithAggregatesFilter
}

type main_ProviderGroupByOutputType {
  owner: String!
  name: String!
  created_time: String
  type: String
  client_id: String
  client_secret: String
  sign_name: String
  template_code: String
  _count: main_ProviderCountAggregateOutputType
  _min: main_ProviderMinAggregateOutputType
  _max: main_ProviderMaxAggregateOutputType
  _join: Query!
}

input main_roleWhereInput {
  AND: main_roleWhereInput
  OR: [main_roleWhereInput]
  NOT: main_roleWhereInput
  id: main_IntFilter
  code: main_StringFilter
  remark: main_StringFilter
}

input main_roleOrderByWithRelationInput {
  id: main_SortOrder
  code: main_SortOrder
  remark: main_SortOrder
}

input main_roleWhereUniqueInput {
  id: Int
  code: String
}

enum main_RoleScalarFieldEnum {
  id
  code
  remark
}

type main_role {
  id: Int!
  code: String!
  remark: String!
  _join: Query!
}

type main_RoleCountAggregateOutputType {
  id: Int!
  code: Int!
  remark: Int!
  _all: Int!
  _join: Query!
}

type main_RoleAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_RoleSumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_RoleMinAggregateOutputType {
  id: Int
  code: String
  remark: String
  _join: Query!
}

type main_RoleMaxAggregateOutputType {
  id: Int
  code: String
  remark: String
  _join: Query!
}

type main_AggregateRole {
  _count: main_RoleCountAggregateOutputType
  _avg: main_RoleAvgAggregateOutputType
  _sum: main_RoleSumAggregateOutputType
  _min: main_RoleMinAggregateOutputType
  _max: main_RoleMaxAggregateOutputType
  _join: Query!
}

input main_roleCountOrderByAggregateInput {
  id: main_SortOrder
  code: main_SortOrder
  remark: main_SortOrder
}

input main_roleAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_roleMaxOrderByAggregateInput {
  id: main_SortOrder
  code: main_SortOrder
  remark: main_SortOrder
}

input main_roleMinOrderByAggregateInput {
  id: main_SortOrder
  code: main_SortOrder
  remark: main_SortOrder
}

input main_roleSumOrderByAggregateInput {
  id: main_SortOrder
}

input main_roleOrderByWithAggregationInput {
  id: main_SortOrder
  code: main_SortOrder
  remark: main_SortOrder
  _count: main_roleCountOrderByAggregateInput
  _avg: main_roleAvgOrderByAggregateInput
  _max: main_roleMaxOrderByAggregateInput
  _min: main_roleMinOrderByAggregateInput
  _sum: main_roleSumOrderByAggregateInput
}

input main_roleScalarWhereWithAggregatesInput {
  AND: main_roleScalarWhereWithAggregatesInput
  OR: [main_roleScalarWhereWithAggregatesInput]
  NOT: main_roleScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  code: main_StringWithAggregatesFilter
  remark: main_StringWithAggregatesFilter
}

type main_RoleGroupByOutputType {
  id: Int!
  code: String!
  remark: String!
  _count: main_RoleCountAggregateOutputType
  _avg: main_RoleAvgAggregateOutputType
  _sum: main_RoleSumAggregateOutputType
  _min: main_RoleMinAggregateOutputType
  _max: main_RoleMaxAggregateOutputType
  _join: Query!
}

input main_role_userWhereInput {
  AND: main_role_userWhereInput
  OR: [main_role_userWhereInput]
  NOT: main_role_userWhereInput
  id: main_IntFilter
  role_id: main_IntFilter
  user_id: main_IntFilter
}

input main_role_userOrderByWithRelationInput {
  id: main_SortOrder
  role_id: main_SortOrder
  user_id: main_SortOrder
}

input main_role_userRole_idUser_idCompoundUniqueInput {
  role_id: Int!
  user_id: Int!
}

input main_role_userWhereUniqueInput {
  id: Int
  role_id_user_id: main_role_userRole_idUser_idCompoundUniqueInput
}

enum main_Role_userScalarFieldEnum {
  id
  role_id
  user_id
}

type main_role_user {
  id: Int!
  role_id: Int!
  user_id: Int!
  _join: Query!
}

type main_Role_userCountAggregateOutputType {
  id: Int!
  role_id: Int!
  user_id: Int!
  _all: Int!
  _join: Query!
}

type main_Role_userAvgAggregateOutputType {
  id: Float
  role_id: Float
  user_id: Float
  _join: Query!
}

type main_Role_userSumAggregateOutputType {
  id: Int
  role_id: Int
  user_id: Int
  _join: Query!
}

type main_Role_userMinAggregateOutputType {
  id: Int
  role_id: Int
  user_id: Int
  _join: Query!
}

type main_Role_userMaxAggregateOutputType {
  id: Int
  role_id: Int
  user_id: Int
  _join: Query!
}

type main_AggregateRole_user {
  _count: main_Role_userCountAggregateOutputType
  _avg: main_Role_userAvgAggregateOutputType
  _sum: main_Role_userSumAggregateOutputType
  _min: main_Role_userMinAggregateOutputType
  _max: main_Role_userMaxAggregateOutputType
  _join: Query!
}

input main_role_userCountOrderByAggregateInput {
  id: main_SortOrder
  role_id: main_SortOrder
  user_id: main_SortOrder
}

input main_role_userAvgOrderByAggregateInput {
  id: main_SortOrder
  role_id: main_SortOrder
  user_id: main_SortOrder
}

input main_role_userMaxOrderByAggregateInput {
  id: main_SortOrder
  role_id: main_SortOrder
  user_id: main_SortOrder
}

input main_role_userMinOrderByAggregateInput {
  id: main_SortOrder
  role_id: main_SortOrder
  user_id: main_SortOrder
}

input main_role_userSumOrderByAggregateInput {
  id: main_SortOrder
  role_id: main_SortOrder
  user_id: main_SortOrder
}

input main_role_userOrderByWithAggregationInput {
  id: main_SortOrder
  role_id: main_SortOrder
  user_id: main_SortOrder
  _count: main_role_userCountOrderByAggregateInput
  _avg: main_role_userAvgOrderByAggregateInput
  _max: main_role_userMaxOrderByAggregateInput
  _min: main_role_userMinOrderByAggregateInput
  _sum: main_role_userSumOrderByAggregateInput
}

input main_role_userScalarWhereWithAggregatesInput {
  AND: main_role_userScalarWhereWithAggregatesInput
  OR: [main_role_userScalarWhereWithAggregatesInput]
  NOT: main_role_userScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  role_id: main_IntWithAggregatesFilter
  user_id: main_IntWithAggregatesFilter
}

type main_Role_userGroupByOutputType {
  id: Int!
  role_id: Int!
  user_id: Int!
  _count: main_Role_userCountAggregateOutputType
  _avg: main_Role_userAvgAggregateOutputType
  _sum: main_Role_userSumAggregateOutputType
  _min: main_Role_userMinAggregateOutputType
  _max: main_Role_userMaxAggregateOutputType
  _join: Query!
}

input main_userWhereUniqueInput {
  id: Int
}

enum main_UserScalarFieldEnum {
  id
  created_at
  name
  avatar
  phone
  password_salt
  password
  country_code
  password_type
  user_id
}

type main_UserCountAggregateOutputType {
  id: Int!
  created_at: Int!
  name: Int!
  avatar: Int!
  phone: Int!
  password_salt: Int!
  password: Int!
  country_code: Int!
  password_type: Int!
  user_id: Int!
  _all: Int!
  _join: Query!
}

type main_UserAvgAggregateOutputType {
  id: Float
  _join: Query!
}

type main_UserSumAggregateOutputType {
  id: Int
  _join: Query!
}

type main_UserMinAggregateOutputType {
  id: Int
  created_at: DateTime
  name: String
  avatar: String
  phone: String
  password_salt: String
  password: String
  country_code: String
  password_type: String
  user_id: String
  _join: Query!
}

type main_UserMaxAggregateOutputType {
  id: Int
  created_at: DateTime
  name: String
  avatar: String
  phone: String
  password_salt: String
  password: String
  country_code: String
  password_type: String
  user_id: String
  _join: Query!
}

type main_AggregateUser {
  _count: main_UserCountAggregateOutputType
  _avg: main_UserAvgAggregateOutputType
  _sum: main_UserSumAggregateOutputType
  _min: main_UserMinAggregateOutputType
  _max: main_UserMaxAggregateOutputType
  _join: Query!
}

input main_userCountOrderByAggregateInput {
  id: main_SortOrder
  created_at: main_SortOrder
  name: main_SortOrder
  avatar: main_SortOrder
  phone: main_SortOrder
  password_salt: main_SortOrder
  password: main_SortOrder
  country_code: main_SortOrder
  password_type: main_SortOrder
  user_id: main_SortOrder
}

input main_userAvgOrderByAggregateInput {
  id: main_SortOrder
}

input main_userMaxOrderByAggregateInput {
  id: main_SortOrder
  created_at: main_SortOrder
  name: main_SortOrder
  avatar: main_SortOrder
  phone: main_SortOrder
  password_salt: main_SortOrder
  password: main_SortOrder
  country_code: main_SortOrder
  password_type: main_SortOrder
  user_id: main_SortOrder
}

input main_userMinOrderByAggregateInput {
  id: main_SortOrder
  created_at: main_SortOrder
  name: main_SortOrder
  avatar: main_SortOrder
  phone: main_SortOrder
  password_salt: main_SortOrder
  password: main_SortOrder
  country_code: main_SortOrder
  password_type: main_SortOrder
  user_id: main_SortOrder
}

input main_userSumOrderByAggregateInput {
  id: main_SortOrder
}

input main_userOrderByWithAggregationInput {
  id: main_SortOrder
  created_at: main_SortOrder
  name: main_SortOrder
  avatar: main_SortOrder
  phone: main_SortOrder
  password_salt: main_SortOrder
  password: main_SortOrder
  country_code: main_SortOrder
  password_type: main_SortOrder
  user_id: main_SortOrder
  _count: main_userCountOrderByAggregateInput
  _avg: main_userAvgOrderByAggregateInput
  _max: main_userMaxOrderByAggregateInput
  _min: main_userMinOrderByAggregateInput
  _sum: main_userSumOrderByAggregateInput
}

input main_userScalarWhereWithAggregatesInput {
  AND: main_userScalarWhereWithAggregatesInput
  OR: [main_userScalarWhereWithAggregatesInput]
  NOT: main_userScalarWhereWithAggregatesInput
  id: main_IntWithAggregatesFilter
  created_at: main_DateTimeNullableWithAggregatesFilter
  name: main_StringWithAggregatesFilter
  avatar: main_StringNullableWithAggregatesFilter
  phone: main_StringNullableWithAggregatesFilter
  password_salt: main_StringNullableWithAggregatesFilter
  password: main_StringNullableWithAggregatesFilter
  country_code: main_StringNullableWithAggregatesFilter
  password_type: main_StringNullableWithAggregatesFilter
  user_id: main_StringNullableWithAggregatesFilter
}

type main_UserGroupByOutputType {
  id: Int!
  created_at: DateTime
  name: String!
  avatar: String
  phone: String
  password_salt: String
  password: String
  country_code: String
  password_type: String
  user_id: String
  _count: main_UserCountAggregateOutputType
  _avg: main_UserAvgAggregateOutputType
  _sum: main_UserSumAggregateOutputType
  _min: main_UserMinAggregateOutputType
  _max: main_UserMaxAggregateOutputType
  _join: Query!
}

input main_NestedBoolNullableFilter {
  equals: Boolean
  not: main_NestedBoolNullableFilter
}

input main_BoolNullableFilter {
  equals: Boolean
  not: main_NestedBoolNullableFilter
}

input main_verification_recordWhereInput {
  AND: main_verification_recordWhereInput
  OR: [main_verification_recordWhereInput]
  NOT: main_verification_recordWhereInput
  name: main_StringFilter
  created_time: main_StringNullableFilter
  type: main_StringNullableFilter
  user: main_StringFilter
  provider: main_StringFilter
  receiver: main_StringFilter
  code: main_StringFilter
  time: main_BigIntFilter
  is_used: main_BoolNullableFilter
}

input main_verification_recordOrderByWithRelationInput {
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  user: main_SortOrder
  provider: main_SortOrder
  receiver: main_SortOrder
  code: main_SortOrder
  time: main_SortOrder
  is_used: main_SortOrder
}

input main_verification_recordWhereUniqueInput {
  name: String
}

enum main_Verification_recordScalarFieldEnum {
  name
  created_time
  type
  user
  provider
  receiver
  code
  time
  is_used
}

type main_verification_record {
  name: String!
  created_time: String
  type: String
  user: String!
  provider: String!
  receiver: String!
  code: String!
  time: BigInt!
  is_used: Boolean
  _join: Query!
}

type main_Verification_recordCountAggregateOutputType {
  name: Int!
  created_time: Int!
  type: Int!
  user: Int!
  provider: Int!
  receiver: Int!
  code: Int!
  time: Int!
  is_used: Int!
  _all: Int!
  _join: Query!
}

type main_Verification_recordAvgAggregateOutputType {
  time: Float
  _join: Query!
}

type main_Verification_recordSumAggregateOutputType {
  time: BigInt
  _join: Query!
}

type main_Verification_recordMinAggregateOutputType {
  name: String
  created_time: String
  type: String
  user: String
  provider: String
  receiver: String
  code: String
  time: BigInt
  is_used: Boolean
  _join: Query!
}

type main_Verification_recordMaxAggregateOutputType {
  name: String
  created_time: String
  type: String
  user: String
  provider: String
  receiver: String
  code: String
  time: BigInt
  is_used: Boolean
  _join: Query!
}

type main_AggregateVerification_record {
  _count: main_Verification_recordCountAggregateOutputType
  _avg: main_Verification_recordAvgAggregateOutputType
  _sum: main_Verification_recordSumAggregateOutputType
  _min: main_Verification_recordMinAggregateOutputType
  _max: main_Verification_recordMaxAggregateOutputType
  _join: Query!
}

input main_verification_recordCountOrderByAggregateInput {
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  user: main_SortOrder
  provider: main_SortOrder
  receiver: main_SortOrder
  code: main_SortOrder
  time: main_SortOrder
  is_used: main_SortOrder
}

input main_verification_recordAvgOrderByAggregateInput {
  time: main_SortOrder
}

input main_verification_recordMaxOrderByAggregateInput {
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  user: main_SortOrder
  provider: main_SortOrder
  receiver: main_SortOrder
  code: main_SortOrder
  time: main_SortOrder
  is_used: main_SortOrder
}

input main_verification_recordMinOrderByAggregateInput {
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  user: main_SortOrder
  provider: main_SortOrder
  receiver: main_SortOrder
  code: main_SortOrder
  time: main_SortOrder
  is_used: main_SortOrder
}

input main_verification_recordSumOrderByAggregateInput {
  time: main_SortOrder
}

input main_verification_recordOrderByWithAggregationInput {
  name: main_SortOrder
  created_time: main_SortOrder
  type: main_SortOrder
  user: main_SortOrder
  provider: main_SortOrder
  receiver: main_SortOrder
  code: main_SortOrder
  time: main_SortOrder
  is_used: main_SortOrder
  _count: main_verification_recordCountOrderByAggregateInput
  _avg: main_verification_recordAvgOrderByAggregateInput
  _max: main_verification_recordMaxOrderByAggregateInput
  _min: main_verification_recordMinOrderByAggregateInput
  _sum: main_verification_recordSumOrderByAggregateInput
}

input main_NestedBoolNullableWithAggregatesFilter {
  equals: Boolean
  not: main_NestedBoolNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _min: main_NestedBoolNullableFilter
  _max: main_NestedBoolNullableFilter
}

input main_BoolNullableWithAggregatesFilter {
  equals: Boolean
  not: main_NestedBoolNullableWithAggregatesFilter
  _count: main_NestedIntNullableFilter
  _min: main_NestedBoolNullableFilter
  _max: main_NestedBoolNullableFilter
}

input main_verification_recordScalarWhereWithAggregatesInput {
  AND: main_verification_recordScalarWhereWithAggregatesInput
  OR: [main_verification_recordScalarWhereWithAggregatesInput]
  NOT: main_verification_recordScalarWhereWithAggregatesInput
  name: main_StringWithAggregatesFilter
  created_time: main_StringNullableWithAggregatesFilter
  type: main_StringNullableWithAggregatesFilter
  user: main_StringWithAggregatesFilter
  provider: main_StringWithAggregatesFilter
  receiver: main_StringWithAggregatesFilter
  code: main_StringWithAggregatesFilter
  time: main_BigIntWithAggregatesFilter
  is_used: main_BoolNullableWithAggregatesFilter
}

type main_Verification_recordGroupByOutputType {
  name: String!
  created_time: String
  type: String
  user: String!
  provider: String!
  receiver: String!
  code: String!
  time: BigInt!
  is_used: Boolean
  _count: main_Verification_recordCountAggregateOutputType
  _avg: main_Verification_recordAvgAggregateOutputType
  _sum: main_Verification_recordSumAggregateOutputType
  _min: main_Verification_recordMinAggregateOutputType
  _max: main_Verification_recordMaxAggregateOutputType
  _join: Query!
}

input main_admin_apilogCreateInput {
  createdAt: DateTime
  updatedAt: DateTime!
  deletedAt: DateTime
  ip: String!
  method: String!
  path: String!
  code: String!
  ua: String!
  userId: String!
  userName: String!
}

input main_DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input main_NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input main_StringFieldUpdateOperationsInput {
  set: String
}

input main_admin_apilogUpdateInput {
  createdAt: main_DateTimeFieldUpdateOperationsInput
  updatedAt: main_DateTimeFieldUpdateOperationsInput
  deletedAt: main_NullableDateTimeFieldUpdateOperationsInput
  ip: main_StringFieldUpdateOperationsInput
  method: main_StringFieldUpdateOperationsInput
  path: main_StringFieldUpdateOperationsInput
  code: main_StringFieldUpdateOperationsInput
  ua: main_StringFieldUpdateOperationsInput
  userId: main_StringFieldUpdateOperationsInput
  userName: main_StringFieldUpdateOperationsInput
}

input main_admin_apilogCreateManyInput {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime!
  deletedAt: DateTime
  ip: String!
  method: String!
  path: String!
  code: String!
  ua: String!
  userId: String!
  userName: String!
}

type main_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input main_admin_apilogUpdateManyMutationInput {
  createdAt: main_DateTimeFieldUpdateOperationsInput
  updatedAt: main_DateTimeFieldUpdateOperationsInput
  deletedAt: main_NullableDateTimeFieldUpdateOperationsInput
  ip: main_StringFieldUpdateOperationsInput
  method: main_StringFieldUpdateOperationsInput
  path: main_StringFieldUpdateOperationsInput
  code: main_StringFieldUpdateOperationsInput
  ua: main_StringFieldUpdateOperationsInput
  userId: main_StringFieldUpdateOperationsInput
  userName: main_StringFieldUpdateOperationsInput
}

input main_userCreateWithoutAdmin_postInput {
  created_at: DateTime
  name: String!
  avatar: String
  phone: String
  password_salt: String
  password: String
  country_code: String
  password_type: String
  user_id: String
}

input main_userCreateOrConnectWithoutAdmin_postInput {
  where: main_userWhereUniqueInput!
  create: main_userCreateWithoutAdmin_postInput!
}

input main_userCreateNestedOneWithoutAdmin_postInput {
  create: main_userCreateWithoutAdmin_postInput
  connectOrCreate: main_userCreateOrConnectWithoutAdmin_postInput
  connect: main_userWhereUniqueInput
}

input main_admin_postCreateWithoutAdmin_categoryInput {
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  user: main_userCreateNestedOneWithoutAdmin_postInput
}

input main_admin_postCreateOrConnectWithoutAdmin_categoryInput {
  where: main_admin_postWhereUniqueInput!
  create: main_admin_postCreateWithoutAdmin_categoryInput!
}

input main_admin_postCreateManyAdmin_categoryInput {
  id: Int
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  auth: Int
}

input main_admin_postCreateManyAdmin_categoryInputEnvelope {
  data: [main_admin_postCreateManyAdmin_categoryInput]!
  skipDuplicates: Boolean
}

input main_admin_postCreateNestedManyWithoutAdmin_categoryInput {
  create: main_admin_postCreateWithoutAdmin_categoryInput
  connectOrCreate: main_admin_postCreateOrConnectWithoutAdmin_categoryInput
  createMany: main_admin_postCreateManyAdmin_categoryInputEnvelope
  connect: main_admin_postWhereUniqueInput
}

input main_admin_categoryCreateInput {
  name: String!
  admin_post: main_admin_postCreateNestedManyWithoutAdmin_categoryInput
}

input main_NullableStringFieldUpdateOperationsInput {
  set: String
}

input main_userUpdateWithoutAdmin_postInput {
  created_at: main_NullableDateTimeFieldUpdateOperationsInput
  name: main_StringFieldUpdateOperationsInput
  avatar: main_NullableStringFieldUpdateOperationsInput
  phone: main_NullableStringFieldUpdateOperationsInput
  password_salt: main_NullableStringFieldUpdateOperationsInput
  password: main_NullableStringFieldUpdateOperationsInput
  country_code: main_NullableStringFieldUpdateOperationsInput
  password_type: main_NullableStringFieldUpdateOperationsInput
  user_id: main_NullableStringFieldUpdateOperationsInput
}

input main_userUpsertWithoutAdmin_postInput {
  update: main_userUpdateWithoutAdmin_postInput!
  create: main_userCreateWithoutAdmin_postInput!
}

input main_userUpdateOneWithoutAdmin_postNestedInput {
  create: main_userCreateWithoutAdmin_postInput
  connectOrCreate: main_userCreateOrConnectWithoutAdmin_postInput
  upsert: main_userUpsertWithoutAdmin_postInput
  disconnect: Boolean
  delete: Boolean
  connect: main_userWhereUniqueInput
  update: main_userUpdateWithoutAdmin_postInput
}

input main_admin_postUpdateWithoutAdmin_categoryInput {
  title: main_StringFieldUpdateOperationsInput
  poster: main_NullableStringFieldUpdateOperationsInput
  published_at: main_NullableDateTimeFieldUpdateOperationsInput
  author: main_StringFieldUpdateOperationsInput
  content: main_NullableStringFieldUpdateOperationsInput
  user: main_userUpdateOneWithoutAdmin_postNestedInput
}

input main_admin_postUpsertWithWhereUniqueWithoutAdmin_categoryInput {
  where: main_admin_postWhereUniqueInput!
  update: main_admin_postUpdateWithoutAdmin_categoryInput!
  create: main_admin_postCreateWithoutAdmin_categoryInput!
}

input main_admin_postUpdateWithWhereUniqueWithoutAdmin_categoryInput {
  where: main_admin_postWhereUniqueInput!
  data: main_admin_postUpdateWithoutAdmin_categoryInput!
}

input main_admin_postScalarWhereInput {
  AND: main_admin_postScalarWhereInput
  OR: [main_admin_postScalarWhereInput]
  NOT: main_admin_postScalarWhereInput
  id: main_IntFilter
  title: main_StringFilter
  poster: main_StringNullableFilter
  published_at: main_DateTimeNullableFilter
  author: main_StringFilter
  content: main_StringNullableFilter
  cate: main_IntNullableFilter
  auth: main_IntNullableFilter
}

input main_admin_postUpdateManyMutationInput {
  title: main_StringFieldUpdateOperationsInput
  poster: main_NullableStringFieldUpdateOperationsInput
  published_at: main_NullableDateTimeFieldUpdateOperationsInput
  author: main_StringFieldUpdateOperationsInput
  content: main_NullableStringFieldUpdateOperationsInput
}

input main_admin_postUpdateManyWithWhereWithoutAdmin_categoryInput {
  where: main_admin_postScalarWhereInput!
  data: main_admin_postUpdateManyMutationInput!
}

input main_admin_postUpdateManyWithoutAdmin_categoryNestedInput {
  create: main_admin_postCreateWithoutAdmin_categoryInput
  connectOrCreate: main_admin_postCreateOrConnectWithoutAdmin_categoryInput
  upsert: main_admin_postUpsertWithWhereUniqueWithoutAdmin_categoryInput
  createMany: main_admin_postCreateManyAdmin_categoryInputEnvelope
  set: main_admin_postWhereUniqueInput
  disconnect: main_admin_postWhereUniqueInput
  delete: main_admin_postWhereUniqueInput
  connect: main_admin_postWhereUniqueInput
  update: main_admin_postUpdateWithWhereUniqueWithoutAdmin_categoryInput
  updateMany: main_admin_postUpdateManyWithWhereWithoutAdmin_categoryInput
  deleteMany: main_admin_postScalarWhereInput
}

input main_admin_categoryUpdateInput {
  name: main_StringFieldUpdateOperationsInput
  admin_post: main_admin_postUpdateManyWithoutAdmin_categoryNestedInput
}

input main_admin_categoryCreateManyInput {
  id: Int
  name: String!
}

input main_admin_categoryUpdateManyMutationInput {
  name: main_StringFieldUpdateOperationsInput
}

input main_admin_menuCreateInput {
  parentId: Int
  label: String!
  path: String
  icon: String
  sort: Int!
  level: Int!
  name: String
  is_bottom: Int
  create_time: DateTime
  perms: String
  menu_type: String
  api_id: String
}

input main_NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input main_IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input main_admin_menuUpdateInput {
  parentId: main_NullableIntFieldUpdateOperationsInput
  label: main_StringFieldUpdateOperationsInput
  path: main_NullableStringFieldUpdateOperationsInput
  icon: main_NullableStringFieldUpdateOperationsInput
  sort: main_IntFieldUpdateOperationsInput
  level: main_IntFieldUpdateOperationsInput
  name: main_NullableStringFieldUpdateOperationsInput
  is_bottom: main_IntFieldUpdateOperationsInput
  create_time: main_NullableDateTimeFieldUpdateOperationsInput
  perms: main_NullableStringFieldUpdateOperationsInput
  menu_type: main_NullableStringFieldUpdateOperationsInput
  api_id: main_NullableStringFieldUpdateOperationsInput
}

input main_admin_menuCreateManyInput {
  id: Int
  parentId: Int
  label: String!
  path: String
  icon: String
  sort: Int!
  level: Int!
  name: String
  is_bottom: Int
  create_time: DateTime
  perms: String
  menu_type: String
  api_id: String
}

input main_admin_menuUpdateManyMutationInput {
  parentId: main_NullableIntFieldUpdateOperationsInput
  label: main_StringFieldUpdateOperationsInput
  path: main_NullableStringFieldUpdateOperationsInput
  icon: main_NullableStringFieldUpdateOperationsInput
  sort: main_IntFieldUpdateOperationsInput
  level: main_IntFieldUpdateOperationsInput
  name: main_NullableStringFieldUpdateOperationsInput
  is_bottom: main_IntFieldUpdateOperationsInput
  create_time: main_NullableDateTimeFieldUpdateOperationsInput
  perms: main_NullableStringFieldUpdateOperationsInput
  menu_type: main_NullableStringFieldUpdateOperationsInput
  api_id: main_NullableStringFieldUpdateOperationsInput
}

input main_admin_categoryCreateWithoutAdmin_postInput {
  name: String!
}

input main_admin_categoryCreateOrConnectWithoutAdmin_postInput {
  where: main_admin_categoryWhereUniqueInput!
  create: main_admin_categoryCreateWithoutAdmin_postInput!
}

input main_admin_categoryCreateNestedOneWithoutAdmin_postInput {
  create: main_admin_categoryCreateWithoutAdmin_postInput
  connectOrCreate: main_admin_categoryCreateOrConnectWithoutAdmin_postInput
  connect: main_admin_categoryWhereUniqueInput
}

input main_admin_postCreateInput {
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  user: main_userCreateNestedOneWithoutAdmin_postInput
  admin_category: main_admin_categoryCreateNestedOneWithoutAdmin_postInput
}

input main_admin_categoryUpdateWithoutAdmin_postInput {
  name: main_StringFieldUpdateOperationsInput
}

input main_admin_categoryUpsertWithoutAdmin_postInput {
  update: main_admin_categoryUpdateWithoutAdmin_postInput!
  create: main_admin_categoryCreateWithoutAdmin_postInput!
}

input main_admin_categoryUpdateOneWithoutAdmin_postNestedInput {
  create: main_admin_categoryCreateWithoutAdmin_postInput
  connectOrCreate: main_admin_categoryCreateOrConnectWithoutAdmin_postInput
  upsert: main_admin_categoryUpsertWithoutAdmin_postInput
  disconnect: Boolean
  delete: Boolean
  connect: main_admin_categoryWhereUniqueInput
  update: main_admin_categoryUpdateWithoutAdmin_postInput
}

input main_admin_postUpdateInput {
  title: main_StringFieldUpdateOperationsInput
  poster: main_NullableStringFieldUpdateOperationsInput
  published_at: main_NullableDateTimeFieldUpdateOperationsInput
  author: main_StringFieldUpdateOperationsInput
  content: main_NullableStringFieldUpdateOperationsInput
  user: main_userUpdateOneWithoutAdmin_postNestedInput
  admin_category: main_admin_categoryUpdateOneWithoutAdmin_postNestedInput
}

input main_admin_postCreateManyInput {
  id: Int
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  cate: Int
  auth: Int
}

input main_admin_saletypeCreateWithoutAdmin_salelogInput {
  name: String!
  createdAt: String!
}

input main_admin_saletypeCreateOrConnectWithoutAdmin_salelogInput {
  where: main_admin_saletypeWhereUniqueInput!
  create: main_admin_saletypeCreateWithoutAdmin_salelogInput!
}

input main_admin_saletypeCreateNestedOneWithoutAdmin_salelogInput {
  create: main_admin_saletypeCreateWithoutAdmin_salelogInput
  connectOrCreate: main_admin_saletypeCreateOrConnectWithoutAdmin_salelogInput
  connect: main_admin_saletypeWhereUniqueInput
}

input main_admin_salelogCreateInput {
  shopName: String!
  day: DateTime!
  sales: Float!
  admin_saletype: main_admin_saletypeCreateNestedOneWithoutAdmin_salelogInput!
}

input main_FloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input main_admin_saletypeUpdateWithoutAdmin_salelogInput {
  name: main_StringFieldUpdateOperationsInput
  createdAt: main_StringFieldUpdateOperationsInput
}

input main_admin_saletypeUpsertWithoutAdmin_salelogInput {
  update: main_admin_saletypeUpdateWithoutAdmin_salelogInput!
  create: main_admin_saletypeCreateWithoutAdmin_salelogInput!
}

input main_admin_saletypeUpdateOneRequiredWithoutAdmin_salelogNestedInput {
  create: main_admin_saletypeCreateWithoutAdmin_salelogInput
  connectOrCreate: main_admin_saletypeCreateOrConnectWithoutAdmin_salelogInput
  upsert: main_admin_saletypeUpsertWithoutAdmin_salelogInput
  connect: main_admin_saletypeWhereUniqueInput
  update: main_admin_saletypeUpdateWithoutAdmin_salelogInput
}

input main_admin_salelogUpdateInput {
  shopName: main_StringFieldUpdateOperationsInput
  day: main_DateTimeFieldUpdateOperationsInput
  sales: main_FloatFieldUpdateOperationsInput
  admin_saletype: main_admin_saletypeUpdateOneRequiredWithoutAdmin_salelogNestedInput
}

input main_admin_salelogCreateManyInput {
  id: Int
  shopName: String!
  day: DateTime!
  sales: Float!
  typeId: Int!
}

input main_admin_salelogUpdateManyMutationInput {
  shopName: main_StringFieldUpdateOperationsInput
  day: main_DateTimeFieldUpdateOperationsInput
  sales: main_FloatFieldUpdateOperationsInput
}

input main_admin_salelogCreateWithoutAdmin_saletypeInput {
  shopName: String!
  day: DateTime!
  sales: Float!
}

input main_admin_salelogCreateOrConnectWithoutAdmin_saletypeInput {
  where: main_admin_salelogWhereUniqueInput!
  create: main_admin_salelogCreateWithoutAdmin_saletypeInput!
}

input main_admin_salelogCreateManyAdmin_saletypeInput {
  id: Int
  shopName: String!
  day: DateTime!
  sales: Float!
}

input main_admin_salelogCreateManyAdmin_saletypeInputEnvelope {
  data: [main_admin_salelogCreateManyAdmin_saletypeInput]!
  skipDuplicates: Boolean
}

input main_admin_salelogCreateNestedManyWithoutAdmin_saletypeInput {
  create: main_admin_salelogCreateWithoutAdmin_saletypeInput
  connectOrCreate: main_admin_salelogCreateOrConnectWithoutAdmin_saletypeInput
  createMany: main_admin_salelogCreateManyAdmin_saletypeInputEnvelope
  connect: main_admin_salelogWhereUniqueInput
}

input main_admin_saletypeCreateInput {
  name: String!
  createdAt: String!
  admin_salelog: main_admin_salelogCreateNestedManyWithoutAdmin_saletypeInput
}

input main_admin_salelogUpdateWithoutAdmin_saletypeInput {
  shopName: main_StringFieldUpdateOperationsInput
  day: main_DateTimeFieldUpdateOperationsInput
  sales: main_FloatFieldUpdateOperationsInput
}

input main_admin_salelogUpsertWithWhereUniqueWithoutAdmin_saletypeInput {
  where: main_admin_salelogWhereUniqueInput!
  update: main_admin_salelogUpdateWithoutAdmin_saletypeInput!
  create: main_admin_salelogCreateWithoutAdmin_saletypeInput!
}

input main_admin_salelogUpdateWithWhereUniqueWithoutAdmin_saletypeInput {
  where: main_admin_salelogWhereUniqueInput!
  data: main_admin_salelogUpdateWithoutAdmin_saletypeInput!
}

input main_admin_salelogScalarWhereInput {
  AND: main_admin_salelogScalarWhereInput
  OR: [main_admin_salelogScalarWhereInput]
  NOT: main_admin_salelogScalarWhereInput
  id: main_IntFilter
  shopName: main_StringFilter
  day: main_DateTimeFilter
  sales: main_FloatFilter
  typeId: main_IntFilter
}

input main_admin_salelogUpdateManyWithWhereWithoutAdmin_saletypeInput {
  where: main_admin_salelogScalarWhereInput!
  data: main_admin_salelogUpdateManyMutationInput!
}

input main_admin_salelogUpdateManyWithoutAdmin_saletypeNestedInput {
  create: main_admin_salelogCreateWithoutAdmin_saletypeInput
  connectOrCreate: main_admin_salelogCreateOrConnectWithoutAdmin_saletypeInput
  upsert: main_admin_salelogUpsertWithWhereUniqueWithoutAdmin_saletypeInput
  createMany: main_admin_salelogCreateManyAdmin_saletypeInputEnvelope
  set: main_admin_salelogWhereUniqueInput
  disconnect: main_admin_salelogWhereUniqueInput
  delete: main_admin_salelogWhereUniqueInput
  connect: main_admin_salelogWhereUniqueInput
  update: main_admin_salelogUpdateWithWhereUniqueWithoutAdmin_saletypeInput
  updateMany: main_admin_salelogUpdateManyWithWhereWithoutAdmin_saletypeInput
  deleteMany: main_admin_salelogScalarWhereInput
}

input main_admin_saletypeUpdateInput {
  name: main_StringFieldUpdateOperationsInput
  createdAt: main_StringFieldUpdateOperationsInput
  admin_salelog: main_admin_salelogUpdateManyWithoutAdmin_saletypeNestedInput
}

input main_admin_saletypeCreateManyInput {
  id: Int
  name: String!
  createdAt: String!
}

input main_admin_saletypeUpdateManyMutationInput {
  name: main_StringFieldUpdateOperationsInput
  createdAt: main_StringFieldUpdateOperationsInput
}

input main_admin_subCreateInput {
  createdAt: DateTime
  updatedAt: DateTime!
  deletedAt: DateTime
  message: String!
  create_role: String!
  target_role: String!
  type: String!
}

input main_admin_subUpdateInput {
  createdAt: main_DateTimeFieldUpdateOperationsInput
  updatedAt: main_DateTimeFieldUpdateOperationsInput
  deletedAt: main_NullableDateTimeFieldUpdateOperationsInput
  message: main_StringFieldUpdateOperationsInput
  create_role: main_StringFieldUpdateOperationsInput
  target_role: main_StringFieldUpdateOperationsInput
  type: main_StringFieldUpdateOperationsInput
}

input main_admin_subCreateManyInput {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime!
  deletedAt: DateTime
  message: String!
  create_role: String!
  target_role: String!
  type: String!
}

input main_admin_subUpdateManyMutationInput {
  createdAt: main_DateTimeFieldUpdateOperationsInput
  updatedAt: main_DateTimeFieldUpdateOperationsInput
  deletedAt: main_NullableDateTimeFieldUpdateOperationsInput
  message: main_StringFieldUpdateOperationsInput
  create_role: main_StringFieldUpdateOperationsInput
  target_role: main_StringFieldUpdateOperationsInput
  type: main_StringFieldUpdateOperationsInput
}

input main_admin_visitlogCreateInput {
  ip: String!
  ua: String!
  visitedAt: String!
}

input main_admin_visitlogUpdateInput {
  ip: main_StringFieldUpdateOperationsInput
  ua: main_StringFieldUpdateOperationsInput
  visitedAt: main_StringFieldUpdateOperationsInput
}

input main_admin_visitlogCreateManyInput {
  id: Int
  ip: String!
  ua: String!
  visitedAt: String!
}

input main_admin_visitlogUpdateManyMutationInput {
  ip: main_StringFieldUpdateOperationsInput
  ua: main_StringFieldUpdateOperationsInput
  visitedAt: main_StringFieldUpdateOperationsInput
}

input main_dicCreateInput {
  createdAt: DateTime
  updatedAt: DateTime!
  deletedAt: DateTime
  isOpen: Boolean!
}

input main_BoolFieldUpdateOperationsInput {
  set: Boolean
}

input main_dicUpdateInput {
  createdAt: main_DateTimeFieldUpdateOperationsInput
  updatedAt: main_DateTimeFieldUpdateOperationsInput
  deletedAt: main_NullableDateTimeFieldUpdateOperationsInput
  isOpen: main_BoolFieldUpdateOperationsInput
}

input main_dicCreateManyInput {
  id: Int
  createdAt: DateTime
  updatedAt: DateTime!
  deletedAt: DateTime
  isOpen: Boolean!
}

input main_dicUpdateManyMutationInput {
  createdAt: main_DateTimeFieldUpdateOperationsInput
  updatedAt: main_DateTimeFieldUpdateOperationsInput
  deletedAt: main_NullableDateTimeFieldUpdateOperationsInput
  isOpen: main_BoolFieldUpdateOperationsInput
}

input main_menu_roleCreateInput {
  menu_id: Int!
  role_id: Int!
}

input main_menu_roleUpdateInput {
  menu_id: main_IntFieldUpdateOperationsInput
  role_id: main_IntFieldUpdateOperationsInput
}

input main_menu_roleCreateManyInput {
  id: Int
  menu_id: Int!
  role_id: Int!
}

input main_menu_roleUpdateManyMutationInput {
  menu_id: main_IntFieldUpdateOperationsInput
  role_id: main_IntFieldUpdateOperationsInput
}

input main_permissionCreateInput {
  id: BigInt!
  createdAt: DateTime
  updatedAt: DateTime
  method: String!
  path: String!
  enabled: Int
}

input main_BigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input main_permissionUpdateInput {
  id: main_BigIntFieldUpdateOperationsInput
  createdAt: main_NullableDateTimeFieldUpdateOperationsInput
  updatedAt: main_NullableDateTimeFieldUpdateOperationsInput
  method: main_StringFieldUpdateOperationsInput
  path: main_StringFieldUpdateOperationsInput
  enabled: main_IntFieldUpdateOperationsInput
}

input main_permissionCreateManyInput {
  id: BigInt!
  createdAt: DateTime
  updatedAt: DateTime
  method: String!
  path: String!
  enabled: Int
}

input main_permissionUpdateManyMutationInput {
  id: main_BigIntFieldUpdateOperationsInput
  createdAt: main_NullableDateTimeFieldUpdateOperationsInput
  updatedAt: main_NullableDateTimeFieldUpdateOperationsInput
  method: main_StringFieldUpdateOperationsInput
  path: main_StringFieldUpdateOperationsInput
  enabled: main_IntFieldUpdateOperationsInput
}

input main_providerCreateInput {
  owner: String!
  name: String!
  created_time: String
  type: String
  client_id: String
  client_secret: String
  sign_name: String
  template_code: String
}

input main_providerUpdateInput {
  owner: main_StringFieldUpdateOperationsInput
  name: main_StringFieldUpdateOperationsInput
  created_time: main_NullableStringFieldUpdateOperationsInput
  type: main_NullableStringFieldUpdateOperationsInput
  client_id: main_NullableStringFieldUpdateOperationsInput
  client_secret: main_NullableStringFieldUpdateOperationsInput
  sign_name: main_NullableStringFieldUpdateOperationsInput
  template_code: main_NullableStringFieldUpdateOperationsInput
}

input main_providerCreateManyInput {
  owner: String!
  name: String!
  created_time: String
  type: String
  client_id: String
  client_secret: String
  sign_name: String
  template_code: String
}

input main_providerUpdateManyMutationInput {
  owner: main_StringFieldUpdateOperationsInput
  name: main_StringFieldUpdateOperationsInput
  created_time: main_NullableStringFieldUpdateOperationsInput
  type: main_NullableStringFieldUpdateOperationsInput
  client_id: main_NullableStringFieldUpdateOperationsInput
  client_secret: main_NullableStringFieldUpdateOperationsInput
  sign_name: main_NullableStringFieldUpdateOperationsInput
  template_code: main_NullableStringFieldUpdateOperationsInput
}

input main_roleCreateInput {
  code: String!
  remark: String!
}

input main_roleUpdateInput {
  code: main_StringFieldUpdateOperationsInput
  remark: main_StringFieldUpdateOperationsInput
}

input main_roleCreateManyInput {
  id: Int
  code: String!
  remark: String!
}

input main_roleUpdateManyMutationInput {
  code: main_StringFieldUpdateOperationsInput
  remark: main_StringFieldUpdateOperationsInput
}

input main_role_userCreateInput {
  role_id: Int!
  user_id: Int!
}

input main_role_userUpdateInput {
  role_id: main_IntFieldUpdateOperationsInput
  user_id: main_IntFieldUpdateOperationsInput
}

input main_role_userCreateManyInput {
  id: Int
  role_id: Int!
  user_id: Int!
}

input main_role_userUpdateManyMutationInput {
  role_id: main_IntFieldUpdateOperationsInput
  user_id: main_IntFieldUpdateOperationsInput
}

input main_admin_postCreateWithoutUserInput {
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  admin_category: main_admin_categoryCreateNestedOneWithoutAdmin_postInput
}

input main_admin_postCreateOrConnectWithoutUserInput {
  where: main_admin_postWhereUniqueInput!
  create: main_admin_postCreateWithoutUserInput!
}

input main_admin_postCreateManyUserInput {
  id: Int
  title: String!
  poster: String
  published_at: DateTime
  author: String!
  content: String
  cate: Int
}

input main_admin_postCreateManyUserInputEnvelope {
  data: [main_admin_postCreateManyUserInput]!
  skipDuplicates: Boolean
}

input main_admin_postCreateNestedManyWithoutUserInput {
  create: main_admin_postCreateWithoutUserInput
  connectOrCreate: main_admin_postCreateOrConnectWithoutUserInput
  createMany: main_admin_postCreateManyUserInputEnvelope
  connect: main_admin_postWhereUniqueInput
}

input main_userCreateInput {
  created_at: DateTime
  name: String!
  avatar: String
  phone: String
  password_salt: String
  password: String
  country_code: String
  password_type: String
  user_id: String
  admin_post: main_admin_postCreateNestedManyWithoutUserInput
}

input main_admin_postUpdateWithoutUserInput {
  title: main_StringFieldUpdateOperationsInput
  poster: main_NullableStringFieldUpdateOperationsInput
  published_at: main_NullableDateTimeFieldUpdateOperationsInput
  author: main_StringFieldUpdateOperationsInput
  content: main_NullableStringFieldUpdateOperationsInput
  admin_category: main_admin_categoryUpdateOneWithoutAdmin_postNestedInput
}

input main_admin_postUpsertWithWhereUniqueWithoutUserInput {
  where: main_admin_postWhereUniqueInput!
  update: main_admin_postUpdateWithoutUserInput!
  create: main_admin_postCreateWithoutUserInput!
}

input main_admin_postUpdateWithWhereUniqueWithoutUserInput {
  where: main_admin_postWhereUniqueInput!
  data: main_admin_postUpdateWithoutUserInput!
}

input main_admin_postUpdateManyWithWhereWithoutUserInput {
  where: main_admin_postScalarWhereInput!
  data: main_admin_postUpdateManyMutationInput!
}

input main_admin_postUpdateManyWithoutUserNestedInput {
  create: main_admin_postCreateWithoutUserInput
  connectOrCreate: main_admin_postCreateOrConnectWithoutUserInput
  upsert: main_admin_postUpsertWithWhereUniqueWithoutUserInput
  createMany: main_admin_postCreateManyUserInputEnvelope
  set: main_admin_postWhereUniqueInput
  disconnect: main_admin_postWhereUniqueInput
  delete: main_admin_postWhereUniqueInput
  connect: main_admin_postWhereUniqueInput
  update: main_admin_postUpdateWithWhereUniqueWithoutUserInput
  updateMany: main_admin_postUpdateManyWithWhereWithoutUserInput
  deleteMany: main_admin_postScalarWhereInput
}

input main_userUpdateInput {
  created_at: main_NullableDateTimeFieldUpdateOperationsInput
  name: main_StringFieldUpdateOperationsInput
  avatar: main_NullableStringFieldUpdateOperationsInput
  phone: main_NullableStringFieldUpdateOperationsInput
  password_salt: main_NullableStringFieldUpdateOperationsInput
  password: main_NullableStringFieldUpdateOperationsInput
  country_code: main_NullableStringFieldUpdateOperationsInput
  password_type: main_NullableStringFieldUpdateOperationsInput
  user_id: main_NullableStringFieldUpdateOperationsInput
  admin_post: main_admin_postUpdateManyWithoutUserNestedInput
}

input main_userCreateManyInput {
  id: Int
  created_at: DateTime
  name: String!
  avatar: String
  phone: String
  password_salt: String
  password: String
  country_code: String
  password_type: String
  user_id: String
}

input main_userUpdateManyMutationInput {
  created_at: main_NullableDateTimeFieldUpdateOperationsInput
  name: main_StringFieldUpdateOperationsInput
  avatar: main_NullableStringFieldUpdateOperationsInput
  phone: main_NullableStringFieldUpdateOperationsInput
  password_salt: main_NullableStringFieldUpdateOperationsInput
  password: main_NullableStringFieldUpdateOperationsInput
  country_code: main_NullableStringFieldUpdateOperationsInput
  password_type: main_NullableStringFieldUpdateOperationsInput
  user_id: main_NullableStringFieldUpdateOperationsInput
}

input main_verification_recordCreateInput {
  name: String!
  created_time: String
  type: String
  user: String!
  provider: String!
  receiver: String!
  code: String!
  time: BigInt!
  is_used: Boolean
}

input main_NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input main_verification_recordUpdateInput {
  name: main_StringFieldUpdateOperationsInput
  created_time: main_NullableStringFieldUpdateOperationsInput
  type: main_NullableStringFieldUpdateOperationsInput
  user: main_StringFieldUpdateOperationsInput
  provider: main_StringFieldUpdateOperationsInput
  receiver: main_StringFieldUpdateOperationsInput
  code: main_StringFieldUpdateOperationsInput
  time: main_BigIntFieldUpdateOperationsInput
  is_used: main_NullableBoolFieldUpdateOperationsInput
}

input main_verification_recordCreateManyInput {
  name: String!
  created_time: String
  type: String
  user: String!
  provider: String!
  receiver: String!
  code: String!
  time: BigInt!
  is_used: Boolean
}

input main_verification_recordUpdateManyMutationInput {
  name: main_StringFieldUpdateOperationsInput
  created_time: main_NullableStringFieldUpdateOperationsInput
  type: main_NullableStringFieldUpdateOperationsInput
  user: main_StringFieldUpdateOperationsInput
  provider: main_StringFieldUpdateOperationsInput
  receiver: main_StringFieldUpdateOperationsInput
  code: main_StringFieldUpdateOperationsInput
  time: main_BigIntFieldUpdateOperationsInput
  is_used: main_NullableBoolFieldUpdateOperationsInput
}

scalar DateTime

scalar main_Json

scalar UUID

scalar BigInt

scalar main_Decimal

scalar main_Bytes

type casdoor_objectResponse {
  msg: String
  status: Int
  _join: Query!
}

input casdoor_POSTApiUpdate_providerInput {
  signName: String!
  templateCode: String!
  clientId: String!
  clientSecret: String!
}

type casdoor_objectUserinfo {
  phone: String
  preferred_username: String
  _join: Query!
}

input casdoor_POSTApiAdd_userInput {
  name: String!
  password: String!
  passwordType: String
  phone: String!
  countryCode: String
}

input casdoor_POSTApiUpdate_userInput {
  name: String!
  password: String!
  passwordType: String
  phone: String!
  countryCode: String
  userId: String!
}

type casdoor_apiUserResponse {
  success: Boolean
  data: casdoor_objectTokenRes
  msg: String
  _join: Query!
}

type casdoor_objectTokenRes {
  accessToken: String
  expireIn: Int
  refreshToken: String
  _join: Query!
}

input casdoor_POSTApiLoginInput {
  loginType: String!
  username: String!
  phone: String!
  countryCode: String
  code: String!
  password: String!
}

input casdoor_POSTApiRefresh_tokenInput {
  
  """refresh-token"""
  refresh_token: String!
}

input casdoor_POSTApiSend_verification_codeInput {
  dest: String!
  countryCode: String
}

directive @rbac(
  
  """the user must match all roles"""
  requireMatchAll: [WG_ROLE]
  
  """the user must match at least one of the roles"""
  requireMatchAny: [WG_ROLE]
  
  """the user must not match all of the roles"""
  denyMatchAll: [WG_ROLE]
  
  """the user must not match any of the roles"""
  denyMatchAny: [WG_ROLE]
) on QUERY | MUTATION | SUBSCRIPTION

enum WG_ROLE {
  admin
  user
  eeee
  aaaa
  aa
  editer
  admin1
  ac
  b1a23
  a231
  abc
  abc1
  abc32
}

directive @fromClaim(name: Claim) on VARIABLE_DEFINITION

enum Claim {
  USERID
  EMAIL
  EMAIL_VERIFIED
  NAME
  NICKNAME
  LOCATION
  PROVIDER
  
  """ROLES is string array, Please use in [in, notIn]."""
  ROLES
}

directive @hooksVariable on VARIABLE_DEFINITION

directive @jsonSchema(
  
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  title: String
  
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  description: String
  
  """
  The value of "multipleOf" MUST be a number, strictly greater than 0.
  
  A numeric instance is valid only if division by this keyword's value
  results in an integer.
  """
  multipleOf: Int
  
  """
  The value of "maximum" MUST be a number, representing an inclusive
  upper limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is less than or exactly equal to "maximum".
  """
  maximum: Int
  
  """
  The value of "exclusiveMaximum" MUST be number, representing an
  exclusive upper limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly less than (not equal to) "exclusiveMaximum".
  """
  exclusiveMaximum: Int
  
  """
  The value of "minimum" MUST be a number, representing an inclusive
  lower limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is greater than or exactly equal to "minimum".
  """
  minimum: Int
  
  """
  The value of "exclusiveMinimum" MUST be number, representing an
  exclusive lower limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly greater than (not equal to) "exclusiveMinimum".
  """
  exclusiveMinimum: Int
  
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is less
  than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  """
  maxLength: Int
  
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is
  greater than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minLength: Int
  
  """
  The value of this keyword MUST be a string.  This string SHOULD be a
  valid regular expression, according to the ECMA 262 regular
  expression dialect.
  
  A string instance is considered valid if the regular expression
  matches the instance successfully.  Recall: regular expressions are
  not implicitly anchored.
  """
  pattern: String
  
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "maxItems" if its size is less
  than, or equal to, the value of this keyword.
  """
  maxItems: Int
  
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "minItems" if its size is greater
  than, or equal to, the value of this keyword.
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minItems: Int
  
  """
  The value of this keyword MUST be a boolean.
  
  If this keyword has boolean value false, the instance validates
  successfully.  If it has boolean value true, the instance validates
  successfully if all of its elements are unique.
  
  Omitting this keyword has the same behavior as a value of false.
  """
  uniqueItems: Boolean
  commonPattern: COMMON_REGEX_PATTERN
) on VARIABLE_DEFINITION

enum COMMON_REGEX_PATTERN {
  EMAIL
  DOMAIN
}

"""
The directive @injectCurrentDateTime injects a DateTime string of the current date and time into the variable.
This variable MUST be a string compatible scalar. 

The default format, is: ISO 8601
If no format is chosen, the default format is used.
Custom formats are allowed by specifying a format conforming to the Golang specification for specifying a date time format.
"""
directive @injectCurrentDateTime(
  format: WunderGraphDateTimeFormat = ISO8601
  
  """customFormat must conform to the Golang specification for specifying a date time format"""
  customFormat: String
) on VARIABLE_DEFINITION

enum WunderGraphDateTimeFormat {
  
  """2006-01-02T15:04:05-0700"""
  ISO8601
  
  """Mon Jan _2 15:04:05 2006"""
  ANSIC
  
  """Mon Jan _2 15:04:05 MST 2006"""
  UnixDate
  
  """Mon Jan 02 15:04:05 -0700 2006"""
  RubyDate
  
  """02 Jan 06 15:04 MST"""
  RFC822
  
  """02 Jan 06 15:04 -0700"""
  RFC822Z
  
  """Monday, 02-Jan-06 15:04:05 MST"""
  RFC850
  
  """Mon, 02 Jan 2006 15:04:05 MST"""
  RFC1123
  
  """Mon, 02 Jan 2006 15:04:05 -0700"""
  RFC1123Z
  
  """2006-01-02T15:04:05Z07:00"""
  RFC3339
  
  """2006-01-02T15:04:05.999999999Z07:00"""
  RFC3339Nano
  
  """3:04PM"""
  Kitchen
  
  """Jan _2 15:04:05"""
  Stamp
  
  """Jan _2 15:04:05.000"""
  StampMilli
  
  """Jan _2 15:04:05.000000"""
  StampMicro
  
  """Jan _2 15:04:05.000000000"""
  StampNano
}

"""
The directive @injectGeneratedUUID injects a generated UUID into the variable.
This variable MUST be a string.
At the same time, it removes the variable from the input definition,
disallowing the user to supply it.

This means, the UUID is 100% generated server-side and can be considered untempered.
"""
directive @injectGeneratedUUID on VARIABLE_DEFINITION

"""The directive @injectFromHeader injects a http.header into the variable."""
directive @injectFromHeader(name: String!) on VARIABLE_DEFINITION

"""
The @internalOperation Directive marks an Operation as internal.
By doing so, the Operation is no longer accessible from the public API.
It can only be accessed by internal services, like hooks.
"""
directive @internalOperation on QUERY | MUTATION | SUBSCRIPTION

"""The directive @injectEnvironmentVariable allows you to inject an environment variable into the variable definition."""
directive @injectEnvironmentVariable(name: String!) on VARIABLE_DEFINITION

"""
The @export directive instructs the Execution Planner to export the field during the execution into the variable of the 'as' argument.
As the execution is depth first, a field can only be used after it has been exported.
Additionally, a field can only be used after using the '_join' field or on a different data source.
It's not possible to export a field and use it in for the same data source.

Note that the @export directive only works on fields that return a single value.
It's not possible to export a list or object field.
"""
directive @export(
  
  """The argument 'as' is the name of the variable to export the field to."""
  as: String!
) on FIELD

"""
The directive @internal marks a variable definition as internal so that clients can't access it.
The field is also not visible in the public API.
It's only being used as an internal variable to export fields into.
"""
directive @internal on VARIABLE_DEFINITION

"""
The @transform directive allows to apply transformations to the response.
By applying the directive, the shape of the response can be altered,
which will also modify the JSON-Schema of the response.
That is, you will keep full type safety and code-generation for transformed fields.
"""
directive @transform(
  
  """
  Using the 'get' transformation allows you to extract a nested field using a JSON path.
  This is useful to unnest data, e.g. when using the '_join' field, which adds an extra layer of nesting.
  
  Example:
  
  query GetName {
  name: me @transform(get: "info.name") {
      info {
          name
      }
  }
  }
  
  Before the transformation, the resolve looks like this:
  
  {
  "name": {
      "info": {
          "name": "John Doe"
      }
  }
  }
  
  With the transformation applied, the response will be reshaped like this:
  
  {
  "name": "John Doe"
  }
  """
  get: String
) on FIELD
