{
  "graphql_operation_files": [
    {
      "operation_name": "Casdoor__GetRolesById",
      "api_mount_path": "Casdoor/GetRolesById",
      "file_path": "store/operation/Casdoor/GetRolesById.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Casdoor__GetRolesById ($userId: String!, $id: Int, $roleId: Int) {\n\tdata: main_findFirstadmin_user(where: {user_id:{equals:$userId}}) @transform(get: \"_join.main_findManyadmin_role_user\") {\n\t\tid @export(as: \"id\")\n\t\t_join {\n\t\t\tmain_findManyadmin_role_user(where: {user_id:{equals:$id}}) @transform(get: \"[]._join\") {\n\t\t\t\trole_id @export(as: \"roleId\")\n\t\t\t\t_join @transform(get: \"main_findFirstadmin_role.code\") {\n\t\t\t\t\tmain_findFirstadmin_role(where: {id:{equals:$roleId}}) {\n\t\t\t\t\t\tcode\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery($userId: String!, $id: Int @internal, $roleId: Int @internal) {\n  data: main_findFirstadmin_user(where: {user_id: {equals: $userId}}) @transform(get: \"_join.main_findManyadmin_role_user\") {\n    id @export(as: \"id\")\n    _join {\n      main_findManyadmin_role_user(where: {user_id: {equals: $id}}) @transform(get: \"[]._join\") {\n        role_id @export(as: \"roleId\")\n        _join @transform(get: \"main_findFirstadmin_role.code\") {\n          main_findFirstadmin_role(where: {id: {equals: $roleId}}) {\n            code\n          }\n        }\n      }\n    }\n  }\n} ",
      "index": 0,
      "internal": false
    },
    {
      "operation_name": "Casdoor__GetSMSProvider",
      "api_mount_path": "Casdoor/GetSMSProvider",
      "file_path": "store/operation/Casdoor/GetSMSProvider.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Casdoor__GetSMSProvider @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManyadmin_provider {\n\t\tclient_id\n\t\tclient_secret\n\t\tcreated_time\n\t\tname\n\t\towner\n\t\tsign_name\n\t\ttemplate_code\n\t\ttype\n\t}\n}\n",
      "origin_content": "query MyQuery @rbac(requireMatchAny: [admin]) {\n  data:main_findManyadmin_provider {\n    client_id\n    client_secret\n    created_time\n    name\n    owner\n    sign_name\n    template_code\n    type\n  }\n}",
      "index": 1,
      "internal": false
    },
    {
      "operation_name": "Casdoor__Login",
      "api_mount_path": "Casdoor/Login",
      "file_path": "store/operation/Casdoor/Login.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Casdoor__Login ($code: String = \"\", $password: String = \"\", $countryCode: String = \"CN\", $loginType: String = \"\", $phone: String = \"\", $username: String = \"\") @internalOperation {\n\tdata: casdoor_login_post(login_post_input_object: {code:$code,password:$password,loginType:$loginType,username:$username,phone:$phone,countryCode:$countryCode}) {\n\t\tmsg\n\t\tsuccess\n\t\tdata {\n\t\t\taccessToken\n\t\t\texpireIn\n\t\t\trefreshToken\n\t\t}\n\t}\n}\n",
      "origin_content": "mutation Login($code: String = \"\", $password: String = \"\", $countryCode: String = \"CN\", $loginType: String = \"\", $phone: String = \"\", $username: String = \"\") @internalOperation{\n  data: casdoor_login_post(\n    login_post_input_object: {code: $code, password: $password, loginType: $loginType, username: $username, phone: $phone, countryCode: $countryCode}\n  ) {\n    msg\n    success\n    data {\n      accessToken\n      expireIn\n      refreshToken\n    }\n  }\n}",
      "index": 2,
      "internal": true
    },
    {
      "operation_name": "Casdoor__RefreshToken",
      "api_mount_path": "Casdoor/RefreshToken",
      "file_path": "store/operation/Casdoor/RefreshToken.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Casdoor__RefreshToken ($refreshToken: String!) {\n\tdata: casdoor_refreshToken_post(refreshToken_post_input_object: {refresh_token:$refreshToken}) {\n\t\tmsg\n\t\tsuccess\n\t\tdata {\n\t\t\trefreshToken\n\t\t\taccessToken\n\t\t\texpireIn\n\t\t}\n\t}\n}\n",
      "origin_content": "mutation MyQuery($refreshToken: String!) {\n  data: casdoor_refreshToken_post(\n    refreshToken_post_input_object: {refresh_token: $refreshToken}\n  ) {\n    msg\n    success\n    data {\n      refreshToken\n      accessToken\n      expireIn\n    }\n  }\n}",
      "index": 3,
      "internal": false
    },
    {
      "operation_name": "Casdoor__SendCode",
      "api_mount_path": "Casdoor/SendCode",
      "file_path": "store/operation/Casdoor/SendCode.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Casdoor__SendCode ($dest: String!, $countryCode: String = \"CN\") {\n\tdata: casdoor_sendCode_post(sendCode_post_input_object: {dest:$dest,countryCode:$countryCode}) {\n\t\tmsg\n\t}\n}\n",
      "origin_content": "mutation MyQuery($dest: String!, $countryCode: String = \"CN\") {\n  data: casdoor_sendCode_post(\n    sendCode_post_input_object: {dest: $dest, countryCode: $countryCode}\n  ) {\n    msg\n  }\n}",
      "index": 4,
      "internal": false
    },
    {
      "operation_name": "Casdoor__UpdateSMSProvider",
      "api_mount_path": "Casdoor/UpdateSMSProvider",
      "file_path": "store/operation/Casdoor/UpdateSMSProvider.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin",
            "user"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Casdoor__UpdateSMSProvider ($clientId: String!, $clientSecret: String!, $signName: String!, $templateCode: String!) @rbac(requireMatchAny: [admin,user]) {\n\tdata: casdoor_updateProvider_post(updateProvider_post_input_object: {clientId:$clientId,clientSecret:$clientSecret,signName:$signName,templateCode:$templateCode}) {\n\t\tmsg\n\t\tstatus\n\t}\n}\n",
      "origin_content": "mutation MyQuery($clientId: String!, $clientSecret: String!, $signName: String!, $templateCode: String!) @rbac(requireMatchAny: [admin, user]) {\n  data: casdoor_updateProvider_post(\n    updateProvider_post_input_object: {clientId: $clientId, clientSecret: $clientSecret, signName: $signName, templateCode: $templateCode}\n  ) {\n    msg\n    status\n  }\n}",
      "index": 5,
      "internal": false
    },
    {
      "operation_name": "Post__CreateCategory",
      "api_mount_path": "Post/CreateCategory",
      "file_path": "store/operation/Post/CreateCategory.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Post__CreateCategory ($name: String = \"\") {\n\tdata: main_createOnecase_category(data: {name:$name}) {\n\t\tid\n\t\tname\n\t}\n}\n",
      "origin_content": "mutation MyQuery($name: String = \"\",) {\n  data:main_createOnecase_category(data: {name: $name}) {\n    id\n    name\n  }\n}",
      "index": 6,
      "internal": false
    },
    {
      "operation_name": "Post__CreateOne",
      "api_mount_path": "Post/CreateOne",
      "file_path": "store/operation/Post/CreateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Post__CreateOne ($title: String!, $poster: String, $content: String, $publishedAt: DateTime, $username: String!, $userId: Int!, $cateId: Int!) @rbac(requireMatchAny: [user,admin]) {\n\tdata: main_createOnecase_post(data: {title:$title,poster:$poster,published_at:$publishedAt,author:$username,content:$content,admin_user:{connect:{id:$userId}},case_category:{connect:{id:$cateId}}}) {\n\t\tid\n\t\ttitle\n\t\tposter\n\t\tpublished_at\n\t\tauthor\n\t\tcase_category {\n\t\t\tid\n\t\t}\n\t}\n}\n",
      "origin_content": "mutation CreateOnePost($title: String!, $poster: String, $content: String, $publishedAt: DateTime, $username: String!, $userId: Int !, $cateId: Int !) @rbac(requireMatchAny: [user, admin]) {\n  data: main_createOnecase_post(\n    data: {title: $title, poster: $poster, published_at: $publishedAt, author: $username, content: $content, admin_user: {connect: {id: $userId}}, case_category: {connect: {id: $cateId}}}\n  ) {\n    id\n    title\n    poster\n    published_at\n    author\n    case_category {\n      id\n    }\n  }\n}",
      "index": 7,
      "internal": false
    },
    {
      "operation_name": "Post__DeleteCategory",
      "api_mount_path": "Post/DeleteCategory",
      "file_path": "store/operation/Post/DeleteCategory.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Post__DeleteCategory ($id: Int = 10) {\n\tdata: main_deleteOnecase_category(where: {id:$id}) {\n\t\tid\n\t\tname\n\t}\n}\n",
      "origin_content": "mutation MyQuery($id: Int = 10) {\n  data:main_deleteOnecase_category(where: {id: $id}) {\n    id\n    name\n  }\n}",
      "index": 8,
      "internal": false
    },
    {
      "operation_name": "Post__DeleteMany",
      "api_mount_path": "Post/DeleteMany",
      "file_path": "store/operation/Post/DeleteMany.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "eeee",
            "admin",
            "abc",
            "abc32"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Post__DeleteMany ($ids: [Int]!) @rbac(requireMatchAny: [user,eeee,admin,abc,abc32]) {\n\tdata: main_deleteManycase_post(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation DeleteManyPost ($ids: [Int]!) @rbac(requireMatchAny: [user,eeee,admin,abc,abc32]) {\n\tdata: main_deleteManycase_post(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}",
      "index": 9,
      "internal": false
    },
    {
      "operation_name": "Post__DeleteOne",
      "api_mount_path": "Post/DeleteOne",
      "file_path": "store/operation/Post/DeleteOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Post__DeleteOne ($id: Int!) @rbac(requireMatchAny: [user,admin]) {\n\tdata: main_deleteOnecase_post(where: {id:$id}) {\n\t\tid\n\t}\n}\n",
      "origin_content": "mutation DeleteOnePost ($id: Int!) @rbac(requireMatchAny: [user,admin]) {\n\tdata: main_deleteOnecase_post(where: {id:$id}) {\n\t\tid\n\t}\n}",
      "index": 10,
      "internal": false
    },
    {
      "operation_name": "Post__GetCategory",
      "api_mount_path": "Post/GetCategory",
      "file_path": "store/operation/Post/GetCategory.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Post__GetCategory ($take: Int = 10, $skip: Int = 0) {\n\tdata: main_findManycase_category(skip: $skip, take: $take) {\n\t\tid\n\t\tname\n\t\tcase_post {\n\t\t\tauthor\n\t\t\tcontent\n\t\t\tid\n\t\t\tpublished_at\n\t\t\tposter\n\t\t\ttitle\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery($take: Int = 10, $skip: Int = 0) {\n  data:main_findManycase_category(skip: $skip, take: $take) {\n    id\n    name\n    case_post {\n      author\n      content\n      id\n      published_at\n      poster\n      title\n    }\n  }\n}",
      "index": 11,
      "internal": false
    },
    {
      "operation_name": "Post__GetLikeList",
      "api_mount_path": "Post/GetLikeList",
      "file_path": "store/operation/Post/GetLikeList.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Post__GetLikeList ($author: String = \"\", $content: String = \"\", $title: String = \"\", $id: Int) {\n\tdata: main_findManycase_post(where: {author:{contains:$author,endsWith:\"\"},content:{contains:$content,endsWith:\"\"},title:{contains:$title,endsWith:\"\"}}) {\n\t\tauthor\n\t\tcontent\n\t\tid\n\t\tpublished_at\n\t\ttitle\n\t\tposter\n\t\tcase_category {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n\tdata1: main_findUniquecase_post(where: {id:$id}) {\n\t\tauthor\n\t\tcontent\n\t\tid\n\t\tpublished_at\n\t\ttitle\n\t\tposter\n\t\tcase_category {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery($author: String = \"\", $content: String = \"\", $title: String = \"\", $id: Int ) {\n  data:main_findManycase_post(\n    where: {author: {contains: $author, endsWith: \"\"}, content: {contains: $content, endsWith: \"\"}, title: {contains: $title, endsWith: \"\"}}\n  ) {\n    author\n    content\n    id\n    published_at\n    title\n    poster\n    case_category {\n      name\n      id\n    }\n  }\n  data1:main_findUniquecase_post(where: {id: $id}) {\n    author\n    content\n    id\n    published_at\n    title\n    poster\n    case_category {\n      id\n      name\n    }\n  }\n}",
      "index": 12,
      "internal": false
    },
    {
      "operation_name": "Post__GetList",
      "api_mount_path": "Post/GetList",
      "file_path": "store/operation/Post/GetList.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "eeee",
            "admin",
            "abc",
            "abc32"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": [
        "#/definitions/main_case_postWhereInput"
      ],
      "interpolation_variables_refs": [
        "#/definitions/main_case_postWhereInput"
      ],
      "content": "query Post__GetList ($take: Int = 10, $skip: Int = 0, $query: main_case_postWhereInput) @rbac(requireMatchAny: [eeee,admin,abc,abc32]) {\n\tdata: main_findManycase_post(skip: $skip, take: $take, where: {AND:$query}, orderBy: {title:asc}) {\n\t\tid\n\t\ttitle\n\t\tposter\n\t\tpublished_at\n\t\tauthor\n\t\tcontent\n\t\tcase_category {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n\ttotal: main_aggregatecase_post(where: {AND:$query}) @transform(get: \"_count.id\") {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
      "origin_content": "query GetPostList($take: Int = 10, $skip: Int = 0, $query: main_case_postWhereInput) @rbac(requireMatchAny: [eeee, admin, abc, abc32]) {\n  data: main_findManycase_post(\n    skip: $skip\n    take: $take\n    where: {AND: $query}\n    orderBy: {title: asc}\n  ) {\n    id\n    title\n    poster\n    published_at\n    author\n    content\n    case_category {\n      id\n      name\n    }\n  }\n  total: main_aggregatecase_post(where: {AND: $query}) @transform(get: \"_count.id\") {\n    _count {\n      id\n    }\n  }\n}",
      "index": 13,
      "internal": false
    },
    {
      "operation_name": "Post__GetOne",
      "api_mount_path": "Post/GetOne",
      "file_path": "store/operation/Post/GetOne.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "eeee",
            "admin",
            "abc",
            "abc32"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Post__GetOne ($id: Int!) @rbac(requireMatchAny: [user,eeee,admin,abc,abc32]) {\n\tdata: main_findFirstcase_post(where: {id:{equals:$id}}) {\n\t\tid\n\t\ttitle\n\t\tposter\n\t\tpublished_at\n\t\tauthor\n\t\tcontent\n\t\tcase_category {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\tadmin_user {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n}\n",
      "origin_content": "query GetOnePost($id: Int!) @rbac(requireMatchAny: [user, eeee, admin, abc, abc32]) {\n  data: main_findFirstcase_post(where: {id: {equals: $id}}) {\n    id\n    title\n    poster\n    published_at\n    author\n    content\n    case_category {\n      id\n      name\n    }\n    admin_user {\n      id\n      name\n    }\n  }\n}",
      "index": 14,
      "internal": false
    },
    {
      "operation_name": "Post__GetPostByAuthor",
      "api_mount_path": "Post/GetPostByAuthor",
      "file_path": "store/operation/Post/GetPostByAuthor.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Post__GetPostByAuthor ($id: Int = 10, $name: String = \"\") {\n\tdata: main_updateOnecase_category(data: {name:{set:$name}}, where: {id:$id}) {\n\t\tid\n\t\tname\n\t}\n}\n",
      "origin_content": "mutation MyQuery($id: Int = 10, $name: String = \"\") {\n data:main_updateOnecase_category(data: {name: {set: $name}}, where: {id: $id}) {\n    id\n    name\n  }\n}",
      "index": 15,
      "internal": false
    },
    {
      "operation_name": "Post__GetPostByCate",
      "api_mount_path": "Post/GetPostByCate",
      "file_path": "store/operation/Post/GetPostByCate.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Post__GetPostByCate ($equals: Int!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_category(where: {case_post:{every:{cate:{equals:$equals}}}}) {\n\t\tcase_post {\n\t\t\tauthor\n\t\t\tcate\n\t\t\tcontent\n\t\t\tposter\n\t\t\tid\n\t\t\ttitle\n\t\t\tpublished_at\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery( $equals: Int!) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_category(\n    where: { case_post: {every: {cate: {equals: $equals}}}}\n  )  {\n    case_post {\n      author\n      cate\n      content\n      poster\n      id\n      title\n      published_at\n    }\n  }\n}",
      "index": 16,
      "internal": false
    },
    {
      "operation_name": "Post__UpdateCategory",
      "api_mount_path": "Post/UpdateCategory",
      "file_path": "store/operation/Post/UpdateCategory.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Post__UpdateCategory ($id: Int = 10) {\n\tdata: main_findManyadmin_user(where: {id:{equals:$id}}) {\n\t\tcase_post {\n\t\t\tcate\n\t\t\tcontent\n\t\t\tid\n\t\t\tposter\n\t\t\tpublished_at\n\t\t\ttitle\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery($id: Int = 10) {\n  data:main_findManyadmin_user(where: {id: {equals: $id}}) {\n    case_post {\n      cate\n      content\n      id\n      poster\n      published_at\n      title\n    }\n  }\n} ",
      "index": 17,
      "internal": false
    },
    {
      "operation_name": "Post__UpdateOne",
      "api_mount_path": "Post/UpdateOne",
      "file_path": "store/operation/Post/UpdateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Post__UpdateOne ($id: Int = 10, $author: String = \"\", $content: String = \"\", $poster: String = \"\", $published_at: DateTime, $title: String = \"\", $userId: Int = 10, $cate: Int = 10) {\n\tmain_updateOnecase_post(data: {author:{set:$author},content:{set:$content},poster:{set:$poster},published_at:{set:$published_at},title:{set:$title},admin_user:{connect:{id:$userId}},case_category:{connect:{id:$cate}}}, where: {id:$id}) {\n\t\tauth\n\t\tauthor\n\t\tcate\n\t\tcontent\n\t\tid\n\t\tposter\n\t\ttitle\n\t}\n}\n",
      "origin_content": "mutation MyQuery($id: Int = 10, $author: String = \"\", $content: String = \"\", $poster: String = \"\", $published_at: DateTime @injectCurrentDateTime(format: ISO8601), $title: String = \"\", $userId: Int = 10, $cate: Int = 10) {\n  main_updateOnecase_post(\n    data: {author: {set: $author}, content: {set: $content}, poster: {set: $poster}, published_at: {set: $published_at}, title: {set: $title}, admin_user: {connect: {id: $userId}}, case_category: {connect: {id: $cate}}}\n    where: {id: $id}\n  ) {\n    auth\n    author\n    cate\n    content\n    id\n    poster\n    title\n  }\n}",
      "index": 18,
      "internal": false
    },
    {
      "operation_name": "Statistics__MonthlySales",
      "api_mount_path": "Statistics/MonthlySales",
      "file_path": "store/operation/Statistics/MonthlySales.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Statistics__MonthlySales {\n\tdata: statistics_GetMonthlySales {\n\t\tmonths\n\t\ttotalSales\n\t}\n}\n",
      "origin_content": "query MyQuery {\n\tdata: statistics_GetMonthlySales {\n\t\tmonths\n\t\ttotalSales\n\t}\n}\n ",
      "index": 19,
      "internal": false
    },
    {
      "operation_name": "Statistics__QueryRaw",
      "api_mount_path": "Statistics/QueryRaw",
      "file_path": "store/operation/Statistics/QueryRaw.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation Statistics__QueryRaw ($query: String!) {\n\tmain_queryRaw(query: $query)\n}\n",
      "origin_content": "mutation QueryRaw ($query: String!) {\n\tmain_queryRaw(query: $query)\n}",
      "index": 20,
      "internal": false
    },
    {
      "operation_name": "Statistics__SaleTypePercent",
      "api_mount_path": "Statistics/SaleTypePercent",
      "file_path": "store/operation/Statistics/SaleTypePercent.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Statistics__SaleTypePercent {\n\tdata: statistics_GetSaleTypePercent {\n\t\ttotalSales\n\t\ttypeId\n\t\ttypeName\n\t}\n}\n",
      "origin_content": "query MyQuery {\n  data: statistics_GetSaleTypePercent {\n    totalSales\n    typeId\n    typeName\n  }\n}",
      "index": 21,
      "internal": false
    },
    {
      "operation_name": "Statistics__SalesTop10",
      "api_mount_path": "Statistics/SalesTop10",
      "file_path": "store/operation/Statistics/SalesTop10.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Statistics__SalesTop10 {\n\tdata: statistics_GetSalesTop10 {\n\t\tshopName\n\t\ttotalSales\n\t}\n}\n",
      "origin_content": "query MyQuery {\n  data: statistics_GetSalesTop10 {\n    shopName\n    totalSales\n  }\n} ",
      "index": 22,
      "internal": false
    },
    {
      "operation_name": "Statistics__VisitTrending",
      "api_mount_path": "Statistics/VisitTrending",
      "file_path": "store/operation/Statistics/VisitTrending.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query Statistics__VisitTrending {\n\tdata: statistics_GetVisitTrending {\n\t\tcount\n\t\tdays\n\t}\n}\n",
      "origin_content": "query MyQuery {\n  data: statistics_GetVisitTrending {\n    count\n    days\n  }\n}",
      "index": 23,
      "internal": false
    },
    {
      "operation_name": "System__GetMenus",
      "api_mount_path": "System/GetMenus",
      "file_path": "store/operation/System/GetMenus.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__GetMenus ($pid: Int) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_menu(where: {level:{equals:1}}, orderBy: {sort:asc}) {\n\t\tid @export(as: \"pid\")\n\t\tpath\n\t\tlabel\n\t\tname\n\t\tsort\n\t\tchildren: _join @transform(get: \"main_findManycase_menu\") {\n\t\t\tmain_findManycase_menu(where: {parentId:{equals:$pid}}, orderBy: {sort:asc}) {\n\t\t\t\tid\n\t\t\t\tpath\n\t\t\t\tname\n\t\t\t\tlabel\n\t\t\t\tsort\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery ($pid: Int@internal) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_menu(where: {level:{equals:1}}, orderBy: {sort:asc}) {\n\t\tid @export(as: \"pid\")\n\t\tpath\n\t\tlabel\n\t\tname\n\t\tsort\n\t\tchildren: _join @transform(get: \"main_findManycase_menu\") {\n\t\t\tmain_findManycase_menu(where: {parentId:{equals:$pid}}, orderBy: {sort:asc}) {\n\t\t\t\tid\n\t\t\t\tpath\n\t\t\t\tname\n\t\t\t\tlabel\n\t\t\t\tsort\n\t\t\t}\n\t\t}\n\t}\n}\n ",
      "index": 24,
      "internal": false
    },
    {
      "operation_name": "System__Jwt__AddOne",
      "api_mount_path": "System/Jwt/AddOne",
      "file_path": "store/operation/System/Jwt/AddOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Jwt__AddOne ($banned: Boolean, $expire_time: DateTime = \"\", $flush_time: DateTime = \"\", $id: Int = 10, $token: String = \"\", $user_id: String) {\n\tmain_createManyadmin_token(data: {expire_time:$expire_time,flush_time:$flush_time,id:$id,token:$token,user_id:$user_id,banned:$banned}) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation MyQuery($banned: Boolean , $expire_time: DateTime = \"\", $flush_time: DateTime = \"\", $id: Int = 10, $token: String = \"\", $user_id: String) {\n  main_createManyadmin_token(\n    data: {expire_time: $expire_time, flush_time: $flush_time, id: $id, token: $token, user_id: $user_id, banned: $banned}\n  ) {\n    count\n  }\n}",
      "index": 25,
      "internal": false
    },
    {
      "operation_name": "System__Jwt__CheckBanned",
      "api_mount_path": "System/Jwt/CheckBanned",
      "file_path": "store/operation/System/Jwt/CheckBanned.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Jwt__CheckBanned ($token: String = \"\") {\n\tdata: main_findManyadmin_token(where: {token:{equals:$token}}) {\n\t\tbanned\n\t\texpire_time\n\t\tflush_time\n\t\tid\n\t\ttoken\n\t\tuser_id\n\t}\n}\n",
      "origin_content": "query MyQuery($token: String=\"\") {\n  data:main_findManyadmin_token(where: {token: {equals: $token}}) {\n    banned\n    expire_time\n    flush_time\n    id\n    token\n    user_id\n  }\n}",
      "index": 26,
      "internal": false
    },
    {
      "operation_name": "System__Jwt__DeleteOne",
      "api_mount_path": "System/Jwt/DeleteOne",
      "file_path": "store/operation/System/Jwt/DeleteOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Jwt__DeleteOne ($id: Int = 1) {\n\tdata: main_deleteOneadmin_token(where: {id:$id}) {\n\t\tbanned\n\t\texpire_time\n\t\tflush_time\n\t\tid\n\t\tuser_id\n\t\ttoken\n\t}\n}\n",
      "origin_content": "mutation MyQuery($id: Int = 1) {\n  data: main_deleteOneadmin_token(where: {id: $id}) {\n    banned\n    expire_time\n    flush_time\n    id\n    user_id\n    token\n  }\n}",
      "index": 27,
      "internal": false
    },
    {
      "operation_name": "System__Jwt__GetMany",
      "api_mount_path": "System/Jwt/GetMany",
      "file_path": "store/operation/System/Jwt/GetMany.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Jwt__GetMany ($take: Int = 10, $skip: Int = 0) {\n\tmain_findManyadmin_token(skip: $skip, take: $take) {\n\t\tbanned\n\t\texpire_time\n\t\tflush_time\n\t\tid\n\t\tuser_id\n\t\ttoken\n\t}\n}\n",
      "origin_content": "query MyQuery($take: Int = 10, $skip: Int = 0) {\n  main_findManyadmin_token(skip: $skip, take: $take) {\n    banned\n    expire_time\n    flush_time\n    id\n    user_id\n    token\n  }\n}",
      "index": 28,
      "internal": false
    },
    {
      "operation_name": "System__Jwt__UpdateOne",
      "api_mount_path": "System/Jwt/UpdateOne",
      "file_path": "store/operation/System/Jwt/UpdateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Jwt__UpdateOne ($banned: Boolean, $expire_time: DateTime = \"\", $flush_time: DateTime = \"\", $token: String = \"\", $user_id: String, $equals: String!) {\n\tmain_updateManyadmin_token(data: {banned:{set:$banned},expire_time:{set:$expire_time},flush_time:{set:$flush_time},token:{set:$token},user_id:{set:$user_id}}, where: {user_id:{equals:$equals}}) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation MyQuery($banned: Boolean , $expire_time: DateTime = \"\", $flush_time: DateTime = \"\", $token: String = \"\", $user_id: String, $equals: String !) {\n  main_updateManyadmin_token(\n    data: {banned: {set: $banned}, expire_time: {set: $expire_time}, flush_time: {set: $flush_time},  token: {set: $token}, user_id: {set: $user_id}}\n    where: {user_id: {equals: $equals}}\n  ) {\n    count\n  }\n}",
      "index": 29,
      "internal": false
    },
    {
      "operation_name": "System__Log__ChangeOpen",
      "api_mount_path": "System/Log/ChangeOpen",
      "file_path": "store/operation/System/Log/ChangeOpen.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin",
            "user"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Log__ChangeOpen ($set: Boolean = false) @rbac(requireMatchAny: [admin,user]) {\n\tdata: main_updateOneadmin_dic(where: {id:1}, data: {isOpen:{set:$set}}) {\n\t\tid\n\t\tisOpen\n\t}\n}\n",
      "origin_content": "mutation MyQuery($set: Boolean = false) @rbac(requireMatchAny: [admin, user]) {\n  data:main_updateOneadmin_dic(where: {id: 1}, data: {isOpen: {set: $set}}) {\n    id\n    isOpen\n  }\n}",
      "index": 30,
      "internal": false
    },
    {
      "operation_name": "System__Log__CreateLog",
      "api_mount_path": "System/Log/CreateLog",
      "file_path": "store/operation/System/Log/CreateLog.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Log__CreateLog ($ip: String = \"\", $method: String = \"\", $path: String = \"\", $updatedAt: DateTime = \"\", $code: String = \"\", $ua: String = \"\", $userId: String = \"\", $userName: String = \"\") {\n\tdata: main_createOneadmin_apilog(data: {updatedAt:$updatedAt,ip:$ip,method:$method,path:$path,code:$code,ua:$ua,userId:$userId,userName:$userName}) {\n\t\tip\n\t\tmethod\n\t\tpath\n\t\tid\n\t\tupdatedAt\n\t\tua\n\t\tuserId\n\t\tuserName\n\t}\n}\n",
      "origin_content": "mutation MyQuery($ip: String = \"\", $method: String = \"\", $path: String = \"\", $updatedAt: DateTime = \"\", $code: String = \"\", $ua: String = \"\", $userId: String = \"\", $userName: String = \"\") {\n  data:main_createOneadmin_apilog(\n    data: {updatedAt: $updatedAt, ip: $ip, method: $method, path: $path, code: $code, ua: $ua, userId: $userId, userName: $userName}\n  ) {\n    ip\n    method\n    path\n    id\n    updatedAt\n    ua\n    userId\n    userName\n  }\n} ",
      "index": 31,
      "internal": false
    },
    {
      "operation_name": "System__Log__DeleteLog",
      "api_mount_path": "System/Log/DeleteLog",
      "file_path": "store/operation/System/Log/DeleteLog.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin",
            "user"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Log__DeleteLog ($equals: [Int] = 10) @rbac(requireMatchAny: [admin,user]) {\n\tmain_deleteManyadmin_apilog(where: {id:{in:$equals}}) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation MyQuery($equals: [Int] = 10) @rbac(requireMatchAny: [admin, user]) {\n  main_deleteManyadmin_apilog(where: {id: {in: $equals}}) {\n    count\n  }\n}",
      "index": 32,
      "internal": false
    },
    {
      "operation_name": "System__Log__DeleteOne",
      "api_mount_path": "System/Log/DeleteOne",
      "file_path": "store/operation/System/Log/DeleteOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Log__DeleteOne ($id: Int!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_deleteOneadmin_apilog(where: {id:$id}) {\n\t\tid\n\t}\n}\n",
      "origin_content": "mutation MyQuery($id: Int!) @rbac(requireMatchAny: [admin]) {\n  data:main_deleteOneadmin_apilog(where: {id: $id}) {\n    id\n  }\n}",
      "index": 33,
      "internal": false
    },
    {
      "operation_name": "System__Log__GetAllLog",
      "api_mount_path": "System/Log/GetAllLog",
      "file_path": "store/operation/System/Log/GetAllLog.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Log__GetAllLog {\n\tlogNum: main_aggregateadmin_apilog {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery {\n  logNum: main_aggregateadmin_apilog {\n    _count {\n      id\n    }\n  }\n}",
      "index": 34,
      "internal": false
    },
    {
      "operation_name": "System__Log__GetIsOpen",
      "api_mount_path": "System/Log/GetIsOpen",
      "file_path": "store/operation/System/Log/GetIsOpen.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Log__GetIsOpen {\n\tdata: main_findFirstadmin_dic(where: {id:{equals:1}}) {\n\t\tid\n\t\tisOpen\n\t}\n}\n",
      "origin_content": "query MyQuery {\n  data: main_findFirstadmin_dic(where: {id: {equals: 1}}) {\n    id\n    isOpen\n  }\n}",
      "index": 35,
      "internal": false
    },
    {
      "operation_name": "System__Log__GetLikeLog",
      "api_mount_path": "System/Log/GetLikeLog",
      "file_path": "store/operation/System/Log/GetLikeLog.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Log__GetLikeLog ($ip: String = \"\", $method: String = \"\", $path: String = \"\", $id: Int = 10, $name: String = \"\") {\n\tmain_findManyadmin_apilog(where: {method:{contains:$method},path:{contains:$path},updatedAt:{},ip:{contains:$ip},userName:{contains:$name}}) {\n\t\tid\n\t\tmethod\n\t\tip\n\t\tpath\n\t\tua\n\t\tupdatedAt\n\t\tuserName\n\t}\n\tmain_findUniqueadmin_apilog(where: {id:$id}) {\n\t\tid\n\t\tip\n\t\tmethod\n\t\tpath\n\t\tua\n\t\tupdatedAt\n\t\tuserName\n\t}\n}\n",
      "origin_content": "query MyQuery($ip: String = \"\", $method: String = \"\", $path: String = \"\", $id: Int = 10, $name: String = \"\") {\n  main_findManyadmin_apilog(\n    where: {method: {contains: $method}, path: {contains: $path}, updatedAt: {}, ip: {contains: $ip}, userName: {contains: $name}}\n  ) {\n    id\n    method\n    ip\n    path\n    ua\n    updatedAt\n    userName\n  }\n  main_findUniqueadmin_apilog(where: {id: $id}) {\n    id\n    ip\n    method\n    path\n    ua\n    updatedAt\n    userName\n  }\n}",
      "index": 36,
      "internal": false
    },
    {
      "operation_name": "System__Log__GetLog",
      "api_mount_path": "System/Log/GetLog",
      "file_path": "store/operation/System/Log/GetLog.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": [
        "#/definitions/main_admin_apilogOrderByWithRelationInput"
      ],
      "interpolation_variables_refs": [
        "#/definitions/main_admin_apilogOrderByWithRelationInput"
      ],
      "content": "query System__Log__GetLog ($skip: Int = 5, $take: Int = 10, $orderBy: [main_admin_apilogOrderByWithRelationInput]) {\n\tdata: main_findManyadmin_apilog(skip: $skip, take: $take, orderBy: $orderBy) {\n\t\tid\n\t\tmethod\n\t\tip\n\t\tpath\n\t\tupdatedAt\n\t\tua\n\t\tuserName\n\t\tuserId\n\t}\n}\n",
      "origin_content": "query MyQuery($skip: Int = 5, $take: Int = 10, $orderBy: [main_admin_apilogOrderByWithRelationInput]) {\n  data: main_findManyadmin_apilog(skip: $skip, take: $take, orderBy: $orderBy) {\n    id\n    method\n    ip\n    path\n    updatedAt\n    ua\n    userName\n    userId\n  }\n}",
      "index": 37,
      "internal": false
    },
    {
      "operation_name": "System__Menu__CreateOne",
      "api_mount_path": "System/Menu/CreateOne",
      "file_path": "store/operation/System/Menu/CreateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Menu__CreateOne ($label: String!, $path: String!, $icon: String, $level: Int!, $sort: Int!, $parentId: Int, $menuType: String!, $perms: String = \"\", $apiId: String = \"\", $create_time: DateTime!) @rbac(requireMatchAny: [admin,b1a23,a231,abc1]) {\n\tdata: main_createOnecase_menu(data: {label:$label,path:$path,icon:$icon,level:$level,sort:$sort,parentId:$parentId,menu_type:$menuType,perms:$perms,api_id:$apiId,create_time:$create_time}) {\n\t\tid\n\t}\n}\n",
      "origin_content": "mutation CreateOneMenu($label: String!, $path: String!, $icon: String, $level: Int!, $sort: Int!, $parentId: Int, $menuType: String!, $perms: String = \"\", $apiId: String = \"\", $create_time: DateTime! @injectCurrentDateTime(format: ISO8601)) @rbac(requireMatchAny: [admin, b1a23, a231, abc1]) {\n  data: main_createOnecase_menu(\n    data: {label: $label, path: $path, icon: $icon, level: $level, sort: $sort, parentId: $parentId, menu_type: $menuType, perms: $perms, api_id: $apiId, create_time: $create_time}\n  ) {\n    id\n  }\n}",
      "index": 38,
      "internal": false
    },
    {
      "operation_name": "System__Menu__DeleteMany",
      "api_mount_path": "System/Menu/DeleteMany",
      "file_path": "store/operation/System/Menu/DeleteMany.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Menu__DeleteMany ($ids: [Int]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_deleteManycase_menu(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation DeleteManyMenu ($ids: [Int]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_deleteManycase_menu(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}",
      "index": 39,
      "internal": false
    },
    {
      "operation_name": "System__Menu__DeleteOne",
      "api_mount_path": "System/Menu/DeleteOne",
      "file_path": "store/operation/System/Menu/DeleteOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Menu__DeleteOne ($id: Int!) @rbac(requireMatchAny: [admin]) {\n\tmain_deleteOnecase_menu(where: {id:$id}) {\n\t\tapi_id\n\t\tcreate_time\n\t\ticon\n\t}\n}\n",
      "origin_content": "mutation MyQuery($id: Int!) @rbac(requireMatchAny: [admin]) {\n  main_deleteOnecase_menu(where: {id: $id}) {\n    api_id\n    create_time\n    icon\n  }\n}",
      "index": 40,
      "internal": false
    },
    {
      "operation_name": "System__Menu__GetApiList",
      "api_mount_path": "System/Menu/GetApiList",
      "file_path": "store/operation/System/Menu/GetApiList.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Menu__GetApiList @rbac(requireMatchAny: [admin]) {\n\tdata: system_getAllPublicApis_get {\n\t\tpath: title\n\t}\n}\n",
      "origin_content": "query MyQuery @rbac(requireMatchAny: [admin]) {\n  data: system_getAllPublicApis_get {\n    path: title\n  }\n}",
      "index": 41,
      "internal": false
    },
    {
      "operation_name": "System__Menu__GetApisByMenus",
      "api_mount_path": "System/Menu/GetApisByMenus",
      "file_path": "store/operation/System/Menu/GetApisByMenus.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Menu__GetApisByMenus ($menuIds: [Int]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_menu(where: {id:{in:$menuIds}}) @transform(get: \"[].api_id\") {\n\t\tapi_id\n\t}\n}\n",
      "origin_content": "query MyQuery($menuIds: [Int]!) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu(where: {id: {in: $menuIds}}) @transform(get: \"[].api_id\") {\n    api_id\n  }\n} ",
      "index": 42,
      "internal": false
    },
    {
      "operation_name": "System__Menu__GetChildrenMenus",
      "api_mount_path": "System/Menu/GetChildrenMenus",
      "file_path": "store/operation/System/Menu/GetChildrenMenus.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Menu__GetChildrenMenus ($pid: Int!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_menu(where: {parentId:{equals:$pid}}) {\n\t\tid\n\t\tlabel\n\t\tlevel\n\t\tname\n\t\tpath\n\t\tsort\n\t}\n}\n",
      "origin_content": "query MyQuery($pid: Int!) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu(where: {parentId: {equals: $pid}}) {\n    id\n    label\n    level\n    name\n    path\n    sort\n  }\n}",
      "index": 43,
      "internal": false
    },
    {
      "operation_name": "System__Menu__GetList",
      "api_mount_path": "System/Menu/GetList",
      "file_path": "store/operation/System/Menu/GetList.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": [
        "#/definitions/main_case_menuOrderByWithRelationInput",
        "#/definitions/main_case_menuWhereInput"
      ],
      "interpolation_variables_refs": [
        "#/definitions/main_case_menuOrderByWithRelationInput",
        "#/definitions/main_case_menuWhereInput"
      ],
      "content": "query System__Menu__GetList ($take: Int = 10, $skip: Int = 0, $orderBy: [main_case_menuOrderByWithRelationInput], $query: main_case_menuWhereInput) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_menu(skip: $skip, take: $take, orderBy: $orderBy, where: {AND:$query}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n\ttotal: main_aggregatecase_menu(where: {AND:$query}) @transform(get: \"_count.id\") {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
      "origin_content": "query GetMenuList($take: Int = 10, $skip: Int = 0, $orderBy: [main_case_menuOrderByWithRelationInput], $query: main_case_menuWhereInput) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu(\n    skip: $skip\n    take: $take\n    orderBy: $orderBy\n    where: {AND: $query}\n  ) {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n  }\n  total: main_aggregatecase_menu(where: {AND: $query}) @transform(get: \"_count.id\") {\n    _count {\n      id\n    }\n  }\n} ",
      "index": 44,
      "internal": false
    },
    {
      "operation_name": "System__Menu__GetMany",
      "api_mount_path": "System/Menu/GetMany",
      "file_path": "store/operation/System/Menu/GetMany.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Menu__GetMany @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_menu {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t\tis_bottom\n\t\tmenu_type\n\t\tperms\n\t\tapi_id\n\t\tcreate_time\n\t}\n}\n",
      "origin_content": "query GetManyMenu @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n    is_bottom\n    menu_type\n    perms\n    api_id\n    create_time\n  }\n}",
      "index": 45,
      "internal": false
    },
    {
      "operation_name": "System__Menu__GetMenuByLevelOrPid",
      "api_mount_path": "System/Menu/GetMenuByLevelOrPid",
      "file_path": "store/operation/System/Menu/GetMenuByLevelOrPid.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Menu__GetMenuByLevelOrPid ($level: Int, $pid: Int) {\n\tdata: main_findManycase_menu(where: {OR:[{level:{equals:$level}},{parentId:{equals:$pid}}]}) {\n\t\tid\n\t\tlabel\n\t\tis_bottom\n\t}\n}\n",
      "origin_content": "query MyQuery($level: Int, $pid: Int) {\n  data: main_findManycase_menu(where: {OR: [{level: {equals: $level}}, {parentId: {equals: $pid}}]}) {\n    id\n    label\n    is_bottom\n  }\n}",
      "index": 46,
      "internal": false
    },
    {
      "operation_name": "System__Menu__GetOne",
      "api_mount_path": "System/Menu/GetOne",
      "file_path": "store/operation/System/Menu/GetOne.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Menu__GetOne ($id: Int!) @rbac(requireMatchAny: [admin,b1a23,a231,abc1]) {\n\tdata: main_findFirstcase_menu(where: {id:{equals:$id}}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n}\n",
      "origin_content": "query GetOneMenu ($id: Int!) @rbac(requireMatchAny: [admin,b1a23,a231,abc1]) {\n\tdata: main_findFirstcase_menu(where: {id:{equals:$id}}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n}",
      "index": 47,
      "internal": false
    },
    {
      "operation_name": "System__Menu__UpdateOne",
      "api_mount_path": "System/Menu/UpdateOne",
      "file_path": "store/operation/System/Menu/UpdateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "eeee",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Menu__UpdateOne ($id: Int!, $label: String, $path: String, $icon: String, $sort: Int, $level: Int, $parentId: Int) @rbac(requireMatchAny: [eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_updateOnecase_menu(data: {label:{set:$label},path:{set:$path},icon:{set:$icon},sort:{set:$sort},level:{set:$level},parentId:{set:$parentId}}, where: {id:$id}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n}\n",
      "origin_content": "mutation UpdateOneMenu($id: Int!, $label: String, $path: String, $icon: String, $sort: Int, $level: Int, $parentId: Int ) @rbac(requireMatchAny: [eeee, admin, b1a23, a231, abc1]) {\n  data: main_updateOnecase_menu(\n    data: {label: {set: $label}, path: {set: $path}, icon: {set: $icon}, sort: {set: $sort}, level: {set: $level}, parentId: {set: $parentId}}\n    where: {id: $id}\n  ) {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n  }\n}",
      "index": 48,
      "internal": false
    },
    {
      "operation_name": "System__Operation__GetMany",
      "api_mount_path": "System/Operation/GetMany",
      "file_path": "store/operation/System/Operation/GetMany.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "eeee",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Operation__GetMany ($id: Int!, $label: String, $path: String, $icon: String, $sort: Int, $level: Int, $parentId: Int) @rbac(requireMatchAny: [eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_updateOnecase_menu(data: {label:{set:$label},path:{set:$path},icon:{set:$icon},sort:{set:$sort},level:{set:$level},parentId:{set:$parentId}}, where: {id:$id}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n}\n",
      "origin_content": "mutation UpdateOneMenu($id: Int!, $label: String, $path: String, $icon: String, $sort: Int, $level: Int, $parentId: Int ) @rbac(requireMatchAny: [eeee, admin, b1a23, a231, abc1]) {\n  data: main_updateOnecase_menu(\n    data: {label: {set: $label}, path: {set: $path}, icon: {set: $icon}, sort: {set: $sort}, level: {set: $level}, parentId: {set: $parentId}}\n    where: {id: $id}\n  ) {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n  }\n}",
      "index": 49,
      "internal": false
    },
    {
      "operation_name": "System__Perm__CreateMany",
      "api_mount_path": "System/Perm/CreateMany",
      "file_path": "store/operation/System/Perm/CreateMany.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": [
        "#/definitions/main_admin_permissionCreateManyInput"
      ],
      "interpolation_variables_refs": [
        "#/definitions/main_admin_permissionCreateManyInput"
      ],
      "content": "mutation System__Perm__CreateMany ($data: [main_admin_permissionCreateManyInput]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_createManyadmin_permission(skipDuplicates: true, data: $data) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation MyQuery ($data: [main_admin_permissionCreateManyInput]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_createManyadmin_permission(skipDuplicates: true, data: $data) {\n\t\tcount\n\t}\n}",
      "index": 50,
      "internal": false
    },
    {
      "operation_name": "System__Perm__GetBindPerms",
      "api_mount_path": "System/Perm/GetBindPerms",
      "file_path": "store/operation/System/Perm/GetBindPerms.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Perm__GetBindPerms {\n\tdata: main_findManyadmin_permission {\n\t\tcreatedAt\n\t\tenabled\n\t\tmethod\n\t\tpath\n\t}\n}\n",
      "origin_content": "query MyQuery {\n  data: main_findManyadmin_permission {\n    createdAt\n    enabled\n    method\n    path\n  }\n}",
      "index": 51,
      "internal": false
    },
    {
      "operation_name": "System__Perm__GetRolePerms",
      "api_mount_path": "System/Perm/GetRolePerms",
      "file_path": "store/operation/System/Perm/GetRolePerms.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Perm__GetRolePerms ($code: [String]!, $roleId: Int, $menuId: Int) {\n\tdata: main_findManyadmin_role(where: {code:{in:$code}}) {\n\t\tid @export(as: \"roleId\")\n\t\t_join {\n\t\t\tdata: main_findManyadmin_menu_role(where: {role_id:{equals:$roleId}}) @transform(get: \"[]._join.main_findFirstcase_menu.perms\") {\n\t\t\t\tmenu_id @export(as: \"menuId\")\n\t\t\t\t_join {\n\t\t\t\t\tmain_findFirstcase_menu(where: {id:{equals:$menuId}}) {\n\t\t\t\t\t\tperms\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery($code: [String]!, $roleId: Int @internal, $menuId: Int @internal) {\n  data: main_findManyadmin_role(where: {code: {in: $code}}) {\n    id @export(as: \"roleId\")\n    _join {\n      data: main_findManyadmin_menu_role(where: {role_id: {equals: $roleId}}) @transform(get: \"[]._join.main_findFirstcase_menu.perms\") {\n        menu_id @export(as: \"menuId\")\n        _join {\n          main_findFirstcase_menu(where: {id: {equals: $menuId}}) {\n            perms\n          }\n        }\n      }\n    }\n  }\n} ",
      "index": 52,
      "internal": false
    },
    {
      "operation_name": "System__Role__AddOne",
      "api_mount_path": "System/Role/AddOne",
      "file_path": "store/operation/System/Role/AddOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "eeee",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Role__AddOne ($code: String!, $remark: String!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_createOneadmin_role(data: {code:$code,remark:$remark}) {\n\t\tid\n\t\tcode\n\t\tremark\n\t}\n}\n",
      "origin_content": "mutation MyQuery($code: String!, $remark: String!) @rbac(requireMatchAny: [user, eeee, admin, b1a23, a231, abc1]) {\n  data: main_createOneadmin_role(data: {code: $code, remark: $remark}) {\n    id\n    code\n    remark\n  }\n}",
      "index": 53,
      "internal": false
    },
    {
      "operation_name": "System__Role__BindMenus",
      "api_mount_path": "System/Role/BindMenus",
      "file_path": "store/operation/System/Role/BindMenus.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": [
        "#/definitions/main_admin_menu_roleCreateManyInput"
      ],
      "interpolation_variables_refs": [
        "#/definitions/main_admin_menu_roleCreateManyInput"
      ],
      "content": "mutation System__Role__BindMenus ($data: [main_admin_menu_roleCreateManyInput]!) {\n\tdata: main_createManyadmin_menu_role(data: $data) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation MyQuery($data: [main_admin_menu_roleCreateManyInput]!) {\n  data: main_createManyadmin_menu_role(data: $data) {\n    count\n  }\n}",
      "index": 54,
      "internal": false
    },
    {
      "operation_name": "System__Role__BindRoleApis",
      "api_mount_path": "System/Role/BindRoleApis",
      "file_path": "store/operation/System/Role/BindRoleApis.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Role__BindRoleApis ($roleCodes: [String]!, $operationPaths: [String]!) {\n\tsystem_bindRoleApis_post(bindRoleApis_post_input_object: {roleCodes:$roleCodes,operationPaths:$operationPaths})\n}\n",
      "origin_content": "mutation MyQuery($roleCodes: [String]!, $operationPaths: [String]!) {\n  system_bindRoleApis_post(\n    bindRoleApis_post_input_object: {roleCodes: $roleCodes, operationPaths: $operationPaths}\n  )\n}",
      "index": 55,
      "internal": false
    },
    {
      "operation_name": "System__Role__DeleteMany",
      "api_mount_path": "System/Role/DeleteMany",
      "file_path": "store/operation/System/Role/DeleteMany.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Role__DeleteMany ($ids: [Int]) {\n\tdata: main_deleteManyadmin_role(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n\tdata1: main_deleteManyadmin_role_user(where: {role_id:{in:$ids}}) {\n\t\tcount\n\t}\n\tdata2: main_deleteManyadmin_menu_role(where: {role_id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation MyQuery($ids: [Int]) {\n  data: main_deleteManyadmin_role(where: {id: {in: $ids}}) {\n    count\n  }\n  data1: main_deleteManyadmin_role_user(where: {role_id: {in: $ids}}) {\n    count\n  }\n  data2: main_deleteManyadmin_menu_role(where: {role_id: {in: $ids}}) {\n    count\n  }\n}",
      "index": 56,
      "internal": false
    },
    {
      "operation_name": "System__Role__DeleteOne",
      "api_mount_path": "System/Role/DeleteOne",
      "file_path": "store/operation/System/Role/DeleteOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "eeee",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Role__DeleteOne ($code: String!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_deleteOneadmin_role(where: {code:$code}) {\n\t\tid\n\t}\n}\n",
      "origin_content": "mutation MyQuery($code: String!) @rbac(requireMatchAny: [user, eeee, admin, b1a23, a231, abc1]) {\n  data: main_deleteOneadmin_role(where: {code: $code}) {\n    id \n  }\n  \n}",
      "index": 57,
      "internal": false
    },
    {
      "operation_name": "System__Role__GetList",
      "api_mount_path": "System/Role/GetList",
      "file_path": "store/operation/System/Role/GetList.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": [
        "#/definitions/main_admin_roleOrderByWithRelationInput",
        "#/definitions/main_admin_roleWhereInput"
      ],
      "interpolation_variables_refs": [
        "#/definitions/main_admin_roleOrderByWithRelationInput",
        "#/definitions/main_admin_roleWhereInput"
      ],
      "content": "query System__Role__GetList ($take: Int = 10, $skip: Int = 0, $orderBy: [main_admin_roleOrderByWithRelationInput], $query: main_admin_roleWhereInput) @rbac(requireMatchAny: [user,admin,b1a23,a231,abc1]) {\n\tdata: main_findManyadmin_role(skip: $skip, take: $take, orderBy: $orderBy, where: {AND:$query}) {\n\t\tid\n\t\tcode\n\t\tremark\n\t}\n\ttotal: main_aggregateadmin_role(where: {AND:$query}) @transform(get: \"_count.id\") {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
      "origin_content": "query GetRoleList ($take: Int = 10, $skip: Int = 0, $orderBy: [main_admin_roleOrderByWithRelationInput], $query: main_admin_roleWhereInput) @rbac(requireMatchAny: [user,admin,b1a23,a231,abc1]) {\n\tdata: main_findManyadmin_role(skip: $skip, take: $take, orderBy: $orderBy, where: {AND:$query}) {\n\t\tid\n\t\tcode\n\t\tremark\n\t}\n\ttotal: main_aggregateadmin_role(where: {AND:$query}) @transform(get: \"_count.id\") {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}",
      "index": 58,
      "internal": false
    },
    {
      "operation_name": "System__Role__GetMany",
      "api_mount_path": "System/Role/GetMany",
      "file_path": "store/operation/System/Role/GetMany.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Role__GetMany {\n\tdata: main_findManyadmin_role {\n\t\tcode\n\t\tremark\n\t\tid\n\t}\n}\n",
      "origin_content": "query MyQuery {\n  data: main_findManyadmin_role {\n    code\n    remark\n    id\n  }\n}",
      "index": 59,
      "internal": false
    },
    {
      "operation_name": "System__Role__GetOne",
      "api_mount_path": "System/Role/GetOne",
      "file_path": "store/operation/System/Role/GetOne.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "eeee",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Role__GetOne ($id: Int!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_findFirstadmin_role(where: {id:{equals:$id}}) {\n\t\tcode\n\t}\n}\n",
      "origin_content": "query MyQuery ($id: Int!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_findFirstadmin_role(where: {id:{equals:$id}}) {\n\t\tcode\n\t}\n}",
      "index": 60,
      "internal": false
    },
    {
      "operation_name": "System__Role__GetRoleById",
      "api_mount_path": "System/Role/GetRoleById",
      "file_path": "store/operation/System/Role/GetRoleById.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Role__GetRoleById ($id: Int!) {\n\tdata: main_findUniqueadmin_role(where: {id:$id}) {\n\t\tcode\n\t}\n}\n",
      "origin_content": "query MyQuery( $id: Int!) {\n  data:main_findUniqueadmin_role(where: {id: $id}) {\n    code\n  }\n}",
      "index": 61,
      "internal": false
    },
    {
      "operation_name": "System__Role__GetRoleMenuId",
      "api_mount_path": "System/Role/GetRoleMenuId",
      "file_path": "store/operation/System/Role/GetRoleMenuId.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Role__GetRoleMenuId ($roleId: Int!) {\n\tdata: main_findManyadmin_menu_role(where: {role_id:{equals:$roleId}}) @transform(get: \"[].menu_id\") {\n\t\tmenu_id\n\t}\n}\n",
      "origin_content": "query MyQuery($roleId: Int!) {\n  data: main_findManyadmin_menu_role(where: {role_id: {equals: $roleId}}) @transform(get: \"[].menu_id\") {\n    menu_id\n  }\n}",
      "index": 62,
      "internal": false
    },
    {
      "operation_name": "System__Role__SyncDeleteRole",
      "api_mount_path": "System/Role/SyncDeleteRole",
      "file_path": "store/operation/System/Role/SyncDeleteRole.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Role__SyncDeleteRole ($dataNames: [String]!) {\n\tsystem_batchDeleteRoles_delete(dataNames: $dataNames)\n}\n",
      "origin_content": "mutation MyQuery($dataNames: [String]!) {\n  system_batchDeleteRoles_delete(dataNames: $dataNames)\n}",
      "index": 63,
      "internal": false
    },
    {
      "operation_name": "System__Role__SyncRole",
      "api_mount_path": "System/Role/SyncRole",
      "file_path": "store/operation/System/Role/SyncRole.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": [
        "#/definitions/system_Role_input_object"
      ],
      "interpolation_variables_refs": [
        "#/definitions/system_Role_input_object"
      ],
      "content": "mutation System__Role__SyncRole ($data: [system_Role_input_object]!) {\n\tdata: system_batchInsertRoles_post(Role_input_object: $data) {\n\t\tdataName\n\t\tsucceed\n\t}\n}\n",
      "origin_content": "mutation MyQuery($data: [system_Role_input_object]!) {\n  data: system_batchInsertRoles_post(Role_input_object: $data) {\n    dataName\n    succeed\n  }\n}",
      "index": 64,
      "internal": false
    },
    {
      "operation_name": "System__Role__UnBindMenus",
      "api_mount_path": "System/Role/UnBindMenus",
      "file_path": "store/operation/System/Role/UnBindMenus.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Role__UnBindMenus ($roleId: Int!, $menuIds: [Int]!) {\n\tmain_deleteManyadmin_menu_role(where: {role_id:{equals:$roleId},menu_id:{in:$menuIds}}) {\n\t\tcount\n\t}\n}\n",
      "origin_content": "mutation MyQuery($roleId: Int!, $menuIds: [Int]!) {\n  main_deleteManyadmin_menu_role(\n    where: {role_id: {equals: $roleId}, menu_id: {in: $menuIds}}\n  ) {\n    count\n  }\n}",
      "index": 65,
      "internal": false
    },
    {
      "operation_name": "System__Role__UpdateOne",
      "api_mount_path": "System/Role/UpdateOne",
      "file_path": "store/operation/System/Role/UpdateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "eeee",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Role__UpdateOne ($remark: String, $id: Int!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_updateOneadmin_role(data: {remark:{set:$remark}}, where: {id:$id}) {\n\t\tcode\n\t\tid\n\t\tremark\n\t}\n}\n",
      "origin_content": "mutation MyQuery ($remark: String, $id: Int!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_updateOneadmin_role(data: {remark:{set:$remark}}, where: {id:$id}) {\n\t\tcode\n\t\tid\n\t\tremark\n\t}\n}",
      "index": 66,
      "internal": false
    },
    {
      "operation_name": "System__Sub__CreateSub",
      "api_mount_path": "System/Sub/CreateSub",
      "file_path": "store/operation/System/Sub/CreateSub.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__Sub__CreateSub ($create_role: String = \"\", $message: String = \"\", $target_role: String = \"\", $updatedAt: DateTime = \"\", $type: String = \"\") @internalOperation @rbac(requireMatchAny: [admin]) {\n\tmain_createOnecase_sub(data: {updatedAt:$updatedAt,message:$message,create_role:$create_role,target_role:$target_role,type:$type}) {\n\t\tid\n\t\tmessage\n\t\ttarget_role\n\t\tupdatedAt\n\t\tcreate_role\n\t}\n}\n",
      "origin_content": "mutation MyQuery($create_role: String = \"\", $message: String = \"\", $target_role: String = \"\", $updatedAt: DateTime = \"\", $type: String = \"\") @internalOperation @rbac(requireMatchAny: [admin]) {\n  main_createOnecase_sub(\n    data: {updatedAt: $updatedAt, message: $message, create_role: $create_role, target_role: $target_role, type: $type}\n  ) {\n    id\n    message\n    target_role\n    updatedAt\n    create_role\n  }\n}",
      "index": 67,
      "internal": true
    },
    {
      "operation_name": "System__Sub__SSE",
      "api_mount_path": "System/Sub/SSE",
      "file_path": "store/operation/System/Sub/SSE.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__Sub__SSE ($roles: String!) {\n\tdata: main_findManycase_sub(where: {target_role:{equals:$roles}}) {\n\t\tmessage\n\t\tupdatedAt\n\t\ttarget_role\n\t\tcreate_role\n\t\tid\n\t\ttype\n\t}\n}\n",
      "origin_content": "query MyQuery($roles: String!) {\n  data: main_findManycase_sub(where: {target_role: {equals: $roles}}) {\n    message\n    updatedAt\n    target_role\n    create_role\n    id\n    type\n  }\n}",
      "index": 68,
      "internal": false
    },
    {
      "operation_name": "System__User__ConnectRole",
      "api_mount_path": "System/User/ConnectRole",
      "file_path": "store/operation/System/User/ConnectRole.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__User__ConnectRole ($userId: Int!, $roleId: Int!) {\n\tdata: main_createOneadmin_role_user(data: {role_id:$roleId,user_id:$userId}) {\n\t\tid\n\t}\n}\n",
      "origin_content": "mutation MyQuery($userId: Int!, $roleId: Int!) {\n  data: main_createOneadmin_role_user(data: {role_id: $roleId, user_id: $userId}) {\n    id\n  }\n}",
      "index": 69,
      "internal": false
    },
    {
      "operation_name": "System__User__CountUsers",
      "api_mount_path": "System/User/CountUsers",
      "file_path": "store/operation/System/User/CountUsers.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__CountUsers @rbac(requireMatchAny: [admin]) {\n\tdata: main_aggregateadmin_user {\n\t\tcount: _count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery @rbac(requireMatchAny: [admin]) {\n\tdata: main_aggregateadmin_user {\n\t\tcount: _count {\n\t\t\tid\n\t\t}\n\t}\n}",
      "index": 70,
      "internal": false
    },
    {
      "operation_name": "System__User__CreateOne",
      "api_mount_path": "System/User/CreateOne",
      "file_path": "store/operation/System/User/CreateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__User__CreateOne ($countryCode: String = \"CN\", $name: String!, $password: String!, $passwordType: String = \"plain\", $phone: String!) {\n\tdata: casdoor_addUser_post(addUser_post_input_object: {phone:$phone,name:$name,password:$password,passwordType:$passwordType,countryCode:$countryCode}) {\n\t\tmsg\n\t\tstatus\n\t}\n}\n",
      "origin_content": "mutation MyQuery($countryCode: String = \"CN\", $name: String!, $password: String!, $passwordType: String = \"plain\", $phone: String!)  {\n  data: casdoor_addUser_post(\n    addUser_post_input_object: {phone: $phone, name: $name, password: $password, passwordType: $passwordType, countryCode: $countryCode}\n  ) {\n    msg\n    status\n  }\n}",
      "index": 71,
      "internal": false
    },
    {
      "operation_name": "System__User__DeleteOne",
      "api_mount_path": "System/User/DeleteOne",
      "file_path": "store/operation/System/User/DeleteOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__User__DeleteOne ($id: Int = 10) @rbac(requireMatchAny: [admin,b1a23,a231,abc1]) {\n\tmain_deleteOneadmin_user(where: {id:$id}) {\n\t\tid\n\t\tname\n\t\tpassword\n\t\tpassword_salt\n\t\tpassword_type\n\t\tphone\n\t\tuser_id\n\t}\n}\n",
      "origin_content": "mutation MyQuery ($id: Int = 10) @rbac(requireMatchAny: [admin,b1a23,a231,abc1]) {\n\tmain_deleteOneadmin_user(where: {id:$id}) {\n\t\tid\n\t\tname\n\t\tpassword\n\t\tpassword_salt\n\t\tpassword_type\n\t\tphone\n\t\tuser_id\n\t}\n}",
      "index": 72,
      "internal": false
    },
    {
      "operation_name": "System__User__DisconnectRole",
      "api_mount_path": "System/User/DisconnectRole",
      "file_path": "store/operation/System/User/DisconnectRole.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__User__DisconnectRole ($roleId: Int!, $userId: Int = 10) {\n\tdata: main_deleteOneadmin_role_user(where: {role_id_user_id:{role_id:$roleId,user_id:$userId}}) {\n\t\tid\n\t}\n}\n",
      "origin_content": "mutation MyQuery($roleId: Int!, $userId: Int = 10) {\n  data: main_deleteOneadmin_role_user(\n    where: {role_id_user_id: {role_id: $roleId, user_id: $userId}}\n  ) {\n    id\n  }\n} ",
      "index": 73,
      "internal": false
    },
    {
      "operation_name": "System__User__GetAllList",
      "api_mount_path": "System/User/GetAllList",
      "file_path": "store/operation/System/User/GetAllList.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__GetAllList @rbac(requireMatchAny: [admin]) {\n\tdata: main_aggregateadmin_user {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery() @rbac(requireMatchAny: [admin]) {\n  data:main_aggregateadmin_user {\n    _count {\n      id\n    \n    }\n  }\n}",
      "index": 74,
      "internal": false
    },
    {
      "operation_name": "System__User__GetLikeUser",
      "api_mount_path": "System/User/GetLikeUser",
      "file_path": "store/operation/System/User/GetLikeUser.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__GetLikeUser ($name: String = \"\", $phone: String = \"\", $id: Int = 10, $userId: Int, $roleId: Int) {\n\tdata: main_findManyadmin_user(where: {name:{contains:$name,endsWith:\"\"},phone:{endsWith:\"\",contains:$phone}}) {\n\t\tid @export(as: \"userId\")\n\t\tname\n\t\tphone\n\t\tcreatedAt: created_at\n\t\tavatar\n\t\tuser_role: _join {\n\t\t\tdata: main_findManyadmin_role_user(where: {user_id:{equals:$userId}}) {\n\t\t\t\trole_id @export(as: \"roleId\")\n\t\t\t\trole: _join {\n\t\t\t\t\tmain_findManyadmin_role(where: {id:{equals:$roleId}}) {\n\t\t\t\t\t\tcode\n\t\t\t\t\t\tid\n\t\t\t\t\t\tremark\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdata1: main_findUniqueadmin_user(where: {id:$id}) {\n\t\tid\n\t\tname\n\t\tphone\n\t\tcreatedAt: created_at\n\t\tavatar\n\t}\n}\n",
      "origin_content": "query MyQuery($name: String = \"\", $phone: String = \"\", $id: Int = 10, $userId: Int @internal, $roleId: Int @internal) {\n  data:main_findManyadmin_user(\n    where: {name: {contains: $name, endsWith: \"\"}, phone: {endsWith: \"\", contains: $phone}}\n  ) {\n    id @export(as: \"userId\")\n    name\n    phone\n    createdAt: created_at\n    avatar\n    user_role: _join {\n      data:main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) {\n        role_id @export(as: \"roleId\")\n        role: _join {\n          main_findManyadmin_role(where: {id: {equals: $roleId}}) {\n            code\n            id\n            remark\n          }\n        }\n      }\n    }\n  }\n  data1:main_findUniqueadmin_user(where: {id: $id}) {\n    id\n    name\n    phone\n   createdAt: created_at\n    avatar\n  }\n}",
      "index": 75,
      "internal": false
    },
    {
      "operation_name": "System__User__GetList",
      "api_mount_path": "System/User/GetList",
      "file_path": "store/operation/System/User/GetList.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": [
        "#/definitions/main_admin_userWhereInput",
        "#/definitions/main_admin_userOrderByWithRelationInput"
      ],
      "interpolation_variables_refs": [
        "#/definitions/main_admin_userWhereInput",
        "#/definitions/main_admin_userOrderByWithRelationInput"
      ],
      "content": "query System__User__GetList ($skip: Int!, $take: Int!, $query: main_admin_userWhereInput = {}, $orderBy: [main_admin_userOrderByWithRelationInput], $userId: Int, $roleId: Int) @rbac(requireMatchAny: [user,admin,b1a23,a231,abc1]) {\n\tdata: main_findManyadmin_user(skip: $skip, take: $take, where: {AND:$query}, orderBy: $orderBy) {\n\t\tid @export(as: \"userId\")\n\t\tname\n\t\tavatar\n\t\tcreatedAt: created_at\n\t\t_join {\n\t\t\tmain_findManyadmin_role_user(where: {user_id:{equals:$userId}}) {\n\t\t\t\trole_id @export(as: \"roleId\")\n\t\t\t\tuser_id\n\t\t\t\t_join {\n\t\t\t\t\tmain_findManyadmin_role(where: {id:{equals:$roleId}}) {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tremark\n\t\t\t\t\t\tcode\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tphone\n\t\tuser_id\n\t}\n}\n",
      "origin_content": "query MyQuery($skip: Int!, $take: Int!, $query: main_admin_userWhereInput = {}, $orderBy: [main_admin_userOrderByWithRelationInput], $userId: Int@internal, $roleId: Int@internal) @rbac(requireMatchAny: [user, admin, b1a23, a231, abc1]) {\n  data: main_findManyadmin_user(\n    skip: $skip\n    take: $take\n    where: {AND: $query}\n    orderBy: $orderBy\n  ) {\n    id @export(as: \"userId\")\n    name\n    avatar\n    createdAt: created_at\n    _join {\n      main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) {\n        role_id @export(as: \"roleId\")\n        user_id\n        _join {\n          main_findManyadmin_role(where: {id: {equals: $roleId}}) {\n            id\n            remark\n            code\n          }\n        }\n      }\n    }\n    phone\n    user_id\n  }\n}",
      "index": 76,
      "internal": false
    },
    {
      "operation_name": "System__User__GetOne",
      "api_mount_path": "System/User/GetOne",
      "file_path": "store/operation/System/User/GetOne.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "user",
            "eeee",
            "admin",
            "b1a23",
            "a231",
            "abc1"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__GetOne ($name: String, $phone: String, $userId: Int, $roleId: Int) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_findFirstadmin_user(where: {OR:[{name:{equals:$name}},{phone:{equals:$phone}}]}) {\n\t\tid @export(as: \"userId\")\n\t\tavatar\n\t\troles: _join @transform(get: \"main_findManyadmin_role_user\") {\n\t\t\tmain_findManyadmin_role_user(where: {user_id:{equals:$userId}}) @transform(get: \"[]._join.main_findFirstadmin_role.code\") {\n\t\t\t\trole_id @export(as: \"roleId\")\n\t\t\t\t_join {\n\t\t\t\t\tmain_findFirstadmin_role(where: {id:{equals:$roleId}}) {\n\t\t\t\t\t\tcode\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tname\n\t\tphone\n\t\tuser_id\n\t}\n}\n",
      "origin_content": "query MyQuery($name: String, $phone: String, $userId: Int@internal, $roleId: Int@internal) @rbac(requireMatchAny: [user, eeee, admin, b1a23, a231, abc1]) {\n  data: main_findFirstadmin_user(\n    where: {OR: [{name: {equals: $name}}, {phone: {equals: $phone}}]}\n  ) {\n    id @export(as: \"userId\")\n    avatar\n  \troles: _join @transform(get: \"main_findManyadmin_role_user\") {\n      main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) @transform(get: \"[]._join.main_findFirstadmin_role.code\") {\n        role_id @export(as: \"roleId\")\n        _join {\n          main_findFirstadmin_role(where: {id: {equals: $roleId}}) {\n            code\n          }\n        }\n      }\n    }\n    name\n    phone\n    user_id\n  }\n}",
      "index": 77,
      "internal": false
    },
    {
      "operation_name": "System__User__GetRoleUsers",
      "api_mount_path": "System/User/GetRoleUsers",
      "file_path": "store/operation/System/User/GetRoleUsers.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__GetRoleUsers ($roleId: Int, $userId: Int, $code: String!) {\n\tdata: main_findManyadmin_role(where: {code:{equals:$code}}) {\n\t\tid @export(as: \"roleId\")\n\t\tremark\n\t\tcode\n\t\trole: _join {\n\t\t\tmain_findManyadmin_role_user(where: {role_id:{equals:$roleId}}) {\n\t\t\t\trole_id\n\t\t\t\tuser_id @export(as: \"userId\")\n\t\t\t\t_join {\n\t\t\t\t\tuser: main_findManyadmin_user(where: {id:{equals:$userId}}) {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\tavatar\n\t\t\t\t\t\tcreated_at\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery($roleId: Int @internal, $userId: Int @internal, $code: String!) {\n  data:main_findManyadmin_role(where: {code: {equals: $code}}) {\n    id @export(as: \"roleId\")\n    remark\n    code\n    role:_join {\n      main_findManyadmin_role_user(where: {role_id: {equals: $roleId}}) {\n        role_id\n        user_id @export(as: \"userId\")\n        _join {\n          user:main_findManyadmin_user(where: {id: {equals: $userId}}) {\n            id\n            name\n            avatar\n            created_at\n          }\n        }\n      }\n    }\n  }\n}",
      "index": 78,
      "internal": false
    },
    {
      "operation_name": "System__User__GetUserByUserId",
      "api_mount_path": "System/User/GetUserByUserId",
      "file_path": "store/operation/System/User/GetUserByUserId.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": {
          "requireMatchAll": null,
          "requireMatchAny": [
            "admin",
            "user"
          ],
          "denyMatchAll": null,
          "denyMatchAny": null
        }
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__GetUserByUserId ($userId: String = \"\") @rbac(requireMatchAny: [admin,user]) {\n\tdata: main_findManyadmin_user(where: {user_id:{equals:$userId}}) {\n\t\tid\n\t\tname\n\t\tphone\n\t\tavatar\n\t\tuser_id\n\t}\n}\n",
      "origin_content": "query MyQuery($userId: String = \"\") @rbac(requireMatchAny: [admin, user]) {\n  data:main_findManyadmin_user(where: {user_id: {equals: $userId}}) {\n    id\n    name\n    phone\n    avatar\n    user_id\n  }\n}",
      "index": 79,
      "internal": false
    },
    {
      "operation_name": "System__User__GetUserInfo",
      "api_mount_path": "System/User/GetUserInfo",
      "file_path": "store/operation/System/User/GetUserInfo.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__GetUserInfo ($equals: String = \"\") {\n\tdata: main_findManyadmin_user(where: {name:{equals:$equals}}) {\n\t\tavatar\n\t\tcountry_code\n\t\tcreated_at\n\t\tid\n\t\tname\n\t\tphone\n\t\tuser_id\n\t}\n}\n",
      "origin_content": "query MyQuery($equals: String = \"\") {\n  data:main_findManyadmin_user(where: {name: {equals: $equals}}) {\n    avatar\n    country_code\n    created_at\n    id\n    name\n    phone\n    user_id\n  }\n} ",
      "index": 80,
      "internal": false
    },
    {
      "operation_name": "System__User__GetUserRole",
      "api_mount_path": "System/User/GetUserRole",
      "file_path": "store/operation/System/User/GetUserRole.graphql",
      "operation_type": 0,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "query System__User__GetUserRole ($userId: Int!, $roleId: Int) {\n\tdata: main_findManyadmin_role_user(where: {user_id:{equals:$userId}}) @transform(get: \"[].data\") {\n\t\trole_id @export(as: \"roleId\")\n\t\tdata: _join @transform(get: \"main_findFirstadmin_role\") {\n\t\t\tmain_findFirstadmin_role(where: {id:{equals:$roleId}}) {\n\t\t\t\tremark\n\t\t\t\tcode\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t}\n}\n",
      "origin_content": "query MyQuery($userId: Int!, $roleId: Int @internal) {\n  data: main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) @transform(get: \"[].data\") {\n    role_id @export(as: \"roleId\")\n    data: _join @transform(get: \"main_findFirstadmin_role\") {\n      main_findFirstadmin_role(where: {id: {equals: $roleId}}) {\n        remark\n        code\n        id\n      }\n    }\n  }\n}",
      "index": 81,
      "internal": false
    },
    {
      "operation_name": "System__User__UpdateOne",
      "api_mount_path": "System/User/UpdateOne",
      "file_path": "store/operation/System/User/UpdateOne.graphql",
      "operation_type": 1,
      "authorization_config": {
        "claims": null,
        "roleConfig": null
      },
      "variables_refs": null,
      "interpolation_variables_refs": null,
      "content": "mutation System__User__UpdateOne ($avatar: String = \"\", $id: Int = 10, $password: String!, $phone: String = \"\", $name: String = \"\", $userId: String!) {\n\tcasdoor: casdoor_updateUser_post(updateUser_post_input_object: {password:$password,name:$name,phone:$phone,userId:$userId}) {\n\t\tmsg\n\t\tstatus\n\t}\n\tdata: main_updateOneadmin_user(data: {avatar:{set:$avatar},name:{set:$name},phone:{set:$phone}}, where: {id:$id}) {\n\t\tavatar\n\t}\n}\n",
      "origin_content": "mutation MyQuery($avatar: String = \"\", $id: Int = 10, $password: String!, $phone: String = \"\", $name: String = \"\", $userId: String!) {\n  casdoor:casdoor_updateUser_post(\n    updateUser_post_input_object: {password: $password, name: $name, phone: $phone, userId: $userId}\n  ) {\n    msg\n    status\n  }\n  data:main_updateOneadmin_user(\n    data: {avatar: {set: $avatar}, name: {set: $name}, phone: {set: $phone}}\n    where: {id: $id}\n  ) {\n    avatar\n  }\n}",
      "index": 82,
      "internal": false
    }
  ],
  "function_operation_files": null,
  "proxy_operation_files": [
    {
      "operation_name": "proxy__bindmenu",
      "api_mount_path": "proxy/bindmenu",
      "file_path": "custom-go/proxy/bindmenu.json",
      "operation_type": 1,
      "authorization_config": null,
      "module_path": "custom-go/proxy"
    },
    {
      "operation_name": "proxy__login",
      "api_mount_path": "proxy/login",
      "file_path": "custom-go/proxy/login.json",
      "operation_type": 1,
      "authorization_config": null,
      "module_path": "custom-go/proxy"
    },
    {
      "operation_name": "proxy__menuTree",
      "api_mount_path": "proxy/menuTree",
      "file_path": "custom-go/proxy/menuTree.json",
      "operation_type": 1,
      "authorization_config": null,
      "module_path": "custom-go/proxy"
    },
    {
      "operation_name": "proxy__perm",
      "api_mount_path": "proxy/perm",
      "file_path": "custom-go/proxy/perm.json",
      "operation_type": 1,
      "authorization_config": null,
      "module_path": "custom-go/proxy"
    },
    {
      "operation_name": "proxy__unBindMenu",
      "api_mount_path": "proxy/unBindMenu",
      "file_path": "custom-go/proxy/unBindMenu.json",
      "operation_type": 1,
      "authorization_config": null,
      "module_path": "custom-go/proxy"
    }
  ],
  "definitions": {
    "main_BoolNullableFilter": {"properties":{"equals":{"type":"boolean"},"not":{"$ref":"#/definitions/main_NestedBoolNullableFilter"}},"type":"object"},
    "main_case_categoryOrderByWithRelationInput": {"properties":{"case_post":{"$ref":"#/definitions/main_case_postOrderByRelationAggregateInput"},"id":{"enum":["asc","desc"],"title":"main_SortOrder"},"name":{"enum":["asc","desc"],"title":"main_SortOrder"}},"type":"object"},
    "main_NullableBoolFieldUpdateOperationsInput": {"properties":{"set":{"type":"boolean"}},"type":"object"},
    "main_admin_role_userWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_admin_role_userWhereInput"},"NOT":{"$ref":"#/definitions/main_admin_role_userWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_admin_role_userWhereInput"},"type":"array"},"id":{"$ref":"#/definitions/main_IntFilter"},"role_id":{"$ref":"#/definitions/main_IntFilter"},"user_id":{"$ref":"#/definitions/main_IntFilter"}},"type":"object"},
    "casdoor_login_post_input_object": {"properties":{"code":{"type":"string"},"countryCode":{"type":"string"},"loginType":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"username":{"type":"string"}},"required":["code","password","loginType","username","phone"],"type":"object"},
    "main_case_postCreateInput": {"properties":{"admin_user":{"$ref":"#/definitions/main_admin_userCreateNestedOneWithoutCase_postInput"},"author":{"type":"string"},"case_category":{"$ref":"#/definitions/main_case_categoryCreateNestedOneWithoutCase_postInput"},"content":{"type":"string"},"poster":{"type":"string"},"published_at":{"format":"DateTime","type":"string"},"title":{"type":"string"}},"required":["title","author"],"type":"object"},
    "main_case_postUpdateManyWithoutAdmin_userNestedInput": {"properties":{"connect":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"connectOrCreate":{"$ref":"#/definitions/main_case_postCreateOrConnectWithoutAdmin_userInput"},"create":{"$ref":"#/definitions/main_case_postCreateWithoutAdmin_userInput"},"createMany":{"$ref":"#/definitions/main_case_postCreateManyAdmin_userInputEnvelope"},"delete":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"deleteMany":{"$ref":"#/definitions/main_case_postScalarWhereInput"},"disconnect":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"set":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"update":{"$ref":"#/definitions/main_case_postUpdateWithWhereUniqueWithoutAdmin_userInput"},"updateMany":{"$ref":"#/definitions/main_case_postUpdateManyWithWhereWithoutAdmin_userInput"},"upsert":{"$ref":"#/definitions/main_case_postUpsertWithWhereUniqueWithoutAdmin_userInput"}},"type":"object"},
    "main_DateTimeFieldUpdateOperationsInput": {"properties":{"set":{"format":"DateTime","type":"string"}},"type":"object"},
    "main_BoolFieldUpdateOperationsInput": {"properties":{"set":{"type":"boolean"}},"type":"object"},
    "main_NestedStringFilter": {"properties":{"contains":{"type":"string"},"endsWith":{"type":"string"},"equals":{"type":"string"},"gt":{"type":"string"},"gte":{"type":"string"},"in":{"items":{"type":"string"},"type":"array"},"lt":{"type":"string"},"lte":{"type":"string"},"not":{"$ref":"#/definitions/main_NestedStringFilter"},"notIn":{"items":{"type":"string"},"type":"array"},"startsWith":{"type":"string"}},"type":"object"},
    "main_case_postCreateWithoutCase_categoryInput": {"properties":{"admin_user":{"$ref":"#/definitions/main_admin_userCreateNestedOneWithoutCase_postInput"},"author":{"type":"string"},"content":{"type":"string"},"poster":{"type":"string"},"published_at":{"format":"DateTime","type":"string"},"title":{"type":"string"}},"required":["title","author"],"type":"object"},
    "main_admin_userCreateWithoutCase_postInput": {"properties":{"avatar":{"type":"string"},"country_code":{"type":"string"},"created_at":{"format":"DateTime","type":"string"},"name":{"type":"string"},"password":{"type":"string"},"password_salt":{"type":"string"},"password_type":{"type":"string"},"phone":{"type":"string"},"user_id":{"type":"string"},"wx_resp":{"type":"string"}},"required":["name"],"type":"object"},
    "main_case_categoryUpdateOneWithoutCase_postNestedInput": {"properties":{"connect":{"$ref":"#/definitions/main_case_categoryWhereUniqueInput"},"connectOrCreate":{"$ref":"#/definitions/main_case_categoryCreateOrConnectWithoutCase_postInput"},"create":{"$ref":"#/definitions/main_case_categoryCreateWithoutCase_postInput"},"delete":{"type":"boolean"},"disconnect":{"type":"boolean"},"update":{"$ref":"#/definitions/main_case_categoryUpdateWithoutCase_postInput"},"upsert":{"$ref":"#/definitions/main_case_categoryUpsertWithoutCase_postInput"}},"type":"object"},
    "main_case_subCreateInput": {"properties":{"create_role":{"type":"string"},"createdAt":{"format":"DateTime","type":"string"},"deletedAt":{"format":"DateTime","type":"string"},"message":{"type":"string"},"target_role":{"type":"string"},"type":{"type":"string"},"updatedAt":{"format":"DateTime","type":"string"}},"required":["updatedAt","message","create_role","target_role","type"],"type":"object"},
    "main_NestedBoolNullableFilter": {"properties":{"equals":{"type":"boolean"},"not":{"$ref":"#/definitions/main_NestedBoolNullableFilter"}},"type":"object"},
    "main_admin_tokenWhereUniqueInput": {"properties":{"id":{"type":"integer"}},"type":"object"},
    "main_admin_tokenUpdateManyMutationInput": {"properties":{"banned":{"$ref":"#/definitions/main_NullableBoolFieldUpdateOperationsInput"},"expire_time":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"flush_time":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"token":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"user_id":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"}},"type":"object"},
    "main_admin_menu_roleWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_admin_menu_roleWhereInput"},"NOT":{"$ref":"#/definitions/main_admin_menu_roleWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_admin_menu_roleWhereInput"},"type":"array"},"id":{"$ref":"#/definitions/main_IntFilter"},"menu_id":{"$ref":"#/definitions/main_IntFilter"},"role_id":{"$ref":"#/definitions/main_IntFilter"}},"type":"object"},
    "casdoor_updateProvider_post_input_object": {"properties":{"clientId":{"type":"string"},"clientSecret":{"type":"string"},"signName":{"type":"string"},"templateCode":{"type":"string"}},"required":["clientId","clientSecret","signName","templateCode"],"type":"object"},
    "main_case_postUpdateWithoutAdmin_userInput": {"properties":{"author":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"case_category":{"$ref":"#/definitions/main_case_categoryUpdateOneWithoutCase_postNestedInput"},"content":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"poster":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"published_at":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"title":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"}},"type":"object"},
    "main_admin_userCreateNestedOneWithoutCase_postInput": {"properties":{"connect":{"$ref":"#/definitions/main_admin_userWhereUniqueInput"},"connectOrCreate":{"$ref":"#/definitions/main_admin_userCreateOrConnectWithoutCase_postInput"},"create":{"$ref":"#/definitions/main_admin_userCreateWithoutCase_postInput"}},"type":"object"},
    "main_DateTimeFilter": {"properties":{"equals":{"format":"DateTime","type":"string"},"gt":{"format":"DateTime","type":"string"},"gte":{"format":"DateTime","type":"string"},"in":{"items":{"format":"DateTime","type":"string"},"type":"array"},"lt":{"format":"DateTime","type":"string"},"lte":{"format":"DateTime","type":"string"},"not":{"$ref":"#/definitions/main_NestedDateTimeFilter"},"notIn":{"items":{"format":"DateTime","type":"string"},"type":"array"}},"type":"object"},
    "main_admin_permissionCreateManyInput": {"properties":{"createdAt":{"format":"DateTime","type":"string"},"enabled":{"type":"integer"},"id":{"type":"integer"},"method":{"type":"string"},"path":{"type":"string"},"updatedAt":{"format":"DateTime","type":"string"}},"required":["id","method","path"],"type":"object"},
    "main_admin_roleOrderByWithRelationInput": {"properties":{"code":{"enum":["asc","desc"],"title":"main_SortOrder"},"id":{"enum":["asc","desc"],"title":"main_SortOrder"},"remark":{"enum":["asc","desc"],"title":"main_SortOrder"}},"type":"object"},
    "main_case_postUpdateManyWithWhereWithoutAdmin_userInput": {"properties":{"data":{"$ref":"#/definitions/main_case_postUpdateManyMutationInput"},"where":{"$ref":"#/definitions/main_case_postScalarWhereInput"}},"required":["where","data"],"type":"object"},
    "main_NestedStringNullableFilter": {"properties":{"contains":{"type":"string"},"endsWith":{"type":"string"},"equals":{"type":"string"},"gt":{"type":"string"},"gte":{"type":"string"},"in":{"items":{"type":"string"},"type":"array"},"lt":{"type":"string"},"lte":{"type":"string"},"not":{"$ref":"#/definitions/main_NestedStringNullableFilter"},"notIn":{"items":{"type":"string"},"type":"array"},"startsWith":{"type":"string"}},"type":"object"},
    "main_NullableDateTimeFieldUpdateOperationsInput": {"properties":{"set":{"format":"DateTime","type":"string"}},"type":"object"},
    "main_case_menuOrderByWithRelationInput": {"properties":{"api_id":{"enum":["asc","desc"],"title":"main_SortOrder"},"create_time":{"enum":["asc","desc"],"title":"main_SortOrder"},"icon":{"enum":["asc","desc"],"title":"main_SortOrder"},"id":{"enum":["asc","desc"],"title":"main_SortOrder"},"is_bottom":{"enum":["asc","desc"],"title":"main_SortOrder"},"label":{"enum":["asc","desc"],"title":"main_SortOrder"},"level":{"enum":["asc","desc"],"title":"main_SortOrder"},"menu_type":{"enum":["asc","desc"],"title":"main_SortOrder"},"name":{"enum":["asc","desc"],"title":"main_SortOrder"},"parentId":{"enum":["asc","desc"],"title":"main_SortOrder"},"path":{"enum":["asc","desc"],"title":"main_SortOrder"},"perms":{"enum":["asc","desc"],"title":"main_SortOrder"},"sort":{"enum":["asc","desc"],"title":"main_SortOrder"}},"type":"object"},
    "main_admin_tokenWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_admin_tokenWhereInput"},"NOT":{"$ref":"#/definitions/main_admin_tokenWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_admin_tokenWhereInput"},"type":"array"},"banned":{"$ref":"#/definitions/main_BoolNullableFilter"},"expire_time":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"flush_time":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"token":{"$ref":"#/definitions/main_StringNullableFilter"},"user_id":{"$ref":"#/definitions/main_StringNullableFilter"}},"type":"object"},
    "main_BoolFilter": {"properties":{"equals":{"type":"boolean"},"not":{"$ref":"#/definitions/main_NestedBoolFilter"}},"type":"object"},
    "main_case_postUpsertWithWhereUniqueWithoutAdmin_userInput": {"properties":{"create":{"$ref":"#/definitions/main_case_postCreateWithoutAdmin_userInput"},"update":{"$ref":"#/definitions/main_case_postUpdateWithoutAdmin_userInput"},"where":{"$ref":"#/definitions/main_case_postWhereUniqueInput"}},"required":["where","update","create"],"type":"object"},
    "main_NestedDateTimeNullableFilter": {"properties":{"equals":{"format":"DateTime","type":"string"},"gt":{"format":"DateTime","type":"string"},"gte":{"format":"DateTime","type":"string"},"in":{"items":{"format":"DateTime","type":"string"},"type":"array"},"lt":{"format":"DateTime","type":"string"},"lte":{"format":"DateTime","type":"string"},"not":{"$ref":"#/definitions/main_NestedDateTimeNullableFilter"},"notIn":{"items":{"format":"DateTime","type":"string"},"type":"array"}},"type":"object"},
    "main_case_categoryCreateNestedOneWithoutCase_postInput": {"properties":{"connect":{"$ref":"#/definitions/main_case_categoryWhereUniqueInput"},"connectOrCreate":{"$ref":"#/definitions/main_case_categoryCreateOrConnectWithoutCase_postInput"},"create":{"$ref":"#/definitions/main_case_categoryCreateWithoutCase_postInput"}},"type":"object"},
    "main_case_categoryCreateOrConnectWithoutCase_postInput": {"properties":{"create":{"$ref":"#/definitions/main_case_categoryCreateWithoutCase_postInput"},"where":{"$ref":"#/definitions/main_case_categoryWhereUniqueInput"}},"required":["where","create"],"type":"object"},
    "main_NestedDateTimeFilter": {"properties":{"equals":{"format":"DateTime","type":"string"},"gt":{"format":"DateTime","type":"string"},"gte":{"format":"DateTime","type":"string"},"in":{"items":{"format":"DateTime","type":"string"},"type":"array"},"lt":{"format":"DateTime","type":"string"},"lte":{"format":"DateTime","type":"string"},"not":{"$ref":"#/definitions/main_NestedDateTimeFilter"},"notIn":{"items":{"format":"DateTime","type":"string"},"type":"array"}},"type":"object"},
    "main_admin_apilogOrderByWithRelationInput": {"properties":{"code":{"enum":["asc","desc"],"title":"main_SortOrder"},"createdAt":{"enum":["asc","desc"],"title":"main_SortOrder"},"deletedAt":{"enum":["asc","desc"],"title":"main_SortOrder"},"id":{"enum":["asc","desc"],"title":"main_SortOrder"},"ip":{"enum":["asc","desc"],"title":"main_SortOrder"},"method":{"enum":["asc","desc"],"title":"main_SortOrder"},"path":{"enum":["asc","desc"],"title":"main_SortOrder"},"ua":{"enum":["asc","desc"],"title":"main_SortOrder"},"updatedAt":{"enum":["asc","desc"],"title":"main_SortOrder"},"userId":{"enum":["asc","desc"],"title":"main_SortOrder"},"userName":{"enum":["asc","desc"],"title":"main_SortOrder"}},"type":"object"},
    "main_case_menuWhereUniqueInput": {"properties":{"id":{"type":"integer"}},"type":"object"},
    "main_case_postCreateManyAdmin_userInput": {"properties":{"author":{"type":"string"},"cate":{"type":"integer"},"content":{"type":"string"},"id":{"type":"integer"},"poster":{"type":"string"},"published_at":{"format":"DateTime","type":"string"},"title":{"type":"string"}},"required":["title","author"],"type":"object"},
    "main_admin_dicUpdateInput": {"properties":{"createdAt":{"$ref":"#/definitions/main_DateTimeFieldUpdateOperationsInput"},"deletedAt":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"isOpen":{"$ref":"#/definitions/main_BoolFieldUpdateOperationsInput"},"updatedAt":{"$ref":"#/definitions/main_DateTimeFieldUpdateOperationsInput"}},"type":"object"},
    "casdoor_addUser_post_input_object": {"properties":{"countryCode":{"type":"string"},"name":{"type":"string"},"password":{"type":"string"},"passwordType":{"type":"string"},"phone":{"type":"string"}},"required":["name","password","passwordType","phone"],"type":"object"},
    "main_admin_role_userWhereUniqueInput": {"properties":{"id":{"type":"integer"},"role_id_user_id":{"$ref":"#/definitions/main_admin_role_userRole_idUser_idCompoundUniqueInput"}},"type":"object"},
    "system_bindRoleApis_post_input_object": {"properties":{"operationPaths":{"items":{"type":"string"},"type":"array"},"rbacType":{"enum":["requireMatchAll","requireMatchAny","denyMatchAll","denyMatchAny"],"title":"system_bindRoleApis_post_rbacType_enum"},"roleCodes":{"items":{"type":"string"},"type":"array"}},"required":["roleCodes","operationPaths"],"type":"object"},
    "main_case_categoryUpdateInput": {"properties":{"case_post":{"$ref":"#/definitions/main_case_postUpdateManyWithoutCase_categoryNestedInput"},"name":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"}},"type":"object"},
    "main_case_postUpdateWithoutCase_categoryInput": {"properties":{"admin_user":{"$ref":"#/definitions/main_admin_userUpdateOneWithoutCase_postNestedInput"},"author":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"content":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"poster":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"published_at":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"title":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"}},"type":"object"},
    "main_case_menuWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_case_menuWhereInput"},"NOT":{"$ref":"#/definitions/main_case_menuWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_case_menuWhereInput"},"type":"array"},"api_id":{"$ref":"#/definitions/main_StringNullableFilter"},"create_time":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"icon":{"$ref":"#/definitions/main_StringNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"is_bottom":{"$ref":"#/definitions/main_IntFilter"},"label":{"$ref":"#/definitions/main_StringFilter"},"level":{"$ref":"#/definitions/main_IntFilter"},"menu_type":{"$ref":"#/definitions/main_StringNullableFilter"},"name":{"$ref":"#/definitions/main_StringNullableFilter"},"parentId":{"$ref":"#/definitions/main_IntNullableFilter"},"path":{"$ref":"#/definitions/main_StringNullableFilter"},"perms":{"$ref":"#/definitions/main_StringNullableFilter"},"sort":{"$ref":"#/definitions/main_IntFilter"}},"type":"object"},
    "main_case_postCreateManyCase_categoryInput": {"properties":{"auth":{"type":"integer"},"author":{"type":"string"},"content":{"type":"string"},"id":{"type":"integer"},"poster":{"type":"string"},"published_at":{"format":"DateTime","type":"string"},"title":{"type":"string"}},"required":["title","author"],"type":"object"},
    "main_case_postOrderByWithRelationInput": {"properties":{"admin_user":{"$ref":"#/definitions/main_admin_userOrderByWithRelationInput"},"auth":{"enum":["asc","desc"],"title":"main_SortOrder"},"author":{"enum":["asc","desc"],"title":"main_SortOrder"},"case_category":{"$ref":"#/definitions/main_case_categoryOrderByWithRelationInput"},"cate":{"enum":["asc","desc"],"title":"main_SortOrder"},"content":{"enum":["asc","desc"],"title":"main_SortOrder"},"id":{"enum":["asc","desc"],"title":"main_SortOrder"},"poster":{"enum":["asc","desc"],"title":"main_SortOrder"},"published_at":{"enum":["asc","desc"],"title":"main_SortOrder"},"title":{"enum":["asc","desc"],"title":"main_SortOrder"}},"type":"object"},
    "main_case_postUpdateManyWithoutCase_categoryNestedInput": {"properties":{"connect":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"connectOrCreate":{"$ref":"#/definitions/main_case_postCreateOrConnectWithoutCase_categoryInput"},"create":{"$ref":"#/definitions/main_case_postCreateWithoutCase_categoryInput"},"createMany":{"$ref":"#/definitions/main_case_postCreateManyCase_categoryInputEnvelope"},"delete":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"deleteMany":{"$ref":"#/definitions/main_case_postScalarWhereInput"},"disconnect":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"set":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"update":{"$ref":"#/definitions/main_case_postUpdateWithWhereUniqueWithoutCase_categoryInput"},"updateMany":{"$ref":"#/definitions/main_case_postUpdateManyWithWhereWithoutCase_categoryInput"},"upsert":{"$ref":"#/definitions/main_case_postUpsertWithWhereUniqueWithoutCase_categoryInput"}},"type":"object"},
    "main_admin_userUpsertWithoutCase_postInput": {"properties":{"create":{"$ref":"#/definitions/main_admin_userCreateWithoutCase_postInput"},"update":{"$ref":"#/definitions/main_admin_userUpdateWithoutCase_postInput"}},"required":["update","create"],"type":"object"},
    "main_case_postUpdateManyWithWhereWithoutCase_categoryInput": {"properties":{"data":{"$ref":"#/definitions/main_case_postUpdateManyMutationInput"},"where":{"$ref":"#/definitions/main_case_postScalarWhereInput"}},"required":["where","data"],"type":"object"},
    "main_case_menuCreateInput": {"properties":{"api_id":{"type":"string"},"create_time":{"format":"DateTime","type":"string"},"icon":{"type":"string"},"is_bottom":{"type":"integer"},"label":{"type":"string"},"level":{"type":"integer"},"menu_type":{"type":"string"},"name":{"type":"string"},"parentId":{"type":"integer"},"path":{"type":"string"},"perms":{"type":"string"},"sort":{"type":"integer"}},"required":["label","sort","level"],"type":"object"},
    "main_admin_roleWhereUniqueInput": {"properties":{"code":{"type":"string"},"id":{"type":"integer"}},"type":"object"},
    "casdoor_sendCode_post_input_object": {"properties":{"countryCode":{"type":"string"},"dest":{"type":"string"}},"required":["dest"],"type":"object"},
    "main_case_postCreateOrConnectWithoutCase_categoryInput": {"properties":{"create":{"$ref":"#/definitions/main_case_postCreateWithoutCase_categoryInput"},"where":{"$ref":"#/definitions/main_case_postWhereUniqueInput"}},"required":["where","create"],"type":"object"},
    "main_admin_apilogWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_admin_apilogWhereInput"},"NOT":{"$ref":"#/definitions/main_admin_apilogWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_admin_apilogWhereInput"},"type":"array"},"code":{"$ref":"#/definitions/main_StringFilter"},"createdAt":{"$ref":"#/definitions/main_DateTimeFilter"},"deletedAt":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"ip":{"$ref":"#/definitions/main_StringFilter"},"method":{"$ref":"#/definitions/main_StringFilter"},"path":{"$ref":"#/definitions/main_StringFilter"},"ua":{"$ref":"#/definitions/main_StringFilter"},"updatedAt":{"$ref":"#/definitions/main_DateTimeFilter"},"userId":{"$ref":"#/definitions/main_StringFilter"},"userName":{"$ref":"#/definitions/main_StringFilter"}},"type":"object"},
    "main_case_postCreateOrConnectWithoutAdmin_userInput": {"properties":{"create":{"$ref":"#/definitions/main_case_postCreateWithoutAdmin_userInput"},"where":{"$ref":"#/definitions/main_case_postWhereUniqueInput"}},"required":["where","create"],"type":"object"},
    "main_DateTimeNullableFilter": {"properties":{"equals":{"format":"DateTime","type":"string"},"gt":{"format":"DateTime","type":"string"},"gte":{"format":"DateTime","type":"string"},"in":{"items":{"format":"DateTime","type":"string"},"type":"array"},"lt":{"format":"DateTime","type":"string"},"lte":{"format":"DateTime","type":"string"},"not":{"$ref":"#/definitions/main_NestedDateTimeNullableFilter"},"notIn":{"items":{"format":"DateTime","type":"string"},"type":"array"}},"type":"object"},
    "main_admin_userCreateOrConnectWithoutCase_postInput": {"properties":{"create":{"$ref":"#/definitions/main_admin_userCreateWithoutCase_postInput"},"where":{"$ref":"#/definitions/main_admin_userWhereUniqueInput"}},"required":["where","create"],"type":"object"},
    "main_case_postUpdateManyMutationInput": {"properties":{"author":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"content":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"poster":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"published_at":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"title":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"}},"type":"object"},
    "main_IntFieldUpdateOperationsInput": {"properties":{"decrement":{"type":"integer"},"divide":{"type":"integer"},"increment":{"type":"integer"},"multiply":{"type":"integer"},"set":{"type":"integer"}},"type":"object"},
    "main_admin_userUpdateInput": {"properties":{"avatar":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"case_post":{"$ref":"#/definitions/main_case_postUpdateManyWithoutAdmin_userNestedInput"},"country_code":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"created_at":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"name":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"password":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"password_salt":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"password_type":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"phone":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"user_id":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"wx_resp":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"}},"type":"object"},
    "main_Case_postListRelationFilter": {"properties":{"every":{"$ref":"#/definitions/main_case_postWhereInput"},"none":{"$ref":"#/definitions/main_case_postWhereInput"},"some":{"$ref":"#/definitions/main_case_postWhereInput"}},"type":"object"},
    "main_case_categoryWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_case_categoryWhereInput"},"NOT":{"$ref":"#/definitions/main_case_categoryWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_case_categoryWhereInput"},"type":"array"},"case_post":{"$ref":"#/definitions/main_Case_postListRelationFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"name":{"$ref":"#/definitions/main_StringFilter"}},"type":"object"},
    "main_case_categoryCreateInput": {"properties":{"case_post":{"$ref":"#/definitions/main_case_postCreateNestedManyWithoutCase_categoryInput"},"name":{"type":"string"}},"required":["name"],"type":"object"},
    "main_admin_apilogWhereUniqueInput": {"properties":{"id":{"type":"integer"}},"type":"object"},
    "main_NestedBoolFilter": {"properties":{"equals":{"type":"boolean"},"not":{"$ref":"#/definitions/main_NestedBoolFilter"}},"type":"object"},
    "main_NullableStringFieldUpdateOperationsInput": {"properties":{"set":{"type":"string"}},"type":"object"},
    "main_admin_dicWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_admin_dicWhereInput"},"NOT":{"$ref":"#/definitions/main_admin_dicWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_admin_dicWhereInput"},"type":"array"},"createdAt":{"$ref":"#/definitions/main_DateTimeFilter"},"deletedAt":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"isOpen":{"$ref":"#/definitions/main_BoolFilter"},"updatedAt":{"$ref":"#/definitions/main_DateTimeFilter"}},"type":"object"},
    "main_IntFilter": {"properties":{"equals":{"type":"integer"},"gt":{"type":"integer"},"gte":{"type":"integer"},"in":{"items":{"type":"integer"},"type":"array"},"lt":{"type":"integer"},"lte":{"type":"integer"},"not":{"$ref":"#/definitions/main_NestedIntFilter"},"notIn":{"items":{"type":"integer"},"type":"array"}},"type":"object"},
    "main_case_postWhereUniqueInput": {"properties":{"id":{"type":"integer"}},"type":"object"},
    "main_case_postUpdateInput": {"properties":{"admin_user":{"$ref":"#/definitions/main_admin_userUpdateOneWithoutCase_postNestedInput"},"author":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"case_category":{"$ref":"#/definitions/main_case_categoryUpdateOneWithoutCase_postNestedInput"},"content":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"poster":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"published_at":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"title":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"}},"type":"object"},
    "main_case_postScalarWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_case_postScalarWhereInput"},"NOT":{"$ref":"#/definitions/main_case_postScalarWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_case_postScalarWhereInput"},"type":"array"},"auth":{"$ref":"#/definitions/main_IntNullableFilter"},"author":{"$ref":"#/definitions/main_StringFilter"},"cate":{"$ref":"#/definitions/main_IntNullableFilter"},"content":{"$ref":"#/definitions/main_StringNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"poster":{"$ref":"#/definitions/main_StringNullableFilter"},"published_at":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"title":{"$ref":"#/definitions/main_StringFilter"}},"type":"object"},
    "main_case_categoryUpsertWithoutCase_postInput": {"properties":{"create":{"$ref":"#/definitions/main_case_categoryCreateWithoutCase_postInput"},"update":{"$ref":"#/definitions/main_case_categoryUpdateWithoutCase_postInput"}},"required":["update","create"],"type":"object"},
    "main_admin_role_userRole_idUser_idCompoundUniqueInput": {"properties":{"role_id":{"type":"integer"},"user_id":{"type":"integer"}},"required":["role_id","user_id"],"type":"object"},
    "main_admin_userWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_admin_userWhereInput"},"NOT":{"$ref":"#/definitions/main_admin_userWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_admin_userWhereInput"},"type":"array"},"avatar":{"$ref":"#/definitions/main_StringNullableFilter"},"case_post":{"$ref":"#/definitions/main_Case_postListRelationFilter"},"country_code":{"$ref":"#/definitions/main_StringNullableFilter"},"created_at":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"name":{"$ref":"#/definitions/main_StringFilter"},"password":{"$ref":"#/definitions/main_StringNullableFilter"},"password_salt":{"$ref":"#/definitions/main_StringNullableFilter"},"password_type":{"$ref":"#/definitions/main_StringNullableFilter"},"phone":{"$ref":"#/definitions/main_StringNullableFilter"},"user_id":{"$ref":"#/definitions/main_StringNullableFilter"},"wx_resp":{"$ref":"#/definitions/main_StringNullableFilter"}},"type":"object"},
    "main_case_postOrderByRelationAggregateInput": {"properties":{"_count":{"enum":["asc","desc"],"title":"main_SortOrder"}},"type":"object"},
    "main_admin_userUpdateWithoutCase_postInput": {"properties":{"avatar":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"country_code":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"created_at":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"name":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"password":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"password_salt":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"password_type":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"phone":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"user_id":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"wx_resp":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"}},"type":"object"},
    "main_admin_dicWhereUniqueInput": {"properties":{"id":{"type":"integer"}},"type":"object"},
    "main_admin_roleUpdateInput": {"properties":{"code":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"remark":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"}},"type":"object"},
    "casdoor_updateUser_post_input_object": {"properties":{"countryCode":{"type":"string"},"name":{"type":"string"},"password":{"type":"string"},"passwordType":{"type":"string"},"phone":{"type":"string"},"userId":{"type":"string"}},"required":["phone","userId","name","password"],"type":"object"},
    "main_case_postWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_case_postWhereInput"},"NOT":{"$ref":"#/definitions/main_case_postWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_case_postWhereInput"},"type":"array"},"admin_user":{"$ref":"#/definitions/main_Admin_userRelationFilter"},"auth":{"$ref":"#/definitions/main_IntNullableFilter"},"author":{"$ref":"#/definitions/main_StringFilter"},"case_category":{"$ref":"#/definitions/main_Case_categoryRelationFilter"},"cate":{"$ref":"#/definitions/main_IntNullableFilter"},"content":{"$ref":"#/definitions/main_StringNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"poster":{"$ref":"#/definitions/main_StringNullableFilter"},"published_at":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"title":{"$ref":"#/definitions/main_StringFilter"}},"type":"object"},
    "main_Admin_userRelationFilter": {"properties":{"is":{"$ref":"#/definitions/main_admin_userWhereInput"},"isNot":{"$ref":"#/definitions/main_admin_userWhereInput"}},"type":"object"},
    "main_case_postUpsertWithWhereUniqueWithoutCase_categoryInput": {"properties":{"create":{"$ref":"#/definitions/main_case_postCreateWithoutCase_categoryInput"},"update":{"$ref":"#/definitions/main_case_postUpdateWithoutCase_categoryInput"},"where":{"$ref":"#/definitions/main_case_postWhereUniqueInput"}},"required":["where","update","create"],"type":"object"},
    "main_case_postUpdateWithWhereUniqueWithoutCase_categoryInput": {"properties":{"data":{"$ref":"#/definitions/main_case_postUpdateWithoutCase_categoryInput"},"where":{"$ref":"#/definitions/main_case_postWhereUniqueInput"}},"required":["where","data"],"type":"object"},
    "main_admin_roleCreateInput": {"properties":{"code":{"type":"string"},"remark":{"type":"string"}},"required":["code","remark"],"type":"object"},
    "main_NestedIntNullableFilter": {"properties":{"equals":{"type":"integer"},"gt":{"type":"integer"},"gte":{"type":"integer"},"in":{"items":{"type":"integer"},"type":"array"},"lt":{"type":"integer"},"lte":{"type":"integer"},"not":{"$ref":"#/definitions/main_NestedIntNullableFilter"},"notIn":{"items":{"type":"integer"},"type":"array"}},"type":"object"},
    "main_Case_categoryRelationFilter": {"properties":{"is":{"$ref":"#/definitions/main_case_categoryWhereInput"},"isNot":{"$ref":"#/definitions/main_case_categoryWhereInput"}},"type":"object"},
    "system_Role_input_object": {"properties":{"code":{"type":"string"},"createTime":{"type":"string"},"deleteTime":{"type":"string"},"remark":{"type":"string"},"updateTime":{"type":"string"}},"type":"object"},
    "main_admin_userWhereUniqueInput": {"properties":{"id":{"type":"integer"}},"type":"object"},
    "main_case_categoryUpdateWithoutCase_postInput": {"properties":{"name":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"}},"type":"object"},
    "main_case_subWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_case_subWhereInput"},"NOT":{"$ref":"#/definitions/main_case_subWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_case_subWhereInput"},"type":"array"},"create_role":{"$ref":"#/definitions/main_StringFilter"},"createdAt":{"$ref":"#/definitions/main_DateTimeFilter"},"deletedAt":{"$ref":"#/definitions/main_DateTimeNullableFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"message":{"$ref":"#/definitions/main_StringFilter"},"target_role":{"$ref":"#/definitions/main_StringFilter"},"type":{"$ref":"#/definitions/main_StringFilter"},"updatedAt":{"$ref":"#/definitions/main_DateTimeFilter"}},"type":"object"},
    "main_case_categoryCreateWithoutCase_postInput": {"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},
    "main_NullableIntFieldUpdateOperationsInput": {"properties":{"decrement":{"type":"integer"},"divide":{"type":"integer"},"increment":{"type":"integer"},"multiply":{"type":"integer"},"set":{"type":"integer"}},"type":"object"},
    "main_admin_roleWhereInput": {"properties":{"AND":{"$ref":"#/definitions/main_admin_roleWhereInput"},"NOT":{"$ref":"#/definitions/main_admin_roleWhereInput"},"OR":{"items":{"$ref":"#/definitions/main_admin_roleWhereInput"},"type":"array"},"code":{"$ref":"#/definitions/main_StringFilter"},"id":{"$ref":"#/definitions/main_IntFilter"},"remark":{"$ref":"#/definitions/main_StringFilter"}},"type":"object"},
    "main_NestedIntFilter": {"properties":{"equals":{"type":"integer"},"gt":{"type":"integer"},"gte":{"type":"integer"},"in":{"items":{"type":"integer"},"type":"array"},"lt":{"type":"integer"},"lte":{"type":"integer"},"not":{"$ref":"#/definitions/main_NestedIntFilter"},"notIn":{"items":{"type":"integer"},"type":"array"}},"type":"object"},
    "main_IntNullableFilter": {"properties":{"equals":{"type":"integer"},"gt":{"type":"integer"},"gte":{"type":"integer"},"in":{"items":{"type":"integer"},"type":"array"},"lt":{"type":"integer"},"lte":{"type":"integer"},"not":{"$ref":"#/definitions/main_NestedIntNullableFilter"},"notIn":{"items":{"type":"integer"},"type":"array"}},"type":"object"},
    "main_case_postCreateNestedManyWithoutCase_categoryInput": {"properties":{"connect":{"$ref":"#/definitions/main_case_postWhereUniqueInput"},"connectOrCreate":{"$ref":"#/definitions/main_case_postCreateOrConnectWithoutCase_categoryInput"},"create":{"$ref":"#/definitions/main_case_postCreateWithoutCase_categoryInput"},"createMany":{"$ref":"#/definitions/main_case_postCreateManyCase_categoryInputEnvelope"}},"type":"object"},
    "main_case_postCreateManyCase_categoryInputEnvelope": {"properties":{"data":{"items":{"$ref":"#/definitions/main_case_postCreateManyCase_categoryInput"},"type":"array"},"skipDuplicates":{"type":"boolean"}},"required":["data"],"type":"object"},
    "main_case_categoryWhereUniqueInput": {"properties":{"id":{"type":"integer"}},"type":"object"},
    "main_admin_userUpdateOneWithoutCase_postNestedInput": {"properties":{"connect":{"$ref":"#/definitions/main_admin_userWhereUniqueInput"},"connectOrCreate":{"$ref":"#/definitions/main_admin_userCreateOrConnectWithoutCase_postInput"},"create":{"$ref":"#/definitions/main_admin_userCreateWithoutCase_postInput"},"delete":{"type":"boolean"},"disconnect":{"type":"boolean"},"update":{"$ref":"#/definitions/main_admin_userUpdateWithoutCase_postInput"},"upsert":{"$ref":"#/definitions/main_admin_userUpsertWithoutCase_postInput"}},"type":"object"},
    "main_admin_role_userCreateInput": {"properties":{"role_id":{"type":"integer"},"user_id":{"type":"integer"}},"required":["role_id","user_id"],"type":"object"},
    "main_case_postCreateWithoutAdmin_userInput": {"properties":{"author":{"type":"string"},"case_category":{"$ref":"#/definitions/main_case_categoryCreateNestedOneWithoutCase_postInput"},"content":{"type":"string"},"poster":{"type":"string"},"published_at":{"format":"DateTime","type":"string"},"title":{"type":"string"}},"required":["title","author"],"type":"object"},
    "main_case_postCreateManyAdmin_userInputEnvelope": {"properties":{"data":{"items":{"$ref":"#/definitions/main_case_postCreateManyAdmin_userInput"},"type":"array"},"skipDuplicates":{"type":"boolean"}},"required":["data"],"type":"object"},
    "main_StringFilter": {"properties":{"contains":{"type":"string"},"endsWith":{"type":"string"},"equals":{"type":"string"},"gt":{"type":"string"},"gte":{"type":"string"},"in":{"items":{"type":"string"},"type":"array"},"lt":{"type":"string"},"lte":{"type":"string"},"not":{"$ref":"#/definitions/main_NestedStringFilter"},"notIn":{"items":{"type":"string"},"type":"array"},"startsWith":{"type":"string"}},"type":"object"},
    "main_admin_userOrderByWithRelationInput": {"properties":{"avatar":{"enum":["asc","desc"],"title":"main_SortOrder"},"case_post":{"$ref":"#/definitions/main_case_postOrderByRelationAggregateInput"},"country_code":{"enum":["asc","desc"],"title":"main_SortOrder"},"created_at":{"enum":["asc","desc"],"title":"main_SortOrder"},"id":{"enum":["asc","desc"],"title":"main_SortOrder"},"name":{"enum":["asc","desc"],"title":"main_SortOrder"},"password":{"enum":["asc","desc"],"title":"main_SortOrder"},"password_salt":{"enum":["asc","desc"],"title":"main_SortOrder"},"password_type":{"enum":["asc","desc"],"title":"main_SortOrder"},"phone":{"enum":["asc","desc"],"title":"main_SortOrder"},"user_id":{"enum":["asc","desc"],"title":"main_SortOrder"},"wx_resp":{"enum":["asc","desc"],"title":"main_SortOrder"}},"type":"object"},
    "main_admin_tokenCreateManyInput": {"properties":{"banned":{"type":"boolean"},"expire_time":{"format":"DateTime","type":"string"},"flush_time":{"format":"DateTime","type":"string"},"id":{"type":"integer"},"token":{"type":"string"},"user_id":{"type":"string"}},"type":"object"},
    "main_case_menuUpdateInput": {"properties":{"api_id":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"create_time":{"$ref":"#/definitions/main_NullableDateTimeFieldUpdateOperationsInput"},"icon":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"is_bottom":{"$ref":"#/definitions/main_IntFieldUpdateOperationsInput"},"label":{"$ref":"#/definitions/main_StringFieldUpdateOperationsInput"},"level":{"$ref":"#/definitions/main_IntFieldUpdateOperationsInput"},"menu_type":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"name":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"parentId":{"$ref":"#/definitions/main_NullableIntFieldUpdateOperationsInput"},"path":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"perms":{"$ref":"#/definitions/main_NullableStringFieldUpdateOperationsInput"},"sort":{"$ref":"#/definitions/main_IntFieldUpdateOperationsInput"}},"type":"object"},
    "main_admin_menu_roleCreateManyInput": {"properties":{"id":{"type":"integer"},"menu_id":{"type":"integer"},"role_id":{"type":"integer"}},"required":["menu_id","role_id"],"type":"object"},
    "main_StringFieldUpdateOperationsInput": {"properties":{"set":{"type":"string"}},"type":"object"},
    "main_admin_apilogCreateInput": {"properties":{"code":{"type":"string"},"createdAt":{"format":"DateTime","type":"string"},"deletedAt":{"format":"DateTime","type":"string"},"ip":{"type":"string"},"method":{"type":"string"},"path":{"type":"string"},"ua":{"type":"string"},"updatedAt":{"format":"DateTime","type":"string"},"userId":{"type":"string"},"userName":{"type":"string"}},"required":["updatedAt","ip","method","path","code","ua","userId","userName"],"type":"object"},
    "main_case_postUpdateWithWhereUniqueWithoutAdmin_userInput": {"properties":{"data":{"$ref":"#/definitions/main_case_postUpdateWithoutAdmin_userInput"},"where":{"$ref":"#/definitions/main_case_postWhereUniqueInput"}},"required":["where","data"],"type":"object"},
    "main_StringNullableFilter": {"properties":{"contains":{"type":"string"},"endsWith":{"type":"string"},"equals":{"type":"string"},"gt":{"type":"string"},"gte":{"type":"string"},"in":{"items":{"type":"string"},"type":"array"},"lt":{"type":"string"},"lte":{"type":"string"},"not":{"$ref":"#/definitions/main_NestedStringNullableFilter"},"notIn":{"items":{"type":"string"},"type":"array"},"startsWith":{"type":"string"}},"type":"object"},
    "casdoor_refreshToken_post_input_object": {"properties":{"refresh_token":{"type":"string"}},"required":["refresh_token"],"type":"object"}
  }
}