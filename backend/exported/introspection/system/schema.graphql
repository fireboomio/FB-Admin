schema {
	query: Query
	mutation: Mutation
}
type Mutation {
	batchInsertRoles_post(Role_input_object: [Role_input_object]!): [batchInsertRoles_post_object]
	batchDeleteRoles_delete(dataNames: [String]!): Boolean
	getRoleBindApis_post(getRoleBindApis_post_input_object: getRoleBindApis_post_input_object!): [Operation_object]
	bindRoleApis_post(bindRoleApis_post_input_object: bindRoleApis_post_input_object!): [String]
}
type Operation_authenticationConfig_object {
	authRequired: Boolean
}
type Operation_cacheConfig_object {
	enabled: Boolean
	maxAge: Int
	public: Boolean
	staleWhileRevalidate: Int
}
type Operation_hooksConfiguration_mockResolve_object {
	enabled: Boolean
	subscriptionPollingIntervalMillis: Int
}
type Operation_hooksConfiguration_object {
	customResolve: Boolean
	httpTransportBeforeRequest: Boolean
	httpTransportOnRequest: Boolean
	mutatingPostResolve: Boolean
	onConnectionInit: Boolean
	httpTransportOnResponse: Boolean
	mockResolve: Operation_hooksConfiguration_mockResolve_object
	mutatingPreResolve: Boolean
	postResolve: Boolean
	preResolve: Boolean
}
type Operation_liveQueryConfig_object {
	enabled: Boolean
	pollingIntervalSeconds: Int
}
type Operation_object {
	updateTime: String
	"""开关 true开 false关"""
	enabled: Boolean
	authenticationConfig: Operation_authenticationConfig_object
	deleteTime: String
	path: String
	"""请求类型 0 queries, 1 mutations, 2subscriptions"""
	operationType: Int
	"""说明"""
	remark: String
	configCustomized: Boolean
	hooksConfiguration: Operation_hooksConfiguration_object
	"""路径"""
	title: String
	"""0-graphql 1-function 2-proxy"""
	engine: Int
	createTime: String
	liveQueryConfig: Operation_liveQueryConfig_object
	cacheConfig: Operation_cacheConfig_object
}
type Query {
	getAllRoles_get: [Role_object]
	getAllPublicApis_get: [Operation_object]
}
type Role_object {
	deleteTime: String
	updateTime: String
	code: String
	remark: String
	createTime: String
}
type batchInsertRoles_post_object {
	dataName: String
	succeed: Boolean
}
input Role_input_object {
	code: String
	remark: String
	createTime: String
	deleteTime: String
	updateTime: String
}
input bindRoleApis_post_input_object {
	rbacType: bindRoleApis_post_rbacType_enum = requireMatchAny
	roleCodes: [String]!
	operationPaths: [String]!
}
input getRoleBindApis_post_input_object {
	rbacType: getRoleBindApis_post_rbacType_enum = requireMatchAny
	roleCode: String!
}
enum bindRoleApis_post_rbacType_enum {
	requireMatchAll
	requireMatchAny
	denyMatchAll
	denyMatchAny
}
enum getRoleBindApis_post_rbacType_enum {
	requireMatchAny
	requireMatchAll
	denyMatchAll
	denyMatchAny
}
