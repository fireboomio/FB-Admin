[
	{
		"content": "mutation Login($code: String = \"\", $password: String = \"\", $countryCode: String = \"CN\", $loginType: String = \"\", $phone: String = \"\", $username: String = \"\") {\n  casdoor_apiLogin(\n    POSTApiLoginInput: {code: $code, password: $password, loginType: $loginType, username: $username, phone: $phone, countryCode: $countryCode}\n  ) {\n    msg\n    success\n    data {\n      accessToken\n      expireIn\n      refreshToken\n    }\n  }\n} ",
		"createTime": "2023-06-21 07:29:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1997304928337920,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/Casdoor/Login",
		"updateTime": "2023-07-14 01:29:40Z"
	},
	{
		"content": "mutation MyQuery($clientId: String!, $clientSecret: String!, $signName: String!, $templateCode: String!) @rbac(requireMatchAny: [admin, user]) {\n  casdoor_apiUpdateProvider(\n    POSTApiUpdate_providerInput: {clientId: $clientId, clientSecret: $clientSecret, signName: $signName, templateCode: $templateCode}\n  ) {\n    msg\n    status\n  }\n}",
		"createTime": "2023-06-21 07:31:33Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1997311100911616,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/Casdoor/UpdateSMSProvider",
		"updateTime": "2023-07-31 07:48:09Z"
	},
	{
		"content": "mutation QueryRaw ($query: String!) {\n\tmain_queryRaw(query: $query)\n}\n",
		"createTime": "2023-06-25 05:44:48Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2019540587708416,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/Statistics/QueryRaw",
		"updateTime": "2023-07-17 03:28:51Z"
	},
	{
		"content": "mutation BindRoleApis($allRoles: [String]!, $apis: [Int]!, $roleCode: String!) {\n  system_bindRoleApis(\n    POSTApiV1RoleBindApiInput: {apis: $apis, allRoles: $allRoles, roleCode: $roleCode}\n  ) {\n    count\n  }\n}",
		"createTime": "2023-03-28 10:10:29Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1516639652216832,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Role/BindRoleApis",
		"updateTime": "2023-07-07 07:43:27Z"
	},
	{
		"content": "mutation CreateOnePost($title: String!, $poster: String, $content: String, $publishedAt: DateTime, $username: String!, $userId: Int !, $cateId: Int !) @rbac(requireMatchAny: [user, admin]) {\n  data: main_createOnecase_post(\n    data: {title: $title, poster: $poster, published_at: $publishedAt, author: $username, content: $content, admin_user: {connect: {id: $userId}}, case_category: {connect: {id: $cateId}}}\n  ) {\n    id\n    title\n    poster\n    published_at\n    author\n    case_category {\n      id\n    }\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776042184704,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\"]",
		"title": "/Post/CreateOne",
		"updateTime": "2023-08-15 02:43:44Z"
	},
	{
		"content": "mutation DeleteOnePost ($id: Int!) @rbac(requireMatchAny: [user,admin]) {\n\tdata: main_deleteOnecase_post(where: {id:$id}) {\n\t\tid\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776043888640,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\"]",
		"title": "/Post/DeleteOne",
		"updateTime": "2023-08-15 02:44:15Z"
	},
	{
		"content": "query GetOnePost($id: Int!) @rbac(requireMatchAny: [user, eeee, admin, abc, abc32]) {\n  data: main_findFirstcase_post(where: {id: {equals: $id}}) {\n    id\n    title\n    poster\n    published_at\n    author\n    content\n    case_category {\n      id\n      name\n    }\n    admin_user {\n      id\n      name\n    }\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776047689728,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"abc\",\"abc32\"]",
		"title": "/Post/GetOne",
		"updateTime": "2023-08-15 02:47:09Z"
	},
	{
		"content": "query GetPostList($take: Int = 10, $skip: Int = 0, $query: main_case_postWhereInput) @rbac(requireMatchAny: [eeee, admin, abc, abc32]) {\n  data: main_findManycase_post(\n    skip: $skip\n    take: $take\n    where: {AND: $query}\n    orderBy: {title: asc}\n  ) {\n    id\n    title\n    poster\n    published_at\n    author\n    content\n    case_category {\n      id\n      name\n    }\n  }\n  total: main_aggregatecase_post(where: {AND: $query}) @transform(get: \"_count.id\") {\n    _count {\n      id\n    }\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776049197056,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"eeee\",\"admin\",\"abc\",\"abc32\"]",
		"title": "/Post/GetList",
		"updateTime": "2023-08-15 02:46:38Z"
	},
	{
		"content": "mutation DeleteManyPost ($ids: [Int]!) @rbac(requireMatchAny: [user,eeee,admin,abc,abc32]) {\n\tdata: main_deleteManycase_post(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776050704384,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"abc\",\"abc32\"]",
		"title": "/Post/DeleteMany",
		"updateTime": "2023-08-15 02:44:00Z"
	},
	{
		"content": "mutation MyQuery ($countryCode: String = \"CN\", $name: String!, $password: String = \"\", $passwordType: String = \"plain\", $phone: String!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: casdoor_apiAddUser(POSTApiAdd_userInput: {phone:$phone,name:$name,password:$password,passwordType:$passwordType,countryCode:$countryCode}) {\n\t\tmsg\n\t\tstatus\n\t}\n}\n",
		"createTime": "2023-03-29 09:36:47Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1522169491947520,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/User/CreateOne",
		"updateTime": "2023-07-31 05:40:03Z"
	},
	{
		"content": "query MyQuery($name: String, $phone: String, $userId: Int, $roleId: Int) @rbac(requireMatchAny: [user, eeee, admin, b1a23, a231, abc1]) {\n  data: main_findFirstadmin_user(\n    where: {OR: [{name: {equals: $name}}, {phone: {equals: $phone}}]}\n  ) {\n    id @export(as: \"userId\")\n    avatar\n    roles: _join @transform(get: \"main_findManyadmin_role_user\") {\n      main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) @transform(get: \"[]._join.main_findFirstadmin_role.code\") {\n        role_id @export(as: \"roleId\")\n        _join {\n          main_findFirstadmin_role(where: {id: {equals: $roleId}}) {\n            code\n          }\n        }\n      }\n    }\n    name\n    phone\n    user_id\n  }\n}",
		"createTime": "2023-03-29 09:36:58Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1522170168147968,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/User/GetOne",
		"updateTime": "2023-08-15 03:16:20Z"
	},
	{
		"content": "query MyQuery @rbac(requireMatchAny: [admin]) {\n\tdata: main_aggregateadmin_user {\n\t\tcount: _count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
		"createTime": "2023-03-30 06:40:18Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1527137852391424,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/User/CountUsers",
		"updateTime": "2023-08-15 02:59:42Z"
	},
	{
		"content": "query MyQuery {\n\tdata: statistics_GetMonthlySales {\n\t\tmonths\n\t\ttotalSales\n\t}\n}\n ",
		"createTime": "2023-04-02 15:23:41Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546182777700352,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/Statistics/MonthlySales",
		"updateTime": "2023-07-30 06:48:52Z"
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetSalesTop10 {\n    shopName\n    totalSales\n  }\n} ",
		"createTime": "2023-04-02 15:24:39Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546186559717376,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/SalesTop10",
		"updateTime": "2023-08-10 09:16:34Z"
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetVisitTrending {\n    count\n    days\n  }\n}",
		"createTime": "2023-04-02 15:24:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546187863556096,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/VisitTrending",
		"updateTime": "2023-08-15 09:50:01Z"
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetSaleTypePercent {\n    totalSales\n    typeId\n    typeName\n  }\n}",
		"createTime": "2023-04-02 15:26:10Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546192569499648,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/SaleTypePercent",
		"updateTime": "2023-08-04 06:14:08Z"
	},
	{
		"content": "query MyQuery($skip: Int!, $take: Int!, $query: main_admin_userWhereInput = {}, $orderBy: [main_admin_userOrderByWithRelationInput], $userId: Int, $roleId: Int) @rbac(requireMatchAny: [user, admin, b1a23, a231, abc1]) {\n  data: main_findManyadmin_user(\n    skip: $skip\n    take: $take\n    where: {AND: $query}\n    orderBy: $orderBy\n  ) {\n    id @export(as: \"userId\")\n    name\n    avatar\n    createdAt: created_at\n    _join {\n      main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) {\n        role_id @export(as: \"roleId\")\n        user_id\n        _join {\n          main_findManyadmin_role(where: {id: {equals: $roleId}}) {\n            id\n            remark\n            code\n          }\n        }\n      }\n    }\n    phone\n    user_id\n  }\n}",
		"createTime": "2023-04-03 08:02:11Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550109012197376,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/User/GetList",
		"updateTime": "2023-08-15 03:01:15Z"
	},
	{
		"content": "query MyQuery {\n  data: main_findManyadmin_role {\n    code\n    remark\n    id\n  }\n}",
		"createTime": "2023-04-03 09:10:15Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550376685862912,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/GetMany",
		"updateTime": "2023-08-15 02:58:10Z"
	},
	{
		"content": "mutation MyQuery($roleId: Int!, $userId: Int = 10) {\n  data: main_deleteOneadmin_role_user(\n    where: {role_id_user_id: {role_id: $roleId, user_id: $userId}}\n  ) {\n    id\n  }\n} ",
		"createTime": "2023-04-03 10:04:05Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550588367863808,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/User/DisconnectRole",
		"updateTime": "2023-08-15 02:59:59Z"
	},
	{
		"content": "mutation MyQuery($userId: Int!, $roleId: Int!) {\n  data: main_createOneadmin_role_user(data: {role_id: $roleId, user_id: $userId}) {\n    id\n  }\n}",
		"createTime": "2023-04-03 10:07:39Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1550602374742016,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/User/ConnectRole",
		"updateTime": "2023-08-15 02:59:33Z"
	},
	{
		"content": "query MyQuery($userId: Int!, $roleId: Int @internal) {\n  data: main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) @transform(get: \"[].data\") {\n    role_id @export(as: \"roleId\")\n    data: _join @transform(get: \"main_findFirstadmin_role\") {\n      main_findFirstadmin_role(where: {id: {equals: $roleId}}) {\n        remark\n        code\n        id\n      }\n    }\n  }\n}",
		"createTime": "2023-04-03 15:29:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1551869868703744,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/User/GetUserRole",
		"updateTime": "2023-08-15 03:16:37Z"
	},
	{
		"content": "mutation MyQuery ($code: String!, $remark: String!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_createOneadmin_role(data: {code:$code,remark:$remark}) {\n\t\tid\n\t\tcode\n\t\tremark\n\t}\n}\n",
		"createTime": "2023-04-04 01:18:27Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554183815364608,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Role/AddOne",
		"updateTime": "2023-08-15 02:56:38Z"
	},
	{
		"content": "mutation MyQuery($code: String!) @rbac(requireMatchAny: [user, eeee, admin, b1a23, a231, abc1]) {\n  data: main_deleteOneadmin_role(where: {code: $code}) {\n    id @export(as: \"role_id\")\n  }\n  \n}",
		"createTime": "2023-04-04 01:18:31Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554184073641984,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Role/DeleteOne",
		"updateTime": "2023-08-15 02:57:38Z"
	},
	{
		"content": "mutation MyQuery ($remark: String, $id: Int!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_updateOneadmin_role(data: {remark:{set:$remark}}, where: {id:$id}) {\n\t\tcode\n\t\tid\n\t\tremark\n\t}\n}\n",
		"createTime": "2023-04-04 01:19:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554189253935104,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Role/UpdateOne",
		"updateTime": "2023-08-15 02:58:37Z"
	},
	{
		"content": "mutation MyQuery($ids: [Int]) {\n  data: main_deleteManyadmin_role(where: {id: {in: $ids}}) {\n    count\n  }\n  data1:main_deleteManyadmin_role_user(where: {role_id: {in: $ids}}) {\n    count\n  }\n  data2:main_deleteManyadmin_menu_role(where: {role_id: {in: $ids}}) {\n    count\n  }\n}",
		"createTime": "2023-04-04 01:56:47Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554334568742912,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Role/DeleteMany",
		"updateTime": "2023-08-15 02:57:30Z"
	},
	{
		"content": "query GetRoleList ($take: Int = 10, $skip: Int = 0, $orderBy: [main_admin_roleOrderByWithRelationInput], $query: main_admin_roleWhereInput) @rbac(requireMatchAny: [user,admin,b1a23,a231,abc1]) {\n\tdata: main_findManyadmin_role(skip: $skip, take: $take, orderBy: $orderBy, where: {AND:$query}) {\n\t\tid\n\t\tcode\n\t\tremark\n\t}\n\ttotal: main_aggregateadmin_role(where: {AND:$query}) @transform(get: \"_count.id\") {\n\t\t_count {\n\t\t\tid\n\t\t}\n\t}\n}\n",
		"createTime": "2023-04-04 02:37:20Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554494005051392,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Role/GetList",
		"updateTime": "2023-08-15 02:58:04Z"
	},
	{
		"content": "mutation CreateOneMenu($label: String!, $path: String!, $icon: String, $level: Int!, $sort: Int!, $parentId: Int, $menuType: String!, $perms: String = \"\", $apiId: String = \"\", $create_time: DateTime! @injectCurrentDateTime(format: ISO8601)) @rbac(requireMatchAny: [admin, b1a23, a231, abc1]) {\n  data: main_createOnecase_menu(\n    data: {label: $label, path: $path, icon: $icon, level: $level, sort: $sort, parentId: $parentId, menu_type: $menuType, perms: $perms, api_id: $apiId, create_time: $create_time}\n  ) {\n    id\n  }\n}",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625692434432,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Menu/CreateOne",
		"updateTime": "2023-08-15 02:51:36Z"
	},
	{
		"content": "query MyQuery($menuIds: [Int]!) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu(where: {id: {in: $menuIds}}) @transform(get: \"[].api_id\") {\n    api_id\n  }\n}",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625694728192,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/DeleteOne",
		"updateTime": "2023-08-15 02:52:34Z"
	},
	{
		"content": "mutation UpdateOneMenu($id: Int!, $label: String, $path: String, $icon: String, $sort: Int, $level: Int, $parentId: Int ) @rbac(requireMatchAny: [eeee, admin, b1a23, a231, abc1]) {\n  data: main_updateOnecase_menu(\n    data: {label: {set: $label}, path: {set: $path}, icon: {set: $icon}, sort: {set: $sort}, level: {set: $level}, parentId: {set: $parentId}}\n    where: {id: $id}\n  ) {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n  }\n}",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625695514624,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Menu/UpdateOne",
		"updateTime": "2023-08-15 02:54:56Z"
	},
	{
		"content": "query GetMenuList($take: Int = 10, $skip: Int = 0, $orderBy: [main_case_menuOrderByWithRelationInput], $query: main_case_menuWhereInput) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu(\n    skip: $skip\n    take: $take\n    orderBy: $orderBy\n    where: {AND: $query}\n  ) {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n  }\n  total: main_aggregatecase_menu(where: {AND: $query}) @transform(get: \"_count.id\") {\n    _count {\n      id\n    }\n  }\n} ",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625697284096,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/GetList",
		"updateTime": "2023-08-15 02:53:16Z"
	},
	{
		"content": "query GetOneMenu ($id: Int!) @rbac(requireMatchAny: [admin,b1a23,a231,abc1]) {\n\tdata: main_findFirstcase_menu(where: {id:{equals:$id}}) {\n\t\tid\n\t\tparentId\n\t\tlabel\n\t\tpath\n\t\ticon\n\t\tsort\n\t\tlevel\n\t}\n}\n",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625699119104,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Menu/GetOne",
		"updateTime": "2023-08-15 02:54:44Z"
	},
	{
		"content": "mutation DeleteManyMenu ($ids: [Int]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_deleteManycase_menu(where: {id:{in:$ids}}) {\n\t\tcount\n\t}\n}\n",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625701085184,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/DeleteMany",
		"updateTime": "2023-08-15 02:51:45Z"
	},
	{
		"content": "query GetManyMenu @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n    is_bottom\n    menu_type\n    perms\n    api_id\n    create_time\n  }\n}",
		"createTime": "2023-04-04 03:10:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554625702789120,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/GetMany",
		"updateTime": "2023-08-15 02:54:04Z"
	},
	{
		"content": "mutation UpdateOneMenu($id: Int!, $label: String, $path: String, $icon: String, $sort: Int, $level: Int, $parentId: Int ) @rbac(requireMatchAny: [eeee, admin, b1a23, a231, abc1]) {\n  data: main_updateOnecase_menu(\n    data: {label: {set: $label}, path: {set: $path}, icon: {set: $icon}, sort: {set: $sort}, level: {set: $level}, parentId: {set: $parentId}}\n    where: {id: $id}\n  ) {\n    id\n    parentId\n    label\n    path\n    icon\n    sort\n    level\n  }\n}",
		"createTime": "2023-04-04 03:51:04Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1554783933628416,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Operation/GetMany",
		"updateTime": "2023-08-15 02:55:01Z"
	},
	{
		"content": "mutation MyQuery($dest: String!, $countryCode: String = \"CN\") {\n  data: casdoor_apiSendVerificationCode(\n    POSTApiSend_verification_codeInput: {dest: $dest, countryCode: $countryCode}\n  ) {\n    msg\n  }\n}",
		"createTime": "2023-06-25 06:38:26Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2019751503921152,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Casdoor/SendCode",
		"updateTime": "2023-07-14 01:30:11Z"
	},
	{
		"content": "mutation MyQuery ($data: [main_admin_permissionCreateManyInput]!) @rbac(requireMatchAny: [admin]) {\n\tdata: main_createManyadmin_permission(skipDuplicates: true, data: $data) {\n\t\tcount\n\t}\n}\n",
		"createTime": "2023-06-30 09:23:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2048711798882304,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Perm/CreateMany",
		"updateTime": "2023-08-15 02:55:39Z"
	},
	{
		"content": "query MyQuery($pid: Int!) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu(where: {parentId: {equals: $pid}}) {\n    id\n    label\n    level\n    name\n    path\n    sort\n  }\n}",
		"createTime": "2023-07-03 05:30:11Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2064781612351488,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/GetChildrenMenus",
		"updateTime": "2023-08-15 02:52:50Z"
	},
	{
		"content": "query MyQuery ($pid: Int) @rbac(requireMatchAny: [admin]) {\n\tdata: main_findManycase_menu(where: {level:{equals:1}}, orderBy: {sort:asc}) {\n\t\tid @export(as: \"pid\")\n\t\tpath\n\t\tlabel\n\t\tname\n\t\tsort\n\t\tchildren: _join @transform(get: \"main_findManycase_menu\") {\n\t\t\tmain_findManycase_menu(where: {parentId:{equals:$pid}}, orderBy: {sort:asc}) {\n\t\t\t\tid\n\t\t\t\tpath\n\t\t\t\tname\n\t\t\t\tlabel\n\t\t\t\tsort\n\t\t\t}\n\t\t}\n\t}\n}\n ",
		"createTime": "2023-07-04 05:02:57Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2070336836009984,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/GetMenus",
		"updateTime": "2023-08-15 03:22:51Z"
	},
	{
		"content": "query MyQuery ($id: Int!) @rbac(requireMatchAny: [user,eeee,admin,b1a23,a231,abc1]) {\n\tdata: main_findFirstadmin_role(where: {id:{equals:$id}}) {\n\t\tcode\n\t}\n}\n",
		"createTime": "2023-07-04 05:37:28Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2070472516632576,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/Role/GetOne",
		"updateTime": "2023-08-15 02:58:16Z"
	},
	{
		"content": "query MyQuery {\n  data: main_findManyadmin_permission {\n    createdAt\n    enabled\n    method\n    path\n  }\n}",
		"createTime": "2023-07-05 06:37:06Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2076369364385792,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Perm/GetBindPerms",
		"updateTime": "2023-08-15 02:55:45Z"
	},
	{
		"content": "query MyQuery($code: [String]!, $roleId: Int @internal, $menuId: Int @internal) {\n  data: main_findManyadmin_role(where: {code: {in: $code}}) {\n    id @export(as: \"roleId\")\n    _join {\n      data: main_findManyadmin_menu_role(where: {role_id: {equals: $roleId}}) @transform(get: \"[]._join.main_findFirstcase_menu.perms\") {\n        menu_id @export(as: \"menuId\")\n        _join {\n          main_findFirstcase_menu(where: {id: {equals: $menuId}}) {\n            perms\n          }\n        }\n      }\n    }\n  }\n} ",
		"createTime": "2023-07-06 08:48:26Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2082548108623872,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Perm/GetRolePerms",
		"updateTime": "2023-08-15 03:16:52Z"
	},
	{
		"content": "query MyQuery($userId: String!, $id: Int @internal, $roleId: Int @internal) {\n  data: main_findFirstadmin_user(where: {user_id: {equals: $userId}}) @transform(get: \"_join.main_findManyadmin_role_user\") {\n    id @export(as: \"id\")\n    _join {\n      main_findManyadmin_role_user(where: {user_id: {equals: $id}}) @transform(get: \"[]._join\") {\n        role_id @export(as: \"roleId\")\n        _join @transform(get: \"main_findFirstadmin_role.code\") {\n          main_findFirstadmin_role(where: {id: {equals: $roleId}}) {\n            code\n          }\n        }\n      }\n    }\n  }\n} ",
		"createTime": "2023-07-11 02:34:27Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2109389094518784,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Casdoor/GetRolesById",
		"updateTime": "2023-08-15 03:14:51Z"
	},
	{
		"content": "query MyQuery($roleId: Int!) {\n  data: main_findManyadmin_menu_role(where: {role_id: {equals: $roleId}}) @transform(get: \"[].menu_id\") {\n    menu_id\n  }\n}",
		"createTime": "2023-07-17 04:30:49Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2143820475138048,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/GetRoleMenuId",
		"updateTime": "2023-08-15 02:58:21Z"
	},
	{
		"content": "query MyQuery($level: Int, $pid: Int) {\n  data: main_findManycase_menu(where: {OR: [{level: {equals: $level}}, {parentId: {equals: $pid}}]}) {\n    id\n    label\n    is_bottom\n  }\n}",
		"createTime": "2023-07-17 04:50:33Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2143898110918656,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Menu/GetMenuByLevelOrPid",
		"updateTime": "2023-08-15 02:54:25Z"
	},
	{
		"content": "mutation MyQuery($data: [main_admin_menu_roleCreateManyInput]!) {\n  data: main_createManyadmin_menu_role(data: $data) {\n    count\n  }\n}",
		"createTime": "2023-07-17 09:21:03Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2144961756004352,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/BindMenus",
		"updateTime": "2023-08-15 02:57:01Z"
	},
	{
		"content": "query MyQuery($menuIds: [Int]!) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_menu(where: {id: {in: $menuIds}}) @transform(get: \"[].api_id\") {\n    api_id\n  }\n} ",
		"createTime": "2023-07-17 11:21:42Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2145436175368192,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/GetApisByMenus",
		"updateTime": "2023-08-15 02:53:27Z"
	},
	{
		"content": "mutation MyQuery($roleId: Int!, $menuIds: [Int]!) {\n  main_deleteManyadmin_menu_role(\n    where: {role_id: {equals: $roleId}, menu_id: {in: $menuIds}}\n  ) {\n    count\n  }\n}",
		"createTime": "2023-07-17 12:57:29Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2145812813840384,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/UnBindMenus",
		"updateTime": "2023-08-15 02:58:29Z"
	},
	{
		"content": "mutation MyQuery($apis: [Int]!, $roleCode: String!) {\n  system_unBindRoleApis(\n    POSTApiV1RoleUnbindApiInput: {roleCode: $roleCode, apis: $apis}\n  ) {\n    count\n  }\n}",
		"createTime": "2023-07-18 01:00:08Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2148654364557312,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Role/UnBindRoleApis",
		"updateTime": "2023-07-18 08:48:07Z"
	},
	{
		"content": "query MyQuery @rbac(requireMatchAny: [admin]) {\n  data: system_getAllApis {\n    path: title\n    id\n  }\n}",
		"createTime": "2023-07-20 03:33:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2160583962198016,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Menu/GetApiList",
		"updateTime": "2023-07-25 09:13:50Z"
	},
	{
		"content": "mutation MyQuery($refreshToken: String!) {\n  data: casdoor_apiRefreshToken(\n    POSTApiRefresh_tokenInput: {refresh_token: $refreshToken}\n  ) {\n    msg\n    success\n    data {\n      refreshToken\n      accessToken\n      expireIn\n    }\n  }\n}",
		"createTime": "2023-07-20 06:11:58Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2161205161492480,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Casdoor/RefreshToken",
		"updateTime": "2023-07-21 06:18:32Z"
	},
	{
		"content": "query MyQuery  @internalOperation{\n  data:main_findFirstadmin_dic(where: {id: {equals: 1}}) {\n    id\n    isOpen\n  }\n} ",
		"createTime": "2023-07-24 06:14:06Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2183862827417600,
		"illegal": false,
		"isPublic": false,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Log/GetIsOpen",
		"updateTime": "2023-08-15 02:51:09Z"
	},
	{
		"content": "mutation MyQuery($set: Boolean = false) @rbac(requireMatchAny: [admin, user]) {\n  data:main_updateOneadmin_dic(where: {id: 1}, data: {isOpen: {set: $set}}) {\n    id\n    isOpen\n  }\n}",
		"createTime": "2023-07-24 06:15:26Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2183868033925120,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/System/Log/ChangeOpen",
		"updateTime": "2023-08-15 02:50:07Z"
	},
	{
		"content": "query MyQuery($skip: Int = 5, $take: Int = 10, $orderBy: [main_admin_apilogOrderByWithRelationInput]) {\n  data: main_findManyadmin_apilog(skip: $skip, take: $take, orderBy: $orderBy) {\n    id\n    method\n    ip\n    path\n    updatedAt\n    ua\n    userName\n    userId\n  }\n}",
		"createTime": "2023-07-24 07:40:46Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2184203604787200,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Log/GetLog",
		"updateTime": "2023-08-04 05:48:25Z"
	},
	{
		"content": "mutation MyQuery($ip: String = \"\", $method: String = \"\", $path: String = \"\", $updatedAt: DateTime = \"\", $code: String = \"\", $ua: String = \"\", $userId: String = \"\", $userName: String = \"\") {\n  data:main_createOneadmin_apilog(\n    data: {updatedAt: $updatedAt, ip: $ip, method: $method, path: $path, code: $code, ua: $ua, userId: $userId, userName: $userName}\n  ) {\n    ip\n    method\n    path\n    id\n    updatedAt\n    ua\n    userId\n    userName\n  }\n} ",
		"createTime": "2023-07-24 08:20:06Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2184358281609216,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Log/CreateLog",
		"updateTime": "2023-08-15 02:50:28Z"
	},
	{
		"content": "mutation MyQuery ($id: Int = 10) @rbac(requireMatchAny: [admin,b1a23,a231,abc1]) {\n\tmain_deleteOneadmin_user(where: {id:$id}) {\n\t\tid\n\t\tname\n\t\tpassword\n\t\tpassword_salt\n\t\tpassword_type\n\t\tphone\n\t\tuser_id\n\t}\n}\n",
		"createTime": "2023-07-25 03:32:33Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2188889871417344,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"b1a23\",\"a231\",\"abc1\"]",
		"title": "/System/User/DeleteOne",
		"updateTime": "2023-08-15 02:59:52Z"
	},
	{
		"id": 2190175848103936,
		"method": "GET",
		"restUrl": "",
		"operationType": "queries",
		"isPublic": true,
		"remark": "",
		"illegal": false,
		"liveQuery": true,
		"title": "/System/Sub/SSE",
		"content": "query MyQuery($roles: String!) {\n  data: main_findManycase_sub(where: {target_role: {equals: $roles}}) {\n    message\n    updatedAt\n    target_role\n    create_role\n    id\n    type\n  }\n}",
		"enabled": true,
		"createTime": "2023-07-25 08:59:35Z",
		"updateTime": "2023-08-15 09:53:38Z",
		"deleteTime": "",
		"roleType": "",
		"roles": ""
	},
	{
		"content": "query MyQuery {\n  logNum: main_aggregateadmin_apilog {\n    _count {\n      id\n    }\n  }\n}",
		"createTime": "2023-07-26 02:52:49Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2194395924856832,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Log/GetAllLog",
		"updateTime": "2023-08-04 05:48:00Z"
	},
	{
		"content": "mutation MyQuery($create_role: String = \"\", $message: String = \"\", $target_role: String = \"\", $updatedAt: DateTime = \"\", $type: String = \"\") @internalOperation @rbac(requireMatchAny: [admin]) {\n  main_createOnecase_sub(\n    data: {updatedAt: $updatedAt, message: $message, create_role: $create_role, target_role: $target_role, type: $type}\n  ) {\n    id\n    message\n    target_role\n    updatedAt\n    create_role\n  }\n}",
		"createTime": "2023-07-26 09:15:07Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2195899209023488,
		"illegal": false,
		"isPublic": false,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Sub/CreateSub",
		"updateTime": "2023-08-15 02:59:05Z"
	},
	{
		"content": "query MyQuery() @rbac(requireMatchAny: [admin]) {\n  data:main_aggregateadmin_user {\n    _count {\n      id\n    \n    }\n  }\n}",
		"createTime": "2023-07-27 03:19:41Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2200163880992768,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/User/GetAllList",
		"updateTime": "2023-08-15 03:00:20Z"
	},
	{
		"content": "query MyQuery($roleId: Int @internal, $userId: Int @internal, $code: String!) {\n  data:main_findManyadmin_role(where: {code: {equals: $code}}) {\n    id @export(as: \"roleId\")\n    remark\n    code\n    role:_join {\n      main_findManyadmin_role_user(where: {role_id: {equals: $roleId}}) {\n        role_id\n        user_id @export(as: \"userId\")\n        _join {\n          user:main_findManyadmin_user(where: {id: {equals: $userId}}) {\n            id\n            name\n            avatar\n            created_at\n          }\n        }\n      }\n    }\n  }\n}",
		"createTime": "2023-07-27 06:48:09Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2200983612096512,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/User/GetRoleUsers",
		"updateTime": "2023-08-15 03:02:06Z"
	},
	{
		"content": "query MyQuery($name: String = \"\", $phone: String = \"\", $id: Int = 10, $userId: Int @internal, $roleId: Int @internal) {\n  data:main_findManyadmin_user(\n    where: {name: {contains: $name, endsWith: \"\"}, phone: {endsWith: \"\", contains: $phone}}\n  ) {\n    id @export(as: \"userId\")\n    name\n    phone\n    createdAt: created_at\n    avatar\n    user_role: _join {\n      data:main_findManyadmin_role_user(where: {user_id: {equals: $userId}}) {\n        role_id @export(as: \"roleId\")\n        role: _join {\n          main_findManyadmin_role(where: {id: {equals: $roleId}}) {\n            code\n            id\n            remark\n          }\n        }\n      }\n    }\n  }\n  data1:main_findUniqueadmin_user(where: {id: $id}) {\n    id\n    name\n    phone\n   createdAt: created_at\n    avatar\n  }\n}",
		"createTime": "2023-07-27 07:24:58Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2201128415526912,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/User/GetLikeUser",
		"updateTime": "2023-08-15 03:00:46Z"
	},
	{
		"content": "query MyQuery($ip: String = \"\", $method: String = \"\", $path: String = \"\", $id: Int = 10, $name: String = \"\") {\n  main_findManyadmin_apilog(\n    where: {method: {contains: $method}, path: {contains: $path}, updatedAt: {}, ip: {contains: $ip}, userName: {contains: $name}}\n  ) {\n    id\n    method\n    ip\n    path\n    ua\n    updatedAt\n    userName\n  }\n  main_findUniqueadmin_apilog(where: {id: $id}) {\n    id\n    ip\n    method\n    path\n    ua\n    updatedAt\n    userName\n  }\n}",
		"createTime": "2023-07-28 02:54:37Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2205727656050688,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/Log/GetLikeLog",
		"updateTime": "2023-08-04 05:48:07Z"
	},
	{
		"content": "query MyQuery($author: String = \"\", $content: String = \"\", $title: String = \"\", $id: Int ) {\n  data:main_findManycase_post(\n    where: {author: {contains: $author, endsWith: \"\"}, content: {contains: $content, endsWith: \"\"}, title: {contains: $title, endsWith: \"\"}}\n  ) {\n    author\n    content\n    id\n    published_at\n    title\n    poster\n    case_category {\n      name\n      id\n    }\n  }\n  data1:main_findUniquecase_post(where: {id: $id}) {\n    author\n    content\n    id\n    published_at\n    title\n    poster\n    case_category {\n      id\n      name\n    }\n  }\n}",
		"createTime": "2023-07-28 03:00:17Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2205749924200448,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/Post/GetLikeList",
		"updateTime": "2023-08-15 02:46:00Z"
	},
	{
		"content": "query MyQuery @rbac(requireMatchAny: [admin]) {\n  data:main_findManyadmin_provider {\n    client_id\n    client_secret\n    created_time\n    name\n    owner\n    sign_name\n    template_code\n    type\n  }\n}",
		"createTime": "2023-07-28 05:58:42Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2206451499270144,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/Casdoor/GetSMSProvider",
		"updateTime": "2023-08-15 02:41:34Z"
	},
	{
		"content": "mutation MyQuery($avatar: String = \"\", $id: Int = 10, $password: String!, $phone: String = \"\", $name: String = \"\", $userId: String!) {\n  casdoor:casdoor_apiUpdateUser(\n    POSTApiUpdate_userInput: {password: $password, name: $name, phone: $phone, userId: $userId}\n  ) {\n    msg\n    status\n  }\n  data:main_updateOneadmin_user(\n    data: {avatar: {set: $avatar}, name: {set: $name}, phone: {set: $phone}}\n    where: {id: $id}\n  ) {\n    avatar\n  }\n}",
		"createTime": "2023-07-31 07:48:22Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2223869621633024,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/User/UpdateOne",
		"updateTime": "2023-08-15 03:02:50Z"
	},
	{
		"content": "query MyQuery($userId: String = \"\") @rbac(requireMatchAny: [admin, user]) {\n  data:main_findManyadmin_user(where: {user_id: {equals: $userId}}) {\n    id\n    name\n    phone\n    avatar\n    user_id\n  }\n}",
		"createTime": "2023-07-31 08:55:09Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2224132262789120,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/System/User/GetUserByUserId",
		"updateTime": "2023-08-15 03:02:14Z"
	},
	{
		"content": "query MyQuery($take: Int = 10, $skip: Int = 0) {\n  data:main_findManycase_category(skip: $skip, take: $take) {\n    id\n    name\n    case_post {\n      author\n      content\n      id\n      published_at\n      poster\n      title\n    }\n  }\n}",
		"createTime": "2023-08-01 06:53:01Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2229314284355584,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"admin\"]",
		"title": "/Post/GetCategory",
		"updateTime": "2023-08-15 02:44:50Z"
	},
	{
		"content": "mutation MyQuery($name: String = \"\",) {\n  data:main_createOnecase_category(data: {name: $name}) {\n    id\n    name\n  }\n}",
		"createTime": "2023-08-01 07:09:34Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2229379416915968,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/CreateCategory",
		"updateTime": "2023-08-15 02:42:02Z"
	},
	{
		"content": "query MyQuery($equals: String!) @rbac(requireMatchAny: [admin]) {\n  data: main_findManycase_category(where: {name: {equals: $equals}}) @transform(get: \"[].case_post\") {\n    case_post {\n      author\n      cate\n      content\n      poster\n      id\n      title\n      published_at\n    }\n  }\n}",
		"createTime": "2023-08-01 08:31:22Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2229701011439616,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/Post/GetPostByCate",
		"updateTime": "2023-08-15 02:39:32Z"
	},
	{
		"content": "mutation MyQuery($id: Int = 10) {\n  data:main_deleteOnecase_category(where: {id: $id}) {\n    id\n    name\n  }\n}",
		"createTime": "2023-08-01 08:34:11Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2229712084008960,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/DeleteCategory",
		"updateTime": "2023-08-15 02:42:28Z"
	},
	{
		"content": "query MyQuery($id: Int = 10) {\n  data:main_findManyadmin_user(where: {id: {equals: $id}}) {\n    case_post {\n      cate\n      content\n      id\n      poster\n      published_at\n      title\n    }\n  }\n} ",
		"createTime": "2023-08-01 08:36:19Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2229720533303296,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/UpdateCategory",
		"updateTime": "2023-08-15 02:47:30Z"
	},
	{
		"content": "query MyQuery($id: Int = 10) {\n  data:main_findManyadmin_user(where: {id: {equals: $id}}) {\n    case_post {\n      cate\n      content\n      id\n      poster\n      published_at\n      title\n    }\n  }\n} ",
		"createTime": "2023-08-01 09:09:23Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2229850520223744,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"user\",\"eeee\",\"admin\",\"abc\",\"abc32\"]",
		"title": "/Post/UpdateOne",
		"updateTime": "2023-08-15 02:48:45Z"
	},
	{
		"content": "mutation MyQuery($id: Int = 10, $name: String = \"\") {\n data:main_updateOnecase_category(data: {name: {set: $name}}, where: {id: $id}) {\n    id\n    name\n  }\n}",
		"createTime": "2023-08-01 09:23:55Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2229907674038272,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/GetPostByAuthor",
		"updateTime": "2023-08-15 02:48:22Z"
	},
	{
		"content": "query MyQuery($equals: String = \"\") {\n  data:main_findManyadmin_user(where: {name: {equals: $equals}}) {\n    avatar\n    country_code\n    created_at\n    id\n    name\n    phone\n    user_id\n  }\n} ",
		"createTime": "2023-08-04 08:22:40Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2246653755195392,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/System/User/GetUserInfo",
		"updateTime": "2023-08-15 03:02:26Z"
	},
	{
		"content": "mutation MyQuery($id: Int!) @rbac(requireMatchAny: [admin]) {\n  data:main_deleteOneadmin_apilog(where: {id: $id}) {\n    id\n  }\n}",
		"createTime": "2023-08-04 10:00:50Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2247039773638656,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/Log/DeleteOne",
		"updateTime": "2023-08-15 02:50:47Z"
	},
	{
		"content": "mutation MyQuery($equals: [Int] = 10) @rbac(requireMatchAny: [admin, user]) {\n  main_deleteManyadmin_apilog(where: {id: {in: $equals}}) {\n    count\n  }\n}",
		"createTime": "2023-08-04 10:20:00Z",
		"deleteTime": "",
		"enabled": true,
		"id": 2247115106156544,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\",\"user\"]",
		"title": "/System/Log/DeleteLog",
		"updateTime": "2023-08-04 10:23:04Z"
	}
]